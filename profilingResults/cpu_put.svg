<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (7,944 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=29962] (2,035 samples, 25.62%)</title><rect x="10.0" y="947.0" width="302.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0">[NIO Selector #0 tid=29962]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="10.4" y="931.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.4" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="10.7" y="931.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.7" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,027 samples, 25.52%)</title><rect x="11.2" y="931.0" width="301.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (60 samples, 0.76%)</title><rect x="11.8" y="915.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 0.74%)</title><rect x="11.9" y="899.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.9" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="11.9" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.64%)</title><rect x="12.2" y="883.0" width="7.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="12.2" y="867.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (48 samples, 0.60%)</title><rect x="12.7" y="867.0" width="7.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="13.9" y="851.0" width="5.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="13.9" y="835.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="16.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="14.9" y="819.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="17.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.40%)</title><rect x="15.1" y="803.0" width="4.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="15.2" y="787.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.37%)</title><rect x="15.5" y="771.0" width="4.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="16.2" y="755.0" width="3.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.23%)</title><rect x="17.1" y="739.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="17.3" y="723.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="20.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="18.5" y="707.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="21.5" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="19.8" y="883.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="22.8" y="894.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.05%)</title><rect x="20.1" y="883.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,963 samples, 24.71%)</title><rect x="20.7" y="915.0" width="291.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,963 samples, 24.71%)</title><rect x="20.7" y="899.0" width="291.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.7" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,897 samples, 23.88%)</title><rect x="20.7" y="883.0" width="281.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.7" y="894.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,869 samples, 23.53%)</title><rect x="21.6" y="867.0" width="277.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="878.0">one/nio/http/HttpSession.handleParsed..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,869 samples, 23.53%)</title><rect x="21.6" y="851.0" width="277.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.6" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (12 samples, 0.15%)</title><rect x="21.6" y="835.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.10%)</title><rect x="22.0" y="819.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.10%)</title><rect x="22.0" y="803.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.10%)</title><rect x="22.0" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.10%)</title><rect x="22.0" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="22.9" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (1,857 samples, 23.38%)</title><rect x="23.4" y="835.0" width="275.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="846.0">ru/mail/polis/service/AsyncHttpServic..</text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="23.5" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="23.5" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (1,852 samples, 23.31%)</title><rect x="24.1" y="819.0" width="275.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.1" y="830.0">ru/mail/polis/service/AsyncHttpServic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (370 samples, 4.66%)</title><rect x="24.3" y="803.0" width="54.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.3" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (356 samples, 4.48%)</title><rect x="25.3" y="787.0" width="52.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.3" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.11%)</title><rect x="25.3" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.06%)</title><rect x="25.9" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="25.9" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="25.9" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="25.9" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (347 samples, 4.37%)</title><rect x="26.6" y="771.0" width="51.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.6" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (347 samples, 4.37%)</title><rect x="26.6" y="755.0" width="51.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.6" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (344 samples, 4.33%)</title><rect x="27.1" y="739.0" width="51.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.1" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (339 samples, 4.27%)</title><rect x="27.8" y="723.0" width="50.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.8" y="734.0">one/n..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="28.1" y="707.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="31.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="28.1" y="691.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="31.1" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.09%)</title><rect x="28.1" y="675.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="31.1" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="28.6" y="659.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="31.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="28.9" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="31.9" y="654.0"></text>
</g>
<g>
<title>__send (2 samples, 0.03%)</title><rect x="29.3" y="675.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="32.3" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="29.6" y="707.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.6" y="718.0"></text>
</g>
<g>
<title>__send (325 samples, 4.09%)</title><rect x="29.9" y="707.0" width="48.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.9" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (307 samples, 3.86%)</title><rect x="32.6" y="691.0" width="45.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="35.6" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (307 samples, 3.86%)</title><rect x="32.6" y="675.0" width="45.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="35.6" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (300 samples, 3.78%)</title><rect x="33.6" y="659.0" width="44.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="36.6" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (300 samples, 3.78%)</title><rect x="33.6" y="643.0" width="44.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="36.6" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (298 samples, 3.75%)</title><rect x="33.9" y="627.0" width="44.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="36.9" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (297 samples, 3.74%)</title><rect x="34.1" y="611.0" width="44.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="37.1" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (289 samples, 3.64%)</title><rect x="35.3" y="595.0" width="42.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="38.3" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (289 samples, 3.64%)</title><rect x="35.3" y="579.0" width="42.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="38.3" y="590.0">[unk..</text>
</g>
<g>
<title>[unknown] (268 samples, 3.37%)</title><rect x="38.4" y="563.0" width="39.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.4" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (250 samples, 3.15%)</title><rect x="41.0" y="547.0" width="37.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="44.0" y="558.0">[un..</text>
</g>
<g>
<title>[unknown] (241 samples, 3.03%)</title><rect x="42.4" y="531.0" width="35.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="45.4" y="542.0">[un..</text>
</g>
<g>
<title>[unknown] (225 samples, 2.83%)</title><rect x="44.8" y="515.0" width="33.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="47.8" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.58%)</title><rect x="47.7" y="499.0" width="30.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="50.7" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.52%)</title><rect x="48.5" y="483.0" width="29.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="51.5" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (194 samples, 2.44%)</title><rect x="49.4" y="467.0" width="28.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="52.4" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (187 samples, 2.35%)</title><rect x="50.4" y="451.0" width="27.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="53.4" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (186 samples, 2.34%)</title><rect x="50.6" y="435.0" width="27.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="53.6" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.28%)</title><rect x="51.3" y="419.0" width="26.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="54.3" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (176 samples, 2.22%)</title><rect x="52.0" y="403.0" width="26.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.0" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (174 samples, 2.19%)</title><rect x="52.3" y="387.0" width="25.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="55.3" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.13%)</title><rect x="53.1" y="371.0" width="25.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="56.1" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.06%)</title><rect x="53.8" y="355.0" width="24.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="56.8" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.99%)</title><rect x="54.7" y="339.0" width="23.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="57.7" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.94%)</title><rect x="55.3" y="323.0" width="22.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.3" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.84%)</title><rect x="56.5" y="307.0" width="21.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="59.5" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.83%)</title><rect x="56.6" y="291.0" width="21.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="59.6" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.80%)</title><rect x="56.9" y="275.0" width="21.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="59.9" y="286.0">[..</text>
</g>
<g>
<title>[unknown] (134 samples, 1.69%)</title><rect x="58.3" y="259.0" width="19.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="61.3" y="270.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.62%)</title><rect x="59.0" y="243.0" width="19.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="62.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.61%)</title><rect x="59.2" y="227.0" width="19.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="62.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.60%)</title><rect x="59.3" y="211.0" width="18.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="62.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.54%)</title><rect x="60.1" y="195.0" width="18.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="63.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.45%)</title><rect x="61.1" y="179.0" width="17.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="64.1" y="190.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.33%)</title><rect x="62.4" y="163.0" width="15.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="65.4" y="174.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.26%)</title><rect x="63.3" y="147.0" width="14.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="66.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="65.1" y="131.0" width="13.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="68.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.94%)</title><rect x="67.0" y="115.0" width="11.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="70.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.88%)</title><rect x="67.8" y="99.0" width="10.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="70.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.87%)</title><rect x="67.9" y="83.0" width="10.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="70.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="77.9" y="67.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="80.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="77.9" y="51.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="80.9" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="78.2" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="78.6" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="78.6" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.15%)</title><rect x="79.4" y="803.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="79.8" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="79.8" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="80.1" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="80.1" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="80.4" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="80.9" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (1,440 samples, 18.13%)</title><rect x="81.2" y="803.0" width="213.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.2" y="814.0">ru/mail/polis/service/AsyncH..</text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.16%)</title><rect x="82.3" y="787.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="82.3" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.13%)</title><rect x="82.8" y="771.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 0.13%)</title><rect x="82.8" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 0.13%)</title><rect x="82.8" y="739.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.8" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="84.3" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="87.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,095 samples, 13.78%)</title><rect x="84.6" y="787.0" width="162.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.6" y="798.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (13 samples, 0.16%)</title><rect x="85.3" y="771.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,072 samples, 13.49%)</title><rect x="87.2" y="771.0" width="159.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="782.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,072 samples, 13.49%)</title><rect x="87.2" y="755.0" width="159.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.2" y="766.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.15%)</title><rect x="88.9" y="739.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="88.9" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="89.3" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="89.6" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.03%)</title><rect x="90.4" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (236 samples, 2.97%)</title><rect x="90.7" y="739.0" width="35.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.7" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (234 samples, 2.95%)</title><rect x="90.8" y="723.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="91.4" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="94.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="91.7" y="707.0" width="6.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="94.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="91.7" y="691.0" width="6.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="94.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (36 samples, 0.45%)</title><rect x="91.7" y="675.0" width="5.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="94.7" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="92.1" y="659.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="95.1" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="92.7" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="95.7" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="93.0" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="96.0" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="93.5" y="659.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="96.5" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="93.9" y="659.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="96.9" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.20%)</title><rect x="94.4" y="659.0" width="2.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="97.4" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.04%)</title><rect x="94.7" y="643.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.7" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="95.1" y="643.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="98.1" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.10%)</title><rect x="95.6" y="643.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="98.6" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.05%)</title><rect x="96.2" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="99.2" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="97.0" y="675.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="100.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="97.5" y="675.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="100.5" y="686.0"></text>
</g>
<g>
<title>__GI___recv (181 samples, 2.28%)</title><rect x="97.8" y="707.0" width="26.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="100.8" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (165 samples, 2.08%)</title><rect x="100.2" y="691.0" width="24.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="103.2" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (165 samples, 2.08%)</title><rect x="100.2" y="675.0" width="24.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="103.2" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.98%)</title><rect x="101.4" y="659.0" width="23.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="104.4" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.98%)</title><rect x="101.4" y="643.0" width="23.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="104.4" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (152 samples, 1.91%)</title><rect x="102.1" y="627.0" width="22.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="105.1" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (147 samples, 1.85%)</title><rect x="102.8" y="611.0" width="21.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="105.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.80%)</title><rect x="103.4" y="595.0" width="21.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="106.4" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (118 samples, 1.49%)</title><rect x="107.1" y="579.0" width="17.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="110.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.25%)</title><rect x="110.0" y="563.0" width="14.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="113.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="113.2" y="547.0" width="11.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="116.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="117.4" y="531.0" width="7.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="120.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="121.6" y="515.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="124.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="124.4" y="499.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="127.4" y="510.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.08%)</title><rect x="124.7" y="707.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="127.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (73 samples, 0.92%)</title><rect x="125.7" y="739.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="125.9" y="723.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="126.3" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (3 samples, 0.04%)</title><rect x="127.0" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.45%)</title><rect x="127.5" y="723.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="131.2" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="131.2" y="691.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.13%)</title><rect x="132.8" y="723.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="133.6" y="707.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="136.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.16%)</title><rect x="134.3" y="723.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.11%)</title><rect x="134.9" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.11%)</title><rect x="134.9" y="691.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (2 samples, 0.03%)</title><rect x="136.3" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (36 samples, 0.45%)</title><rect x="136.6" y="739.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (19 samples, 0.24%)</title><rect x="139.1" y="723.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (19 samples, 0.24%)</title><rect x="139.1" y="707.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (19 samples, 0.24%)</title><rect x="139.1" y="691.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (19 samples, 0.24%)</title><rect x="139.1" y="675.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="141.9" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="142.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="142.1" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (113 samples, 1.42%)</title><rect x="142.5" y="739.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.5" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (107 samples, 1.35%)</title><rect x="143.4" y="723.0" width="15.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="146.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="147.8" y="707.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="150.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="147.8" y="691.0" width="11.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="150.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="152.3" y="675.0" width="7.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="155.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.54%)</title><rect x="152.9" y="659.0" width="6.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="155.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="153.0" y="643.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="156.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="155.9" y="627.0" width="3.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="158.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="156.8" y="611.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="159.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="158.1" y="595.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (582 samples, 7.33%)</title><rect x="159.3" y="739.0" width="86.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.3" y="750.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (24 samples, 0.30%)</title><rect x="160.0" y="723.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="163.0" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.05%)</title><rect x="160.8" y="707.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="163.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.15%)</title><rect x="161.4" y="707.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="164.4" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.08%)</title><rect x="162.3" y="691.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="165.3" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="163.3" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="166.3" y="718.0"></text>
</g>
<g>
<title>__send (550 samples, 6.92%)</title><rect x="163.7" y="723.0" width="81.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="166.7" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (526 samples, 6.62%)</title><rect x="167.3" y="707.0" width="78.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="170.3" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (526 samples, 6.62%)</title><rect x="167.3" y="691.0" width="78.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="170.3" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (509 samples, 6.41%)</title><rect x="169.8" y="675.0" width="75.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="172.8" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (509 samples, 6.41%)</title><rect x="169.8" y="659.0" width="75.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="172.8" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (505 samples, 6.36%)</title><rect x="170.4" y="643.0" width="75.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.4" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (500 samples, 6.29%)</title><rect x="171.2" y="627.0" width="74.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="174.2" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (493 samples, 6.21%)</title><rect x="172.2" y="611.0" width="73.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="175.2" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (491 samples, 6.18%)</title><rect x="172.5" y="595.0" width="72.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="175.5" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (465 samples, 5.85%)</title><rect x="176.4" y="579.0" width="69.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="179.4" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (448 samples, 5.64%)</title><rect x="178.9" y="563.0" width="66.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="181.9" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (425 samples, 5.35%)</title><rect x="182.3" y="547.0" width="63.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="185.3" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (399 samples, 5.02%)</title><rect x="186.2" y="531.0" width="59.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="189.2" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (366 samples, 4.61%)</title><rect x="191.1" y="515.0" width="54.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="194.1" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (353 samples, 4.44%)</title><rect x="193.0" y="499.0" width="52.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="196.0" y="510.0">[unkn..</text>
</g>
<g>
<title>[unknown] (338 samples, 4.25%)</title><rect x="195.2" y="483.0" width="50.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="198.2" y="494.0">[unkn..</text>
</g>
<g>
<title>[unknown] (332 samples, 4.18%)</title><rect x="196.1" y="467.0" width="49.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="199.1" y="478.0">[unkn..</text>
</g>
<g>
<title>[unknown] (329 samples, 4.14%)</title><rect x="196.6" y="451.0" width="48.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="199.6" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (319 samples, 4.02%)</title><rect x="198.1" y="435.0" width="47.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="201.1" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (312 samples, 3.93%)</title><rect x="199.1" y="419.0" width="46.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="202.1" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (310 samples, 3.90%)</title><rect x="199.4" y="403.0" width="46.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="202.4" y="414.0">[unk..</text>
</g>
<g>
<title>[unknown] (303 samples, 3.81%)</title><rect x="200.4" y="387.0" width="45.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="203.4" y="398.0">[unk..</text>
</g>
<g>
<title>[unknown] (295 samples, 3.71%)</title><rect x="201.6" y="371.0" width="43.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="204.6" y="382.0">[unk..</text>
</g>
<g>
<title>[unknown] (281 samples, 3.54%)</title><rect x="203.7" y="355.0" width="41.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="206.7" y="366.0">[un..</text>
</g>
<g>
<title>[unknown] (269 samples, 3.39%)</title><rect x="205.5" y="339.0" width="39.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="208.5" y="350.0">[un..</text>
</g>
<g>
<title>[unknown] (262 samples, 3.30%)</title><rect x="206.5" y="323.0" width="38.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="209.5" y="334.0">[un..</text>
</g>
<g>
<title>[unknown] (257 samples, 3.24%)</title><rect x="207.3" y="307.0" width="38.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="210.3" y="318.0">[un..</text>
</g>
<g>
<title>[unknown] (253 samples, 3.18%)</title><rect x="207.9" y="291.0" width="37.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="210.9" y="302.0">[un..</text>
</g>
<g>
<title>[unknown] (239 samples, 3.01%)</title><rect x="209.9" y="275.0" width="35.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="212.9" y="286.0">[un..</text>
</g>
<g>
<title>[unknown] (233 samples, 2.93%)</title><rect x="210.8" y="259.0" width="34.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="213.8" y="270.0">[u..</text>
</g>
<g>
<title>[unknown] (230 samples, 2.90%)</title><rect x="211.3" y="243.0" width="34.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="214.3" y="254.0">[u..</text>
</g>
<g>
<title>[unknown] (230 samples, 2.90%)</title><rect x="211.3" y="227.0" width="34.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="214.3" y="238.0">[u..</text>
</g>
<g>
<title>[unknown] (224 samples, 2.82%)</title><rect x="212.2" y="211.0" width="33.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="215.2" y="222.0">[u..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.73%)</title><rect x="213.2" y="195.0" width="32.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="216.2" y="206.0">[u..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.58%)</title><rect x="215.0" y="179.0" width="30.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="218.0" y="190.0">[u..</text>
</g>
<g>
<title>[unknown] (185 samples, 2.33%)</title><rect x="218.0" y="163.0" width="27.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="221.0" y="174.0">[..</text>
</g>
<g>
<title>[unknown] (151 samples, 1.90%)</title><rect x="223.0" y="147.0" width="22.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="226.0" y="158.0">[..</text>
</g>
<g>
<title>[unknown] (127 samples, 1.60%)</title><rect x="226.6" y="131.0" width="18.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="229.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="227.5" y="115.0" width="17.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="230.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.46%)</title><rect x="228.2" y="99.0" width="17.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="231.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="245.1" y="83.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="248.1" y="94.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="245.4" y="723.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="248.4" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.06%)</title><rect x="245.7" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.06%)</title><rect x="245.7" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.05%)</title><rect x="245.9" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.06%)</title><rect x="246.5" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2 samples, 0.03%)</title><rect x="246.9" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (322 samples, 4.05%)</title><rect x="247.2" y="787.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.2" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (322 samples, 4.05%)</title><rect x="247.2" y="771.0" width="47.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.2" y="782.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (306 samples, 3.85%)</title><rect x="247.2" y="755.0" width="45.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.2" y="766.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (300 samples, 3.78%)</title><rect x="248.1" y="739.0" width="44.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.1" y="750.0">org/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="248.6" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="251.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="248.9" y="723.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="251.9" y="734.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.09%)</title><rect x="249.4" y="723.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="252.4" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="250.5" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="253.5" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="251.2" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="254.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="251.5" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="254.5" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (272 samples, 3.42%)</title><rect x="252.1" y="723.0" width="40.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="255.1" y="734.0">roc..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.05%)</title><rect x="252.9" y="707.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.9" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="253.2" y="691.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="256.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="253.5" y="707.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="256.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="253.8" y="691.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="256.8" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="253.8" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="256.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (256 samples, 3.22%)</title><rect x="254.1" y="707.0" width="38.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="257.1" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (255 samples, 3.21%)</title><rect x="254.2" y="691.0" width="37.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="257.2" y="702.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (248 samples, 3.12%)</title><rect x="254.5" y="675.0" width="36.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="257.5" y="686.0">roc..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="254.6" y="659.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="257.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (211 samples, 2.66%)</title><rect x="255.1" y="659.0" width="31.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="258.1" y="670.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="255.2" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="258.2" y="654.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="255.5" y="643.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="258.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="255.8" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="258.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (185 samples, 2.33%)</title><rect x="256.1" y="643.0" width="27.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="259.1" y="654.0">r..</text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="260.3" y="627.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="263.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="260.3" y="611.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="263.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="260.3" y="595.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="263.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="260.6" y="627.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="263.6" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="261.5" y="627.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="264.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="261.8" y="627.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="264.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.05%)</title><rect x="262.2" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="265.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.04%)</title><rect x="262.8" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="265.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.08%)</title><rect x="263.3" y="627.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="266.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="263.4" y="611.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="266.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (4 samples, 0.05%)</title><rect x="264.2" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="267.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="264.7" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="267.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (109 samples, 1.37%)</title><rect x="265.2" y="627.0" width="16.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="268.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (97 samples, 1.22%)</title><rect x="266.7" y="611.0" width="14.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="269.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (94 samples, 1.18%)</title><rect x="266.8" y="595.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="269.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (93 samples, 1.17%)</title><rect x="267.0" y="579.0" width="13.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="270.0" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="267.6" y="563.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="270.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (79 samples, 0.99%)</title><rect x="268.2" y="563.0" width="11.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="271.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (6 samples, 0.08%)</title><rect x="268.3" y="547.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="271.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="268.8" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="271.8" y="542.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="269.2" y="547.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="272.2" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (59 samples, 0.74%)</title><rect x="269.6" y="547.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="272.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (51 samples, 0.64%)</title><rect x="270.4" y="531.0" width="7.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="273.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (22 samples, 0.28%)</title><rect x="274.1" y="515.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="277.1" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="274.5" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="277.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.19%)</title><rect x="275.1" y="499.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="278.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="276.2" y="483.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="279.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="276.6" y="483.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="279.6" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="277.1" y="483.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="280.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="277.4" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="280.4" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="277.5" y="499.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="280.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="278.4" y="547.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="281.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="279.3" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="282.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="279.6" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="282.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.05%)</title><rect x="279.9" y="563.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="282.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="280.5" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="283.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.03%)</title><rect x="281.5" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="284.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.04%)</title><rect x="281.8" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="284.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.04%)</title><rect x="282.3" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="285.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.03%)</title><rect x="282.9" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.04%)</title><rect x="283.2" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="286.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.05%)</title><rect x="283.6" y="643.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="286.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="284.2" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="287.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.04%)</title><rect x="284.5" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="287.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="284.9" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="287.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.05%)</title><rect x="285.2" y="643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="288.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (4 samples, 0.05%)</title><rect x="285.8" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="288.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.03%)</title><rect x="286.6" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (19 samples, 0.24%)</title><rect x="286.9" y="659.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="289.9" y="670.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="286.9" y="643.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="289.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="287.3" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.05%)</title><rect x="287.6" y="643.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="290.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.03%)</title><rect x="288.2" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="291.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="288.5" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="291.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="288.8" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="291.8" y="654.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.03%)</title><rect x="288.8" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="291.8" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.05%)</title><rect x="289.1" y="643.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="292.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="289.7" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="292.7" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="290.3" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="293.3" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.04%)</title><rect x="290.7" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="293.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.03%)</title><rect x="291.3" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="294.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="291.6" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="294.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="292.2" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="295.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (9 samples, 0.11%)</title><rect x="292.7" y="755.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="293.4" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="293.4" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="293.4" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="293.4" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="293.4" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="293.4" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="293.6" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (7 samples, 0.09%)</title><rect x="294.0" y="755.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="294.0" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="294.0" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="294.0" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="294.0" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="294.0" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="294.0" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="294.6" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="297.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="294.6" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="294.6" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="294.6" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="294.6" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="294.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (27 samples, 0.34%)</title><rect x="295.0" y="803.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (27 samples, 0.34%)</title><rect x="295.0" y="787.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (27 samples, 0.34%)</title><rect x="295.0" y="771.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (26 samples, 0.33%)</title><rect x="295.2" y="755.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (24 samples, 0.30%)</title><rect x="295.5" y="739.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (24 samples, 0.30%)</title><rect x="295.5" y="723.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="296.4" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (3 samples, 0.04%)</title><rect x="297.0" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.06%)</title><rect x="297.4" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.06%)</title><rect x="298.2" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.13%)</title><rect x="299.2" y="867.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.05%)</title><rect x="299.4" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="299.4" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="299.4" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="299.4" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="299.9" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="299.9" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.03%)</title><rect x="300.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="300.8" y="867.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="303.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="301.1" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="301.1" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.1" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="301.6" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="304.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="301.9" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="301.9" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (65 samples, 0.82%)</title><rect x="302.6" y="883.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (63 samples, 0.79%)</title><rect x="302.9" y="867.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="303.7" y="851.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="306.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="303.7" y="835.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="306.7" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.11%)</title><rect x="303.7" y="819.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="306.7" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="303.7" y="803.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="306.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="304.0" y="803.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="307.0" y="814.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.03%)</title><rect x="304.6" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="307.6" y="814.0"></text>
</g>
<g>
<title>__GI___recv (47 samples, 0.59%)</title><rect x="305.3" y="851.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="306.0" y="835.0" width="6.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="309.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="306.0" y="819.0" width="6.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="309.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="307.1" y="803.0" width="5.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="310.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="307.1" y="787.0" width="5.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="310.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.43%)</title><rect x="307.2" y="771.0" width="5.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="310.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="307.4" y="755.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="310.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="307.7" y="739.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="310.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="308.4" y="723.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.23%)</title><rect x="309.6" y="707.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="312.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="310.8" y="691.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="313.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="311.5" y="675.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="314.5" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=29990] (609 samples, 7.67%)</title><rect x="312.3" y="947.0" width="90.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="315.3" y="958.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="312.4" y="931.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="315.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="312.6" y="915.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="315.6" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="312.6" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="315.6" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (604 samples, 7.60%)</title><rect x="313.0" y="931.0" width="89.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.0" y="942.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (63 samples, 0.79%)</title><rect x="313.5" y="915.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (63 samples, 0.79%)</title><rect x="313.5" y="899.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.73%)</title><rect x="313.8" y="883.0" width="8.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="316.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="313.8" y="867.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="316.8" y="878.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 0.68%)</title><rect x="314.4" y="867.0" width="8.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="317.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.54%)</title><rect x="316.0" y="851.0" width="6.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="319.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.54%)</title><rect x="316.0" y="835.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="319.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="316.3" y="819.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="319.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="316.6" y="803.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="319.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="316.6" y="787.0" width="5.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="319.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="317.5" y="771.0" width="4.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="320.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="319.1" y="755.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="322.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="320.4" y="739.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="323.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="321.3" y="723.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="324.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="321.8" y="707.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="324.8" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="322.4" y="883.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="325.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (538 samples, 6.77%)</title><rect x="322.8" y="915.0" width="79.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.8" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (534 samples, 6.72%)</title><rect x="323.4" y="899.0" width="79.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.4" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (485 samples, 6.11%)</title><rect x="323.4" y="883.0" width="72.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.4" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (462 samples, 5.82%)</title><rect x="324.0" y="867.0" width="68.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.0" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (462 samples, 5.82%)</title><rect x="324.0" y="851.0" width="68.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.0" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.09%)</title><rect x="324.0" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.09%)</title><rect x="324.0" y="819.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.09%)</title><rect x="324.0" y="803.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.09%)</title><rect x="324.0" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.09%)</title><rect x="324.0" y="771.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.0" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="324.6" y="755.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="327.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (455 samples, 5.73%)</title><rect x="325.1" y="835.0" width="67.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.1" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (453 samples, 5.70%)</title><rect x="325.3" y="819.0" width="67.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (239 samples, 3.01%)</title><rect x="325.6" y="803.0" width="35.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.6" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (232 samples, 2.92%)</title><rect x="326.2" y="787.0" width="34.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.08%)</title><rect x="326.4" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="326.7" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="326.7" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="326.7" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="326.7" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 2.83%)</title><rect x="327.3" y="771.0" width="33.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 2.83%)</title><rect x="327.3" y="755.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.3" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (224 samples, 2.82%)</title><rect x="327.4" y="739.0" width="33.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.4" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (222 samples, 2.79%)</title><rect x="327.7" y="723.0" width="33.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.7" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="328.2" y="707.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="331.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="328.2" y="691.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="331.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.13%)</title><rect x="328.2" y="675.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="331.2" y="686.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="328.8" y="659.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="331.8" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="329.1" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="332.1" y="670.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.03%)</title><rect x="329.4" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="332.4" y="670.0"></text>
</g>
<g>
<title>__send (209 samples, 2.63%)</title><rect x="329.7" y="707.0" width="31.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="332.7" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.61%)</title><rect x="330.0" y="691.0" width="30.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="333.0" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.61%)</title><rect x="330.0" y="675.0" width="30.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="333.0" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.49%)</title><rect x="331.3" y="659.0" width="29.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="334.3" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.49%)</title><rect x="331.3" y="643.0" width="29.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="334.3" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (197 samples, 2.48%)</title><rect x="331.4" y="627.0" width="29.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="334.4" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (194 samples, 2.44%)</title><rect x="331.9" y="611.0" width="28.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="334.9" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (193 samples, 2.43%)</title><rect x="332.0" y="595.0" width="28.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="335.0" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (192 samples, 2.42%)</title><rect x="332.2" y="579.0" width="28.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="335.2" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.29%)</title><rect x="333.7" y="563.0" width="27.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="336.7" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.25%)</title><rect x="334.1" y="547.0" width="26.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="337.1" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (168 samples, 2.11%)</title><rect x="335.7" y="531.0" width="25.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="338.7" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (155 samples, 1.95%)</title><rect x="337.7" y="515.0" width="23.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="340.7" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.84%)</title><rect x="339.0" y="499.0" width="21.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="342.0" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="339.8" y="483.0" width="20.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="342.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.71%)</title><rect x="340.5" y="467.0" width="20.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.66%)</title><rect x="341.1" y="451.0" width="19.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="344.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.65%)</title><rect x="341.2" y="435.0" width="19.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="344.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.61%)</title><rect x="341.7" y="419.0" width="19.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="344.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.54%)</title><rect x="342.6" y="403.0" width="18.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="345.6" y="414.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="342.7" y="387.0" width="18.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="345.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="343.3" y="371.0" width="17.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="343.3" y="355.0" width="17.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="346.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.41%)</title><rect x="344.1" y="339.0" width="16.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="347.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.33%)</title><rect x="345.0" y="323.0" width="15.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="348.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.30%)</title><rect x="345.4" y="307.0" width="15.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="348.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="345.7" y="291.0" width="15.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="348.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.25%)</title><rect x="346.0" y="275.0" width="14.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="349.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.20%)</title><rect x="346.6" y="259.0" width="14.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="349.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="346.9" y="243.0" width="13.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="349.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="347.2" y="227.0" width="13.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="350.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="347.2" y="211.0" width="13.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="350.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="347.6" y="195.0" width="13.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="350.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.06%)</title><rect x="348.2" y="179.0" width="12.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="351.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.99%)</title><rect x="349.0" y="163.0" width="11.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="352.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="350.0" y="147.0" width="10.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="353.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.77%)</title><rect x="351.6" y="131.0" width="9.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="354.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.67%)</title><rect x="352.8" y="115.0" width="7.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="355.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="353.4" y="99.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="356.4" y="110.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.54%)</title><rect x="354.3" y="83.0" width="6.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="357.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="360.4" y="67.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="363.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="360.7" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="360.9" y="771.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="360.9" y="755.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="361.1" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="361.1" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="361.1" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="361.4" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="362.3" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="362.5" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="362.5" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="362.5" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (201 samples, 2.53%)</title><rect x="362.8" y="803.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.8" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="362.8" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="362.8" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="362.8" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="362.8" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="362.9" y="723.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="365.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (197 samples, 2.48%)</title><rect x="363.4" y="787.0" width="29.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.4" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (197 samples, 2.48%)</title><rect x="363.4" y="771.0" width="29.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.4" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (183 samples, 2.30%)</title><rect x="363.4" y="755.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.4" y="766.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (181 samples, 2.28%)</title><rect x="363.7" y="739.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.7" y="750.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__JJ_3BII_3BII (2 samples, 0.03%)</title><rect x="363.7" y="723.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="366.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="364.0" y="723.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="367.0" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (3 samples, 0.04%)</title><rect x="364.1" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="367.1" y="718.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="364.7" y="723.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="367.7" y="734.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="365.0" y="723.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="368.0" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="365.6" y="723.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="368.6" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.05%)</title><rect x="366.3" y="723.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="369.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="367.1" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="370.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (155 samples, 1.95%)</title><rect x="367.5" y="723.0" width="23.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="370.5" y="734.0">r..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="367.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="370.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="368.1" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="371.1" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="368.7" y="707.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="371.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="368.7" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="371.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="369.0" y="707.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="372.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (138 samples, 1.74%)</title><rect x="369.8" y="707.0" width="20.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="372.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="369.9" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="372.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (133 samples, 1.67%)</title><rect x="370.5" y="691.0" width="19.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="373.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (128 samples, 1.61%)</title><rect x="370.7" y="675.0" width="19.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="373.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (109 samples, 1.37%)</title><rect x="371.2" y="659.0" width="16.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="374.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="371.5" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="374.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (101 samples, 1.27%)</title><rect x="371.8" y="643.0" width="15.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="374.8" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.04%)</title><rect x="373.8" y="627.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="376.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="373.9" y="611.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="376.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="373.9" y="595.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="376.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="374.2" y="627.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="377.2" y="638.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="374.7" y="627.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="377.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="375.3" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="378.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.04%)</title><rect x="375.6" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="378.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.08%)</title><rect x="376.0" y="627.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.0" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="376.0" y="611.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="379.0" y="622.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="376.3" y="611.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="379.3" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="376.6" y="611.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="379.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.03%)</title><rect x="376.9" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="379.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (58 samples, 0.73%)</title><rect x="377.2" y="627.0" width="8.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="380.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (55 samples, 0.69%)</title><rect x="377.5" y="611.0" width="8.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="380.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (48 samples, 0.60%)</title><rect x="377.9" y="595.0" width="7.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="380.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (47 samples, 0.59%)</title><rect x="378.1" y="579.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.1" y="590.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="378.2" y="563.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="381.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="547.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="381.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="531.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="381.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="515.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="381.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="499.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="381.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="381.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="467.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="381.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="451.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="381.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="378.2" y="435.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="381.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (39 samples, 0.49%)</title><rect x="378.7" y="563.0" width="5.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="381.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="379.1" y="547.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="382.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (30 samples, 0.38%)</title><rect x="379.4" y="547.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="382.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (29 samples, 0.37%)</title><rect x="379.6" y="531.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="382.6" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (12 samples, 0.15%)</title><rect x="381.5" y="515.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="384.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.13%)</title><rect x="381.8" y="499.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="384.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="382.4" y="483.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="385.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="382.8" y="483.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="385.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="383.3" y="515.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="386.3" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="383.3" y="499.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="386.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="384.2" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="387.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (3 samples, 0.04%)</title><rect x="384.5" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="387.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.05%)</title><rect x="385.1" y="595.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="388.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.04%)</title><rect x="385.8" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="388.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="385.8" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="388.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="385.8" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="388.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="385.8" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="388.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.04%)</title><rect x="385.8" y="563.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="388.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.03%)</title><rect x="386.0" y="547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="389.0" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="386.0" y="531.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="389.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="387.0" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="390.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.09%)</title><rect x="387.7" y="659.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="390.7" y="670.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="387.7" y="643.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="390.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="388.5" y="643.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="391.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="389.1" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="392.1" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="389.4" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="392.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="389.7" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="392.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (9 samples, 0.11%)</title><rect x="390.6" y="755.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="390.7" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="391.3" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="391.3" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.3" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.3" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.3" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="391.3" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (5 samples, 0.06%)</title><rect x="391.9" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="391.9" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.9" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.9" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="391.9" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="391.9" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="391.9" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="392.2" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="392.2" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.05%)</title><rect x="392.6" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.03%)</title><rect x="392.9" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="393.2" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="393.7" y="867.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="394.0" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="394.0" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.0" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="394.4" y="819.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="397.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="394.7" y="867.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="394.7" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="395.5" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 0.59%)</title><rect x="395.8" y="883.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 0.59%)</title><rect x="395.8" y="867.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="396.1" y="851.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="399.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="396.1" y="835.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="399.1" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.06%)</title><rect x="396.1" y="819.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="399.1" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="396.2" y="803.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="399.2" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="396.9" y="819.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="399.9" y="830.0"></text>
</g>
<g>
<title>__GI___recv (36 samples, 0.45%)</title><rect x="397.4" y="851.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="400.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="398.3" y="835.0" width="4.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="401.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="398.3" y="819.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="401.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="399.0" y="803.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="402.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="399.2" y="787.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="402.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="399.8" y="771.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="402.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.24%)</title><rect x="399.9" y="755.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="402.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.23%)</title><rect x="400.1" y="739.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="403.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="401.1" y="723.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="404.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="401.4" y="707.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="404.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="401.8" y="691.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="404.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="402.1" y="675.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="405.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="402.3" y="659.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="405.3" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=30014] (604 samples, 7.60%)</title><rect x="402.7" y="947.0" width="89.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="405.7" y="958.0">[NIO Selec..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="403.0" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="406.0" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="403.0" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.0" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="403.0" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="406.0" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="403.0" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="406.0" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="403.0" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="406.0" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="403.0" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="406.0" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="403.0" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.03%)</title><rect x="403.0" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.06%)</title><rect x="403.5" y="931.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="406.5" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (594 samples, 7.48%)</title><rect x="404.2" y="931.0" width="88.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.2" y="942.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 0.74%)</title><rect x="404.5" y="915.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 0.74%)</title><rect x="404.5" y="899.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="404.7" y="883.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="407.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.69%)</title><rect x="405.1" y="883.0" width="8.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="408.1" y="894.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 0.68%)</title><rect x="405.3" y="867.0" width="8.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="408.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.58%)</title><rect x="406.5" y="851.0" width="6.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="409.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.58%)</title><rect x="406.5" y="835.0" width="6.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="409.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="407.0" y="819.0" width="6.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="410.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="407.0" y="803.0" width="6.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="410.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="407.3" y="787.0" width="6.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="410.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="407.6" y="771.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="410.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.34%)</title><rect x="409.3" y="755.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="412.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="410.2" y="739.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="413.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="411.2" y="723.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="414.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="412.4" y="707.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="415.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (532 samples, 6.70%)</title><rect x="413.3" y="915.0" width="79.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.3" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (530 samples, 6.67%)</title><rect x="413.6" y="899.0" width="78.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.6" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (488 samples, 6.14%)</title><rect x="413.6" y="883.0" width="72.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.6" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (457 samples, 5.75%)</title><rect x="414.5" y="867.0" width="67.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (457 samples, 5.75%)</title><rect x="414.5" y="851.0" width="67.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.5" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.05%)</title><rect x="414.5" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="414.5" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="414.5" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="414.5" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="414.5" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (453 samples, 5.70%)</title><rect x="415.1" y="835.0" width="67.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.1" y="846.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="415.1" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="418.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="415.1" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (451 samples, 5.68%)</title><rect x="415.4" y="819.0" width="67.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.4" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (219 samples, 2.76%)</title><rect x="415.4" y="803.0" width="32.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.4" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (211 samples, 2.66%)</title><rect x="416.0" y="787.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.0" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.11%)</title><rect x="416.1" y="771.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.06%)</title><rect x="416.7" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="416.7" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="416.7" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="416.7" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (201 samples, 2.53%)</title><rect x="417.4" y="771.0" width="29.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.4" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (201 samples, 2.53%)</title><rect x="417.4" y="755.0" width="29.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.4" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (201 samples, 2.53%)</title><rect x="417.4" y="739.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.4" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (201 samples, 2.53%)</title><rect x="417.4" y="723.0" width="29.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.4" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="418.0" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="421.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="418.0" y="691.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="421.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.03%)</title><rect x="418.0" y="675.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="421.0" y="686.0"></text>
</g>
<g>
<title>__send (193 samples, 2.43%)</title><rect x="418.6" y="707.0" width="28.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="421.6" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.29%)</title><rect x="420.3" y="691.0" width="27.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="423.3" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.29%)</title><rect x="420.3" y="675.0" width="27.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="423.3" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.25%)</title><rect x="420.7" y="659.0" width="26.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="423.7" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.25%)</title><rect x="420.7" y="643.0" width="26.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="423.7" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (176 samples, 2.22%)</title><rect x="421.2" y="627.0" width="26.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="424.2" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 2.18%)</title><rect x="421.6" y="611.0" width="25.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="424.6" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (171 samples, 2.15%)</title><rect x="421.9" y="595.0" width="25.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="424.9" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.14%)</title><rect x="422.0" y="579.0" width="25.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="425.0" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 2.00%)</title><rect x="423.7" y="563.0" width="23.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="426.7" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.93%)</title><rect x="424.6" y="547.0" width="22.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="427.6" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.89%)</title><rect x="425.0" y="531.0" width="22.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="428.0" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (140 samples, 1.76%)</title><rect x="426.5" y="515.0" width="20.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="429.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.67%)</title><rect x="427.5" y="499.0" width="19.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="430.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.65%)</title><rect x="427.8" y="483.0" width="19.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="430.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.62%)</title><rect x="428.1" y="467.0" width="19.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="431.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.60%)</title><rect x="428.4" y="451.0" width="18.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="431.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.59%)</title><rect x="428.6" y="435.0" width="18.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="431.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.57%)</title><rect x="428.7" y="419.0" width="18.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="431.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="429.3" y="403.0" width="18.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="432.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="429.3" y="387.0" width="18.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="432.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.51%)</title><rect x="429.5" y="371.0" width="17.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="432.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.42%)</title><rect x="430.5" y="355.0" width="16.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="433.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.36%)</title><rect x="431.3" y="339.0" width="16.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="434.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.36%)</title><rect x="431.3" y="323.0" width="16.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="434.3" y="334.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.31%)</title><rect x="431.9" y="307.0" width="15.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="434.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.26%)</title><rect x="432.4" y="291.0" width="14.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="435.4" y="302.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="432.9" y="275.0" width="14.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="435.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.16%)</title><rect x="433.6" y="259.0" width="13.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="436.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.16%)</title><rect x="433.6" y="243.0" width="13.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="436.6" y="254.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="433.8" y="227.0" width="13.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="436.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.13%)</title><rect x="433.9" y="211.0" width="13.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="436.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="434.2" y="195.0" width="13.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="437.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.07%)</title><rect x="434.7" y="179.0" width="12.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="437.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.98%)</title><rect x="435.7" y="163.0" width="11.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="438.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.94%)</title><rect x="436.2" y="147.0" width="11.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="439.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.77%)</title><rect x="438.2" y="131.0" width="9.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="441.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.54%)</title><rect x="440.9" y="115.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="443.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="441.2" y="99.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="444.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="441.2" y="83.0" width="6.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="444.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="447.3" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="447.4" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="447.4" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="447.9" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="448.2" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="448.2" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="448.6" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="448.8" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="448.8" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="448.8" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (223 samples, 2.81%)</title><rect x="449.2" y="803.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.2" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="449.2" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="449.2" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="449.2" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="449.2" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (221 samples, 2.78%)</title><rect x="449.5" y="787.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (221 samples, 2.78%)</title><rect x="449.5" y="771.0" width="32.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.5" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (206 samples, 2.59%)</title><rect x="449.5" y="755.0" width="30.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.5" y="766.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (205 samples, 2.58%)</title><rect x="449.7" y="739.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="452.7" y="750.0">or..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="450.3" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="453.3" y="734.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.09%)</title><rect x="450.7" y="723.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="453.7" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="451.9" y="723.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="454.9" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.05%)</title><rect x="452.4" y="723.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="455.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="452.9" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="455.9" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (179 samples, 2.25%)</title><rect x="453.5" y="723.0" width="26.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="456.5" y="734.0">r..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="453.5" y="707.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="456.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="454.0" y="707.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="457.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (170 samples, 2.14%)</title><rect x="454.6" y="707.0" width="25.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="457.6" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="454.9" y="691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="457.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (164 samples, 2.06%)</title><rect x="455.5" y="691.0" width="24.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="458.5" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (158 samples, 1.99%)</title><rect x="455.5" y="675.0" width="23.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="458.5" y="686.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (3 samples, 0.04%)</title><rect x="455.6" y="659.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="458.6" y="670.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="456.1" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="459.1" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="456.4" y="659.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="459.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (124 samples, 1.56%)</title><rect x="456.8" y="659.0" width="18.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="459.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="457.0" y="643.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="460.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (113 samples, 1.42%)</title><rect x="457.7" y="643.0" width="16.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="460.7" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="460.8" y="627.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="463.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="461.1" y="627.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="464.1" y="638.0"></text>
</g>
<g>
<title>_init (4 samples, 0.05%)</title><rect x="461.6" y="627.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="464.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="462.2" y="627.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="465.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.08%)</title><rect x="462.7" y="627.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="465.7" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="463.2" y="611.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.03%)</title><rect x="463.6" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="466.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (64 samples, 0.81%)</title><rect x="464.1" y="627.0" width="9.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="467.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="464.2" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="467.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (61 samples, 0.77%)</title><rect x="464.5" y="611.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="467.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (58 samples, 0.73%)</title><rect x="464.5" y="595.0" width="8.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="467.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="464.8" y="579.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="467.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (54 samples, 0.68%)</title><rect x="465.1" y="579.0" width="8.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="468.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="465.6" y="563.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="468.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (44 samples, 0.55%)</title><rect x="466.3" y="563.0" width="6.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="469.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="466.6" y="547.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="469.6" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 0.42%)</title><rect x="467.1" y="547.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="470.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (28 samples, 0.35%)</title><rect x="467.4" y="531.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="470.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (14 samples, 0.18%)</title><rect x="469.0" y="515.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="472.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="469.3" y="499.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="472.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.10%)</title><rect x="469.9" y="499.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="472.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="469.9" y="483.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="472.9" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="470.2" y="483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="473.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.05%)</title><rect x="470.5" y="483.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="473.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.04%)</title><rect x="471.1" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="474.1" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="471.1" y="499.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="474.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.04%)</title><rect x="471.5" y="531.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="474.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.03%)</title><rect x="472.1" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="475.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="472.4" y="547.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="475.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.03%)</title><rect x="472.4" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="475.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="472.8" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="473.3" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="476.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="474.0" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="477.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.04%)</title><rect x="474.5" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="477.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.06%)</title><rect x="475.4" y="659.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="478.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.11%)</title><rect x="476.1" y="659.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="479.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="476.3" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="479.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="477.0" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="480.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="477.6" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="480.6" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.04%)</title><rect x="478.0" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="481.0" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (3 samples, 0.04%)</title><rect x="478.5" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="481.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="479.1" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="482.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (10 samples, 0.13%)</title><rect x="480.1" y="755.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (5 samples, 0.06%)</title><rect x="480.9" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="483.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="480.9" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="480.9" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="480.9" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="480.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="480.9" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (5 samples, 0.06%)</title><rect x="481.6" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="481.6" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="481.6" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="481.6" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="481.6" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="481.6" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="481.6" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="482.1" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.1" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.1" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="482.1" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="482.1" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="482.1" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.11%)</title><rect x="482.4" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="482.8" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="482.8" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="483.7" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.11%)</title><rect x="484.0" y="867.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="484.6" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="484.6" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="485.3" y="867.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="485.3" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="486.1" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 0.50%)</title><rect x="486.4" y="883.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (40 samples, 0.50%)</title><rect x="486.4" y="867.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="486.7" y="851.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="489.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="486.7" y="835.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="489.7" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.14%)</title><rect x="486.7" y="819.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="489.7" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="486.8" y="803.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="489.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.10%)</title><rect x="487.1" y="803.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="490.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="487.6" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.6" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="487.9" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="490.9" y="798.0"></text>
</g>
<g>
<title>__GI___recv (26 samples, 0.33%)</title><rect x="488.4" y="851.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="491.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="489.0" y="835.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="492.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="489.0" y="819.0" width="3.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="492.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="489.9" y="803.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="492.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="489.9" y="787.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="492.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="489.9" y="771.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="492.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="489.9" y="755.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="492.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="490.5" y="739.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="493.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="490.8" y="723.0" width="1.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="493.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="491.1" y="707.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="494.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="491.9" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="494.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="491.9" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="494.9" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=29963] (1,107 samples, 13.94%)</title><rect x="492.5" y="947.0" width="164.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="495.5" y="958.0">[NIO Selector #1 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="492.5" y="931.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="495.5" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="492.5" y="915.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="495.5" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="492.5" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="495.5" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="492.5" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="495.5" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="493.1" y="931.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="496.1" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,100 samples, 13.85%)</title><rect x="493.5" y="931.0" width="163.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.5" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.58%)</title><rect x="493.9" y="915.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (42 samples, 0.53%)</title><rect x="494.5" y="899.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.5" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="494.8" y="883.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.47%)</title><rect x="495.1" y="883.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="498.1" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="495.3" y="867.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="498.3" y="878.0"></text>
</g>
<g>
<title>epoll_wait (33 samples, 0.42%)</title><rect x="495.7" y="867.0" width="4.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="498.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="496.8" y="851.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="499.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="496.8" y="835.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="499.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="497.2" y="819.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="500.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="497.2" y="803.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="500.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="497.4" y="787.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="500.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="497.7" y="771.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="500.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="498.8" y="755.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="501.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="499.1" y="739.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="502.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="499.4" y="723.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="502.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="499.7" y="707.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="502.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,051 samples, 13.23%)</title><rect x="500.8" y="915.0" width="156.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.8" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,051 samples, 13.23%)</title><rect x="500.8" y="899.0" width="156.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.8" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,016 samples, 12.79%)</title><rect x="500.8" y="883.0" width="150.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.8" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (997 samples, 12.55%)</title><rect x="501.2" y="867.0" width="148.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.2" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (997 samples, 12.55%)</title><rect x="501.2" y="851.0" width="148.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.2" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.06%)</title><rect x="501.2" y="835.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="501.4" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="501.4" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="501.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="501.4" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (992 samples, 12.49%)</title><rect x="502.0" y="835.0" width="147.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.0" y="846.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="502.0" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="502.0" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (990 samples, 12.46%)</title><rect x="502.3" y="819.0" width="147.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.3" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (172 samples, 2.17%)</title><rect x="502.3" y="803.0" width="25.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.3" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (162 samples, 2.04%)</title><rect x="502.7" y="787.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.08%)</title><rect x="502.7" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.06%)</title><rect x="502.9" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="502.9" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="502.9" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="502.9" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 1.96%)</title><rect x="503.6" y="771.0" width="23.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (156 samples, 1.96%)</title><rect x="503.6" y="755.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.04%)</title><rect x="503.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (153 samples, 1.93%)</title><rect x="504.0" y="739.0" width="22.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (153 samples, 1.93%)</title><rect x="504.0" y="723.0" width="22.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.0" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="504.2" y="707.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="507.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="504.2" y="691.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="507.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="504.2" y="675.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="507.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="504.2" y="659.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="507.2" y="670.0"></text>
</g>
<g>
<title>__send (148 samples, 1.86%)</title><rect x="504.8" y="707.0" width="22.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="507.8" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="505.8" y="691.0" width="21.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="508.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="505.8" y="675.0" width="21.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="508.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.75%)</title><rect x="506.1" y="659.0" width="20.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="509.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.75%)</title><rect x="506.1" y="643.0" width="20.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="509.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.70%)</title><rect x="506.7" y="627.0" width="20.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="509.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.70%)</title><rect x="506.7" y="611.0" width="20.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="509.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.67%)</title><rect x="507.0" y="595.0" width="19.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="510.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.65%)</title><rect x="507.3" y="579.0" width="19.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="510.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.51%)</title><rect x="508.9" y="563.0" width="17.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="511.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="509.4" y="547.0" width="17.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="512.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.44%)</title><rect x="509.8" y="531.0" width="17.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="512.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.33%)</title><rect x="511.0" y="515.0" width="15.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="514.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="512.4" y="499.0" width="14.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="515.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.18%)</title><rect x="512.8" y="483.0" width="14.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="515.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.16%)</title><rect x="513.1" y="467.0" width="13.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="516.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.12%)</title><rect x="513.5" y="451.0" width="13.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="516.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="513.7" y="435.0" width="13.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="516.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.08%)</title><rect x="514.0" y="419.0" width="12.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="517.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.04%)</title><rect x="514.4" y="403.0" width="12.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="517.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.03%)</title><rect x="514.6" y="387.0" width="12.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="517.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.02%)</title><rect x="514.7" y="371.0" width="12.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="517.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.01%)</title><rect x="514.9" y="355.0" width="11.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="517.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.99%)</title><rect x="515.0" y="339.0" width="11.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="518.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="515.3" y="323.0" width="11.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="518.3" y="334.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.96%)</title><rect x="515.5" y="307.0" width="11.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="518.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.92%)</title><rect x="515.9" y="291.0" width="10.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="518.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="516.1" y="275.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="519.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.79%)</title><rect x="517.4" y="259.0" width="9.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="520.4" y="270.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.78%)</title><rect x="517.6" y="243.0" width="9.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="520.6" y="254.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="518.0" y="227.0" width="8.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="521.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="518.0" y="211.0" width="8.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="521.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="518.0" y="195.0" width="8.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="521.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.72%)</title><rect x="518.3" y="179.0" width="8.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="521.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.69%)</title><rect x="518.6" y="163.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="521.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.67%)</title><rect x="518.9" y="147.0" width="7.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="521.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.57%)</title><rect x="520.1" y="131.0" width="6.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="523.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.47%)</title><rect x="521.3" y="115.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="524.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.45%)</title><rect x="521.4" y="99.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="524.4" y="110.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="521.6" y="83.0" width="5.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="524.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="526.8" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="527.4" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="527.4" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="527.8" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.03%)</title><rect x="528.1" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (794 samples, 9.99%)</title><rect x="528.4" y="803.0" width="117.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.4" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="529.0" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (9 samples, 0.11%)</title><rect x="529.0" y="771.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (9 samples, 0.11%)</title><rect x="529.0" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (9 samples, 0.11%)</title><rect x="529.0" y="739.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="529.7" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="532.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="530.0" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="533.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (615 samples, 7.74%)</title><rect x="530.3" y="787.0" width="91.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.3" y="798.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (7 samples, 0.09%)</title><rect x="530.3" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (601 samples, 7.57%)</title><rect x="531.4" y="771.0" width="89.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (601 samples, 7.57%)</title><rect x="531.4" y="755.0" width="89.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="766.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.18%)</title><rect x="532.0" y="739.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="532.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="532.1" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="532.6" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="532.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="533.0" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (4 samples, 0.05%)</title><rect x="533.5" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (155 samples, 1.95%)</title><rect x="534.0" y="739.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (150 samples, 1.89%)</title><rect x="534.3" y="723.0" width="22.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.3" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="535.1" y="707.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="538.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.24%)</title><rect x="535.4" y="707.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="538.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.24%)</title><rect x="535.4" y="691.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="538.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.19%)</title><rect x="535.4" y="675.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="538.4" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="535.5" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.5" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="535.8" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="538.8" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="536.1" y="659.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="539.1" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.10%)</title><rect x="536.4" y="659.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="539.4" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="536.6" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="537.8" y="675.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="540.8" y="686.0"></text>
</g>
<g>
<title>__GI___recv (121 samples, 1.52%)</title><rect x="538.2" y="707.0" width="18.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="541.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.28%)</title><rect x="541.0" y="691.0" width="15.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="544.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.28%)</title><rect x="541.0" y="675.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="544.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.18%)</title><rect x="542.2" y="659.0" width="14.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="545.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.18%)</title><rect x="542.2" y="643.0" width="14.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="545.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="542.4" y="627.0" width="13.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="545.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="542.7" y="611.0" width="13.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="545.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.12%)</title><rect x="543.0" y="595.0" width="13.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="546.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="545.5" y="579.0" width="10.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="548.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.70%)</title><rect x="547.9" y="563.0" width="8.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="550.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.57%)</title><rect x="549.5" y="547.0" width="6.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="552.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="552.9" y="531.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="555.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="554.8" y="515.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="557.8" y="526.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="556.2" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="559.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="556.6" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (38 samples, 0.48%)</title><rect x="557.1" y="739.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="557.5" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="557.5" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (21 samples, 0.26%)</title><rect x="557.8" y="723.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="560.0" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="560.0" y="691.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="560.9" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="561.4" y="707.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="564.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="561.8" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="561.8" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="561.8" y="691.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 0.16%)</title><rect x="562.7" y="739.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.09%)</title><rect x="563.6" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="563.6" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="563.6" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.09%)</title><rect x="563.6" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.08%)</title><rect x="564.6" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="565.1" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="565.1" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (68 samples, 0.86%)</title><rect x="565.5" y="739.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.5" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.03%)</title><rect x="565.7" y="723.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="568.7" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (65 samples, 0.82%)</title><rect x="566.0" y="723.0" width="9.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="569.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="568.4" y="707.0" width="7.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="571.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="568.4" y="691.0" width="7.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="571.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="571.2" y="675.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="574.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="571.2" y="659.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.34%)</title><rect x="571.6" y="643.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="574.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="572.7" y="627.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="575.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="574.0" y="611.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="577.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="574.9" y="595.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="577.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (298 samples, 3.75%)</title><rect x="575.6" y="739.0" width="44.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.6" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.08%)</title><rect x="576.4" y="723.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="579.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="576.8" y="707.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="579.8" y="718.0"></text>
</g>
<g>
<title>__send (284 samples, 3.58%)</title><rect x="577.6" y="723.0" width="42.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="580.6" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (271 samples, 3.41%)</title><rect x="579.5" y="707.0" width="40.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="582.5" y="718.0">[un..</text>
</g>
<g>
<title>[unknown] (271 samples, 3.41%)</title><rect x="579.5" y="691.0" width="40.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="582.5" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (267 samples, 3.36%)</title><rect x="580.1" y="675.0" width="39.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="583.1" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (266 samples, 3.35%)</title><rect x="580.2" y="659.0" width="39.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="583.2" y="670.0">[un..</text>
</g>
<g>
<title>[unknown] (264 samples, 3.32%)</title><rect x="580.5" y="643.0" width="39.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="583.5" y="654.0">[un..</text>
</g>
<g>
<title>[unknown] (263 samples, 3.31%)</title><rect x="580.7" y="627.0" width="39.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="583.7" y="638.0">[un..</text>
</g>
<g>
<title>[unknown] (259 samples, 3.26%)</title><rect x="581.3" y="611.0" width="38.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="584.3" y="622.0">[un..</text>
</g>
<g>
<title>[unknown] (257 samples, 3.24%)</title><rect x="581.6" y="595.0" width="38.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="584.6" y="606.0">[un..</text>
</g>
<g>
<title>[unknown] (249 samples, 3.13%)</title><rect x="582.8" y="579.0" width="37.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="585.8" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (235 samples, 2.96%)</title><rect x="584.8" y="563.0" width="35.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="587.8" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (225 samples, 2.83%)</title><rect x="586.3" y="547.0" width="33.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="589.3" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (209 samples, 2.63%)</title><rect x="588.7" y="531.0" width="31.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="591.7" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (186 samples, 2.34%)</title><rect x="592.1" y="515.0" width="27.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="595.1" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.30%)</title><rect x="592.6" y="499.0" width="27.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="595.6" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.25%)</title><rect x="593.2" y="483.0" width="26.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="596.2" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.23%)</title><rect x="593.5" y="467.0" width="26.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="596.5" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.20%)</title><rect x="593.8" y="451.0" width="26.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="596.8" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.14%)</title><rect x="594.5" y="435.0" width="25.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="597.5" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.04%)</title><rect x="595.7" y="419.0" width="24.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="598.7" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="595.8" y="403.0" width="24.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="598.8" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (155 samples, 1.95%)</title><rect x="596.7" y="387.0" width="23.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="599.7" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.94%)</title><rect x="596.9" y="371.0" width="22.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.9" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (149 samples, 1.88%)</title><rect x="597.6" y="355.0" width="22.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="600.6" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.84%)</title><rect x="598.1" y="339.0" width="21.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="601.1" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="598.8" y="323.0" width="21.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="601.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.74%)</title><rect x="599.3" y="307.0" width="20.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="602.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.71%)</title><rect x="599.6" y="291.0" width="20.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="602.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.66%)</title><rect x="600.1" y="275.0" width="19.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="603.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.59%)</title><rect x="601.0" y="259.0" width="18.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="604.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.57%)</title><rect x="601.2" y="243.0" width="18.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="604.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.57%)</title><rect x="601.2" y="227.0" width="18.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="604.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.54%)</title><rect x="601.6" y="211.0" width="18.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="604.6" y="222.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="602.4" y="195.0" width="17.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="605.4" y="206.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.37%)</title><rect x="603.6" y="179.0" width="16.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="606.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="604.8" y="163.0" width="15.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="607.8" y="174.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.07%)</title><rect x="607.1" y="147.0" width="12.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="610.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.78%)</title><rect x="610.5" y="131.0" width="9.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="613.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.72%)</title><rect x="611.3" y="115.0" width="8.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="614.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.70%)</title><rect x="611.4" y="99.0" width="8.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="614.4" y="110.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.05%)</title><rect x="619.9" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.05%)</title><rect x="619.9" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.9" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.05%)</title><rect x="619.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.09%)</title><rect x="620.6" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3 samples, 0.04%)</title><rect x="621.2" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (166 samples, 2.09%)</title><rect x="621.7" y="787.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.7" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (166 samples, 2.09%)</title><rect x="621.7" y="771.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.7" y="782.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (156 samples, 1.96%)</title><rect x="621.7" y="755.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.7" y="766.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (155 samples, 1.95%)</title><rect x="621.8" y="739.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.8" y="750.0">o..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="622.3" y="723.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="625.3" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="622.3" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="625.3" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="622.7" y="723.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="625.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (142 samples, 1.79%)</title><rect x="623.5" y="723.0" width="21.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="626.5" y="734.0">r..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.04%)</title><rect x="624.1" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="627.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (131 samples, 1.65%)</title><rect x="625.0" y="707.0" width="19.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="628.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (129 samples, 1.62%)</title><rect x="625.3" y="691.0" width="19.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="628.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (127 samples, 1.60%)</title><rect x="625.3" y="675.0" width="18.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="628.3" y="686.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="625.4" y="659.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="628.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (111 samples, 1.40%)</title><rect x="625.8" y="659.0" width="16.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="628.8" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.05%)</title><rect x="625.8" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="628.8" y="654.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="626.4" y="643.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="629.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (91 samples, 1.15%)</title><rect x="627.0" y="643.0" width="13.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="630.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="629.6" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="632.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.04%)</title><rect x="629.9" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="632.9" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.04%)</title><rect x="629.9" y="611.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="632.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (60 samples, 0.76%)</title><rect x="630.3" y="627.0" width="8.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="633.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (58 samples, 0.73%)</title><rect x="630.6" y="611.0" width="8.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="633.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (50 samples, 0.63%)</title><rect x="631.0" y="595.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="634.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.03%)</title><rect x="631.0" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="634.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (46 samples, 0.58%)</title><rect x="631.6" y="579.0" width="6.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="634.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="631.9" y="563.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="634.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.03%)</title><rect x="632.2" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="635.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (36 samples, 0.45%)</title><rect x="632.5" y="563.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="635.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="633.0" y="547.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.34%)</title><rect x="633.3" y="547.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="636.3" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (23 samples, 0.29%)</title><rect x="633.7" y="531.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="636.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (8 samples, 0.10%)</title><rect x="635.5" y="515.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="638.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="635.6" y="499.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="638.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.06%)</title><rect x="635.9" y="499.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="638.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="636.8" y="515.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="639.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="638.0" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="641.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="638.5" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="641.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="638.8" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="641.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.04%)</title><rect x="639.2" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="642.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="639.2" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="642.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="639.2" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="642.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="639.4" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="642.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="639.4" y="563.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.03%)</title><rect x="639.4" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="642.4" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="639.4" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="639.4" y="515.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="642.4" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="639.4" y="499.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="642.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="639.4" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="642.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="640.0" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="643.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="640.6" y="643.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="643.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="641.0" y="643.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="644.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="641.3" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="644.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="641.6" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="644.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.04%)</title><rect x="641.9" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="644.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="642.3" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="645.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.08%)</title><rect x="642.8" y="659.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="645.8" y="670.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="642.8" y="643.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="645.8" y="654.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="643.8" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="646.8" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="644.6" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="647.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.08%)</title><rect x="644.9" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (4 samples, 0.05%)</title><rect x="645.8" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="645.8" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="645.8" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="645.8" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="645.8" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="645.8" y="675.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="645.8" y="659.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="646.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="646.0" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="646.0" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (17 samples, 0.21%)</title><rect x="646.3" y="803.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (17 samples, 0.21%)</title><rect x="646.3" y="787.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.3" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (17 samples, 0.21%)</title><rect x="646.3" y="771.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="646.3" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.add (15 samples, 0.19%)</title><rect x="646.6" y="755.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.18%)</title><rect x="646.8" y="739.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.16%)</title><rect x="646.9" y="723.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.06%)</title><rect x="647.7" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="648.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (3 samples, 0.04%)</title><rect x="648.9" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.03%)</title><rect x="649.0" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.08%)</title><rect x="649.3" y="867.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="649.5" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="649.5" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="650.4" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="650.4" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="650.4" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="650.9" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="650.9" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 0.43%)</title><rect x="651.8" y="883.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (32 samples, 0.40%)</title><rect x="652.1" y="867.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="652.1" y="851.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="655.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="652.4" y="851.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="655.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="652.4" y="835.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="655.4" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="652.4" y="819.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="655.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="652.7" y="803.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="655.7" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="653.0" y="787.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="656.0" y="798.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.28%)</title><rect x="653.5" y="851.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="656.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="654.2" y="835.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="657.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="654.2" y="819.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="657.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="654.5" y="803.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="657.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="654.5" y="787.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="657.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="654.7" y="771.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="657.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="655.0" y="755.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="658.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="655.0" y="739.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="658.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="655.3" y="723.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="658.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="655.6" y="707.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="658.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="655.7" y="691.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="658.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="655.9" y="675.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="658.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="656.0" y="659.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="659.0" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=29991] (608 samples, 7.65%)</title><rect x="656.9" y="947.0" width="90.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="659.9" y="958.0">[NIO Selec..</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="657.5" y="931.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="660.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="657.8" y="915.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="660.8" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="657.8" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="660.8" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (600 samples, 7.55%)</title><rect x="658.1" y="931.0" width="89.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.1" y="942.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (79 samples, 0.99%)</title><rect x="658.7" y="915.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (79 samples, 0.99%)</title><rect x="658.7" y="899.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.7" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="659.0" y="883.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="662.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="659.4" y="883.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="662.4" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="659.6" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="662.6" y="878.0"></text>
</g>
<g>
<title>epoll_wait (69 samples, 0.87%)</title><rect x="659.9" y="867.0" width="10.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="662.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.64%)</title><rect x="662.5" y="851.0" width="7.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="665.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.64%)</title><rect x="662.5" y="835.0" width="7.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="665.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="662.8" y="819.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="665.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.60%)</title><rect x="663.0" y="803.0" width="7.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="666.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.57%)</title><rect x="663.4" y="787.0" width="6.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="666.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="664.0" y="771.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="667.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="665.2" y="755.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="668.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="667.0" y="739.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="670.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="668.3" y="723.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="671.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="669.2" y="707.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="672.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (517 samples, 6.51%)</title><rect x="670.4" y="915.0" width="76.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.4" y="926.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (514 samples, 6.47%)</title><rect x="670.9" y="899.0" width="76.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.9" y="910.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (466 samples, 5.87%)</title><rect x="670.9" y="883.0" width="69.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.9" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (441 samples, 5.55%)</title><rect x="671.9" y="867.0" width="65.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.9" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (441 samples, 5.55%)</title><rect x="671.9" y="851.0" width="65.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.9" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.09%)</title><rect x="671.9" y="835.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="671.9" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="672.0" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="672.0" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="672.0" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (2 samples, 0.03%)</title><rect x="672.6" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (434 samples, 5.46%)</title><rect x="672.9" y="835.0" width="64.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.9" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (432 samples, 5.44%)</title><rect x="673.2" y="819.0" width="64.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.2" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (221 samples, 2.78%)</title><rect x="673.2" y="803.0" width="32.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.2" y="814.0">on..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="673.5" y="787.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="676.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (213 samples, 2.68%)</title><rect x="673.8" y="787.0" width="31.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.8" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.09%)</title><rect x="673.8" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 2.59%)</title><rect x="674.9" y="771.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 2.59%)</title><rect x="674.9" y="755.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.9" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (206 samples, 2.59%)</title><rect x="674.9" y="739.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.9" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (206 samples, 2.59%)</title><rect x="674.9" y="723.0" width="30.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.9" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="675.2" y="707.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="678.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="675.2" y="691.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="678.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="675.2" y="675.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="678.2" y="686.0"></text>
</g>
<g>
<title>__send (200 samples, 2.52%)</title><rect x="675.8" y="707.0" width="29.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="678.8" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (196 samples, 2.47%)</title><rect x="676.3" y="691.0" width="29.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="679.3" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (196 samples, 2.47%)</title><rect x="676.3" y="675.0" width="29.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="679.3" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (192 samples, 2.42%)</title><rect x="676.9" y="659.0" width="28.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="679.9" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (192 samples, 2.42%)</title><rect x="676.9" y="643.0" width="28.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="679.9" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (190 samples, 2.39%)</title><rect x="677.2" y="627.0" width="28.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="680.2" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (190 samples, 2.39%)</title><rect x="677.2" y="611.0" width="28.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="680.2" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (187 samples, 2.35%)</title><rect x="677.7" y="595.0" width="27.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="680.7" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (186 samples, 2.34%)</title><rect x="677.8" y="579.0" width="27.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="680.8" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.29%)</title><rect x="678.4" y="563.0" width="27.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="681.4" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (171 samples, 2.15%)</title><rect x="680.1" y="547.0" width="25.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="683.1" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 2.00%)</title><rect x="681.8" y="531.0" width="23.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="684.8" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.93%)</title><rect x="682.7" y="515.0" width="22.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="685.7" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.81%)</title><rect x="684.1" y="499.0" width="21.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="687.1" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (136 samples, 1.71%)</title><rect x="685.3" y="483.0" width="20.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="688.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.65%)</title><rect x="686.0" y="467.0" width="19.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="689.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.64%)</title><rect x="686.2" y="451.0" width="19.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="689.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.62%)</title><rect x="686.3" y="435.0" width="19.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="689.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.57%)</title><rect x="686.9" y="419.0" width="18.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="689.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="687.5" y="403.0" width="18.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="690.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="687.5" y="387.0" width="18.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="690.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.42%)</title><rect x="688.7" y="371.0" width="16.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="691.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.42%)</title><rect x="688.7" y="355.0" width="16.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="691.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.40%)</title><rect x="689.0" y="339.0" width="16.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="692.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.33%)</title><rect x="689.7" y="323.0" width="15.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="692.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.30%)</title><rect x="690.2" y="307.0" width="15.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="693.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="690.5" y="291.0" width="15.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="693.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="690.5" y="275.0" width="15.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="693.5" y="286.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="690.5" y="259.0" width="15.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="693.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.23%)</title><rect x="690.9" y="243.0" width="14.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="693.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.20%)</title><rect x="691.4" y="227.0" width="14.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="694.4" y="238.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.20%)</title><rect x="691.4" y="211.0" width="14.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="694.4" y="222.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.13%)</title><rect x="692.1" y="195.0" width="13.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="695.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.04%)</title><rect x="693.1" y="179.0" width="12.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="696.1" y="190.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.01%)</title><rect x="693.6" y="163.0" width="11.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="696.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.93%)</title><rect x="694.5" y="147.0" width="11.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="697.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.69%)</title><rect x="697.3" y="131.0" width="8.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="700.3" y="142.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="699.5" y="115.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="702.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.45%)</title><rect x="700.1" y="99.0" width="5.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="703.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.44%)</title><rect x="700.3" y="83.0" width="5.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="703.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="704.9" y="67.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="707.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="704.9" y="51.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="707.9" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="705.2" y="35.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="705.5" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="705.6" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="705.6" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="706.1" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="706.1" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="706.1" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.13%)</title><rect x="706.5" y="803.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="707.4" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="707.4" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="707.4" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (198 samples, 2.49%)</title><rect x="708.0" y="803.0" width="29.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.0" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="708.0" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="708.0" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="708.0" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="708.0" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (196 samples, 2.47%)</title><rect x="708.3" y="787.0" width="29.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.3" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (196 samples, 2.47%)</title><rect x="708.3" y="771.0" width="29.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.3" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (183 samples, 2.30%)</title><rect x="708.3" y="755.0" width="27.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.3" y="766.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (180 samples, 2.27%)</title><rect x="708.7" y="739.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.7" y="750.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (4 samples, 0.05%)</title><rect x="708.9" y="723.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="711.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="709.5" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="712.5" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="709.6" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="712.6" y="718.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="709.9" y="723.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="712.9" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="710.5" y="723.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="713.5" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (7 samples, 0.09%)</title><rect x="711.1" y="723.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="714.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="712.4" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="715.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="712.9" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="715.9" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (150 samples, 1.89%)</title><rect x="713.2" y="723.0" width="22.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="716.2" y="734.0">r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="713.6" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.6" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.05%)</title><rect x="713.9" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="715.0" y="707.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="718.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (131 samples, 1.65%)</title><rect x="715.6" y="707.0" width="19.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="718.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="715.7" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (128 samples, 1.61%)</title><rect x="716.0" y="691.0" width="19.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="719.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (126 samples, 1.59%)</title><rect x="716.2" y="675.0" width="18.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="719.2" y="686.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="716.2" y="659.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="719.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (108 samples, 1.36%)</title><rect x="716.6" y="659.0" width="16.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="719.6" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="716.8" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="719.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (95 samples, 1.20%)</title><rect x="717.6" y="643.0" width="14.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.6" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.05%)</title><rect x="719.7" y="627.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="722.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="611.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="722.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="595.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="722.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="579.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="722.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="563.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="722.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="547.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="722.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="719.7" y="531.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="722.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="720.3" y="627.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="723.3" y="638.0"></text>
</g>
<g>
<title>_init (5 samples, 0.06%)</title><rect x="720.6" y="627.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="723.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="721.4" y="627.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="724.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.04%)</title><rect x="721.7" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="724.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.08%)</title><rect x="722.1" y="627.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="725.1" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.04%)</title><rect x="722.4" y="611.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="725.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (44 samples, 0.55%)</title><rect x="723.1" y="627.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="726.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (40 samples, 0.50%)</title><rect x="723.7" y="611.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="726.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (35 samples, 0.44%)</title><rect x="723.9" y="595.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="726.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="724.0" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="727.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (32 samples, 0.40%)</title><rect x="724.3" y="579.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="727.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (27 samples, 0.34%)</title><rect x="725.1" y="563.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="728.1" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (22 samples, 0.28%)</title><rect x="725.2" y="547.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="728.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (20 samples, 0.25%)</title><rect x="725.5" y="531.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="728.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (10 samples, 0.13%)</title><rect x="726.9" y="515.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="729.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.08%)</title><rect x="727.4" y="499.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="730.4" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.05%)</title><rect x="727.7" y="483.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="730.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="729.2" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="732.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (4 samples, 0.05%)</title><rect x="729.7" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="732.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.05%)</title><rect x="729.7" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="729.7" y="595.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="729.8" y="579.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="732.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="730.0" y="563.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="733.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.03%)</title><rect x="730.0" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="733.0" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="730.0" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="733.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="730.0" y="515.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="733.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="730.4" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="733.4" y="638.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="730.4" y="611.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="733.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="730.7" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="733.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="731.0" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="734.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.03%)</title><rect x="731.5" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="734.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.05%)</title><rect x="731.8" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="734.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.05%)</title><rect x="732.6" y="659.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="735.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="733.2" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="733.2" y="643.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="736.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="733.7" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="736.7" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="734.3" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="737.3" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="734.6" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="737.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="735.0" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="738.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (8 samples, 0.10%)</title><rect x="735.5" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (7 samples, 0.09%)</title><rect x="735.6" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.09%)</title><rect x="735.6" y="723.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="735.6" y="707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="735.6" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="735.6" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.09%)</title><rect x="735.6" y="659.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.6" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="736.2" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.2" y="654.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="736.4" y="627.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="739.4" y="638.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="736.4" y="611.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="739.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (5 samples, 0.06%)</title><rect x="736.7" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="736.7" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="736.7" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="736.7" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="736.7" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="736.7" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="736.7" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="737.1" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="737.1" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="737.1" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="737.1" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.06%)</title><rect x="737.4" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="737.5" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="737.7" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.06%)</title><rect x="738.1" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="738.9" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="738.9" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="738.9" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.9" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="739.3" y="819.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="742.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="739.8" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="739.8" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (48 samples, 0.60%)</title><rect x="740.1" y="883.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 0.59%)</title><rect x="740.2" y="867.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="740.5" y="851.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="743.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="740.5" y="835.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="743.5" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.15%)</title><rect x="740.5" y="819.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="743.5" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="740.7" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="743.7" y="814.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="741.0" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="744.0" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="741.6" y="803.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="744.6" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="741.9" y="787.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="744.9" y="798.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.03%)</title><rect x="742.3" y="819.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="745.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="742.6" y="819.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="745.6" y="830.0"></text>
</g>
<g>
<title>__GI___recv (29 samples, 0.37%)</title><rect x="742.9" y="851.0" width="4.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="745.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="743.8" y="835.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="746.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="743.8" y="819.0" width="3.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="746.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="744.2" y="803.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="747.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="744.2" y="787.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="747.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="744.2" y="771.0" width="3.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="747.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="744.7" y="755.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="747.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="745.0" y="739.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="748.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="745.4" y="723.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="748.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="746.2" y="707.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="749.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="746.3" y="691.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="749.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="746.3" y="675.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="749.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="746.6" y="659.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="749.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=30015] (612 samples, 7.70%)</title><rect x="747.2" y="947.0" width="90.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="750.2" y="958.0">[NIO Selec..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="747.5" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="750.5" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="747.5" y="915.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="750.5" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="747.5" y="899.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="750.5" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.05%)</title><rect x="747.9" y="931.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="750.9" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="747.9" y="915.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="750.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.05%)</title><rect x="747.9" y="899.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="750.9" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="748.1" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="751.1" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="748.5" y="931.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="751.5" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (600 samples, 7.55%)</title><rect x="749.0" y="931.0" width="89.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.0" y="942.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (63 samples, 0.79%)</title><rect x="749.1" y="915.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (63 samples, 0.79%)</title><rect x="749.1" y="899.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="749.4" y="883.0" width="8.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="752.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="749.4" y="867.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="752.4" y="878.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="749.4" y="851.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="752.4" y="862.0"></text>
</g>
<g>
<title>epoll_wait (55 samples, 0.69%)</title><rect x="750.0" y="867.0" width="8.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="751.2" y="851.0" width="7.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="754.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="751.2" y="835.0" width="7.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="754.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="752.0" y="819.0" width="6.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="755.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="752.1" y="803.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="755.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="752.3" y="787.0" width="5.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="755.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.43%)</title><rect x="753.1" y="771.0" width="5.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="756.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="754.9" y="755.0" width="3.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="757.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.23%)</title><rect x="755.5" y="739.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="758.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="756.0" y="723.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="759.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="756.9" y="707.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="759.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="757.9" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="760.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (535 samples, 6.73%)</title><rect x="758.5" y="915.0" width="79.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.5" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (527 samples, 6.63%)</title><rect x="759.5" y="899.0" width="78.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.5" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (483 samples, 6.08%)</title><rect x="759.5" y="883.0" width="71.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="762.5" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (461 samples, 5.80%)</title><rect x="760.1" y="867.0" width="68.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.1" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (461 samples, 5.80%)</title><rect x="760.1" y="851.0" width="68.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.05%)</title><rect x="760.1" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="760.1" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="760.1" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="760.1" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="760.1" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (457 samples, 5.75%)</title><rect x="760.7" y="835.0" width="67.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.7" y="846.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="760.9" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="760.9" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (453 samples, 5.70%)</title><rect x="761.3" y="819.0" width="67.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.3" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (210 samples, 2.64%)</title><rect x="761.3" y="803.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.3" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (206 samples, 2.59%)</title><rect x="761.8" y="787.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.8" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.06%)</title><rect x="761.9" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="762.2" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="762.2" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="762.2" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="762.2" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (200 samples, 2.52%)</title><rect x="762.7" y="771.0" width="29.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.7" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (200 samples, 2.52%)</title><rect x="762.7" y="755.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.7" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="762.7" y="739.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (198 samples, 2.49%)</title><rect x="762.9" y="739.0" width="29.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.9" y="750.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="762.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (196 samples, 2.47%)</title><rect x="763.2" y="723.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.2" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="763.8" y="707.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="766.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="763.8" y="691.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="766.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.08%)</title><rect x="763.8" y="675.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="766.8" y="686.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="764.0" y="659.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="767.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="764.4" y="659.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="767.4" y="670.0"></text>
</g>
<g>
<title>__send (186 samples, 2.34%)</title><rect x="764.7" y="707.0" width="27.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="767.7" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.28%)</title><rect x="765.5" y="691.0" width="26.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="768.5" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.28%)</title><rect x="765.5" y="675.0" width="26.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="768.5" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (176 samples, 2.22%)</title><rect x="766.2" y="659.0" width="26.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="769.2" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (176 samples, 2.22%)</title><rect x="766.2" y="643.0" width="26.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="769.2" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (174 samples, 2.19%)</title><rect x="766.5" y="627.0" width="25.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="769.5" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (172 samples, 2.17%)</title><rect x="766.8" y="611.0" width="25.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="769.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (171 samples, 2.15%)</title><rect x="767.0" y="595.0" width="25.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="770.0" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.13%)</title><rect x="767.3" y="579.0" width="25.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="770.3" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.99%)</title><rect x="768.9" y="563.0" width="23.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="771.9" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.93%)</title><rect x="769.6" y="547.0" width="22.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="772.6" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (149 samples, 1.88%)</title><rect x="770.2" y="531.0" width="22.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="773.2" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.79%)</title><rect x="771.3" y="515.0" width="21.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="774.3" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (132 samples, 1.66%)</title><rect x="772.8" y="499.0" width="19.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="775.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.61%)</title><rect x="773.3" y="483.0" width="19.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="776.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.56%)</title><rect x="773.9" y="467.0" width="18.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="776.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.55%)</title><rect x="774.1" y="451.0" width="18.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="777.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.52%)</title><rect x="774.4" y="435.0" width="18.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="777.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.49%)</title><rect x="774.8" y="419.0" width="17.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="777.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.40%)</title><rect x="775.9" y="403.0" width="16.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="778.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.40%)</title><rect x="775.9" y="387.0" width="16.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="778.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.36%)</title><rect x="776.3" y="371.0" width="16.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="779.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.30%)</title><rect x="777.1" y="355.0" width="15.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="780.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="778.0" y="339.0" width="14.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="781.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.16%)</title><rect x="778.7" y="323.0" width="13.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="781.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.12%)</title><rect x="779.1" y="307.0" width="13.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="782.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="779.3" y="291.0" width="13.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="782.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="779.3" y="275.0" width="13.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="782.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.10%)</title><rect x="779.4" y="259.0" width="13.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="782.4" y="270.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.07%)</title><rect x="779.7" y="243.0" width="12.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="782.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.06%)</title><rect x="779.9" y="227.0" width="12.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="782.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.06%)</title><rect x="779.9" y="211.0" width="12.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="782.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.06%)</title><rect x="779.9" y="195.0" width="12.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="782.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.99%)</title><rect x="780.6" y="179.0" width="11.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="783.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="780.9" y="163.0" width="11.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="783.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.92%)</title><rect x="781.5" y="147.0" width="10.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="784.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.78%)</title><rect x="783.1" y="131.0" width="9.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="786.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="784.3" y="115.0" width="8.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="787.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.64%)</title><rect x="784.8" y="99.0" width="7.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="787.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.63%)</title><rect x="784.9" y="83.0" width="7.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="787.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="791.5" y="67.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="794.5" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="791.8" y="51.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="794.8" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="792.1" y="35.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="795.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.06%)</title><rect x="792.5" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="792.7" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="792.7" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="793.3" y="803.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="793.8" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="793.8" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (229 samples, 2.88%)</title><rect x="794.6" y="803.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.6" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="794.6" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="797.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.06%)</title><rect x="794.6" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.06%)</title><rect x="794.6" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.06%)</title><rect x="794.6" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.6" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="794.9" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="797.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (224 samples, 2.82%)</title><rect x="795.3" y="787.0" width="33.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (224 samples, 2.82%)</title><rect x="795.3" y="771.0" width="33.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.3" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (210 samples, 2.64%)</title><rect x="795.3" y="755.0" width="31.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.3" y="766.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (209 samples, 2.63%)</title><rect x="795.5" y="739.0" width="31.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.5" y="750.0">or..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="795.8" y="723.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="798.8" y="734.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="795.8" y="707.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="798.8" y="718.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="796.4" y="723.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="799.4" y="734.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="796.8" y="723.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="799.8" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="797.1" y="723.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="800.1" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="797.7" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="800.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="798.2" y="723.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="801.2" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (187 samples, 2.35%)</title><rect x="798.4" y="723.0" width="27.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="801.4" y="734.0">r..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="799.3" y="707.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="802.3" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="799.3" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="802.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="799.6" y="707.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="802.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.05%)</title><rect x="799.9" y="691.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="802.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (167 samples, 2.10%)</title><rect x="800.5" y="707.0" width="24.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="803.5" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (166 samples, 2.09%)</title><rect x="800.7" y="691.0" width="24.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="803.7" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (160 samples, 2.01%)</title><rect x="800.8" y="675.0" width="23.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="803.8" y="686.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="801.0" y="659.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="804.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.03%)</title><rect x="801.4" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="804.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (121 samples, 1.52%)</title><rect x="801.7" y="659.0" width="18.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="804.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (109 samples, 1.37%)</title><rect x="802.3" y="643.0" width="16.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="805.3" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.04%)</title><rect x="804.7" y="627.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="807.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="804.8" y="611.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="807.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="804.8" y="595.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="807.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="805.1" y="627.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="808.1" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="805.7" y="627.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="808.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.04%)</title><rect x="806.0" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="806.5" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.05%)</title><rect x="806.8" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="809.8" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="806.8" y="611.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="809.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (67 samples, 0.84%)</title><rect x="807.5" y="627.0" width="10.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (63 samples, 0.79%)</title><rect x="808.0" y="611.0" width="9.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="811.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (57 samples, 0.72%)</title><rect x="808.4" y="595.0" width="8.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="811.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.03%)</title><rect x="808.5" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="809.0" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="812.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (51 samples, 0.64%)</title><rect x="809.3" y="579.0" width="7.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (42 samples, 0.53%)</title><rect x="810.2" y="563.0" width="6.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="813.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="810.5" y="547.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="813.5" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (34 samples, 0.43%)</title><rect x="811.1" y="547.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (28 samples, 0.35%)</title><rect x="811.5" y="531.0" width="4.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="814.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (13 samples, 0.16%)</title><rect x="813.2" y="515.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="816.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="813.3" y="499.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="816.3" y="510.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="813.6" y="499.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="816.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.10%)</title><rect x="813.9" y="499.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="816.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.03%)</title><rect x="814.3" y="483.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="817.3" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="814.8" y="483.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="817.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="815.1" y="515.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="818.1" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="815.4" y="499.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="818.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.04%)</title><rect x="815.7" y="531.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="818.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="816.6" y="563.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="819.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="817.0" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="820.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="817.5" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="818.7" y="643.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="821.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="819.1" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="822.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.05%)</title><rect x="819.8" y="659.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.13%)</title><rect x="820.4" y="659.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="823.4" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="820.4" y="643.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="823.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="820.9" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="823.9" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="821.5" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="824.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="822.1" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="825.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="822.4" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.4" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (6 samples, 0.08%)</title><rect x="822.8" y="659.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="825.8" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (6 samples, 0.08%)</title><rect x="823.7" y="659.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="826.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="824.7" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="827.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="825.5" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.5" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="826.2" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="829.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (10 samples, 0.13%)</title><rect x="826.5" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="826.7" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (6 samples, 0.08%)</title><rect x="827.1" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.08%)</title><rect x="827.1" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="827.1" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="827.1" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="827.1" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.08%)</title><rect x="827.1" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.1" y="670.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="827.7" y="643.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="830.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (4 samples, 0.05%)</title><rect x="828.0" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="828.0" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="828.0" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="828.0" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="828.0" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="828.0" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="828.0" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.11%)</title><rect x="828.6" y="867.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="829.0" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="829.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="829.0" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="829.0" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="829.3" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="832.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="829.5" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="829.9" y="867.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="829.9" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="829.9" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="830.8" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="830.8" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (44 samples, 0.55%)</title><rect x="831.3" y="883.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 0.55%)</title><rect x="831.3" y="867.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="831.4" y="851.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="834.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="831.4" y="835.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="834.4" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="831.4" y="819.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="834.4" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="831.9" y="803.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="834.9" y="814.0"></text>
</g>
<g>
<title>__GI___recv (36 samples, 0.45%)</title><rect x="832.5" y="851.0" width="5.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="835.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="833.2" y="835.0" width="4.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="836.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="833.2" y="819.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="836.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="834.0" y="803.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="837.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="834.1" y="787.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="837.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="834.2" y="771.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="837.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="834.2" y="755.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="837.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="834.7" y="739.0" width="3.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="837.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.24%)</title><rect x="835.0" y="723.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="838.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="835.4" y="707.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="838.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="836.0" y="691.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="839.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="836.9" y="675.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="839.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="837.4" y="659.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="840.4" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=29992] (617 samples, 7.77%)</title><rect x="838.1" y="947.0" width="91.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="841.1" y="958.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="838.3" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.3" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="838.3" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="841.3" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="838.3" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="841.3" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="838.3" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="841.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="838.6" y="931.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="841.6" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.05%)</title><rect x="838.6" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="841.6" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="838.6" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="841.6" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="838.6" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="841.6" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="838.6" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.6" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="838.7" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.7" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="839.1" y="931.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="842.1" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (607 samples, 7.64%)</title><rect x="839.6" y="931.0" width="90.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.6" y="942.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (71 samples, 0.89%)</title><rect x="840.0" y="915.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (69 samples, 0.87%)</title><rect x="840.3" y="899.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.84%)</title><rect x="840.3" y="883.0" width="10.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="843.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (67 samples, 0.84%)</title><rect x="840.3" y="867.0" width="10.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="843.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="841.5" y="851.0" width="8.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="844.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.74%)</title><rect x="841.5" y="835.0" width="8.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="844.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.69%)</title><rect x="842.1" y="819.0" width="8.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="845.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="842.3" y="803.0" width="8.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="845.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.64%)</title><rect x="842.7" y="787.0" width="7.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="845.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="843.3" y="771.0" width="7.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="846.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="845.4" y="755.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="848.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="846.9" y="739.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="849.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="848.4" y="723.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="851.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="849.4" y="707.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="852.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (532 samples, 6.70%)</title><rect x="850.6" y="915.0" width="79.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.6" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (530 samples, 6.67%)</title><rect x="850.9" y="899.0" width="78.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.9" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (476 samples, 5.99%)</title><rect x="850.9" y="883.0" width="70.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.9" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (458 samples, 5.77%)</title><rect x="851.5" y="867.0" width="68.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.5" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (458 samples, 5.77%)</title><rect x="851.5" y="851.0" width="68.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.5" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.05%)</title><rect x="851.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="851.6" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="851.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="854.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="851.6" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="851.6" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (454 samples, 5.72%)</title><rect x="852.1" y="835.0" width="67.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.1" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (452 samples, 5.69%)</title><rect x="852.4" y="819.0" width="67.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.4" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (210 samples, 2.64%)</title><rect x="852.5" y="803.0" width="31.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (203 samples, 2.56%)</title><rect x="853.3" y="787.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.3" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.14%)</title><rect x="853.3" y="771.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="854.0" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="854.0" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="854.0" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="854.0" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (192 samples, 2.42%)</title><rect x="854.9" y="771.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (192 samples, 2.42%)</title><rect x="854.9" y="755.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.9" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (191 samples, 2.40%)</title><rect x="855.0" y="739.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.0" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (189 samples, 2.38%)</title><rect x="855.3" y="723.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="858.3" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="856.1" y="707.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="859.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="856.1" y="691.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="859.1" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="856.1" y="675.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="859.1" y="686.0"></text>
</g>
<g>
<title>__send (179 samples, 2.25%)</title><rect x="856.8" y="707.0" width="26.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="859.8" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (174 samples, 2.19%)</title><rect x="857.6" y="691.0" width="25.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="860.6" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (174 samples, 2.19%)</title><rect x="857.6" y="675.0" width="25.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="860.6" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="859.5" y="659.0" width="23.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="862.5" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="859.5" y="643.0" width="23.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="862.5" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (160 samples, 2.01%)</title><rect x="859.6" y="627.0" width="23.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="862.6" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 2.00%)</title><rect x="859.8" y="611.0" width="23.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="862.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.99%)</title><rect x="859.9" y="595.0" width="23.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="862.9" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.98%)</title><rect x="860.1" y="579.0" width="23.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="863.1" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.86%)</title><rect x="861.4" y="563.0" width="22.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="864.4" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (140 samples, 1.76%)</title><rect x="862.6" y="547.0" width="20.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="865.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.71%)</title><rect x="863.2" y="531.0" width="20.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="866.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.62%)</title><rect x="864.3" y="515.0" width="19.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="867.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="866.0" y="499.0" width="17.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="869.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.44%)</title><rect x="866.5" y="483.0" width="16.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="869.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.40%)</title><rect x="866.9" y="467.0" width="16.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="869.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.37%)</title><rect x="867.2" y="451.0" width="16.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="870.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.37%)</title><rect x="867.2" y="435.0" width="16.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="870.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.37%)</title><rect x="867.2" y="419.0" width="16.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="870.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.31%)</title><rect x="868.0" y="403.0" width="15.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="871.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.30%)</title><rect x="868.1" y="387.0" width="15.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="871.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="868.4" y="371.0" width="15.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="871.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="868.4" y="355.0" width="15.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="871.4" y="366.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.25%)</title><rect x="868.7" y="339.0" width="14.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="871.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="869.0" y="323.0" width="14.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="872.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="869.6" y="307.0" width="13.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="872.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.12%)</title><rect x="870.2" y="291.0" width="13.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="873.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="870.3" y="275.0" width="13.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="873.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.03%)</title><rect x="871.2" y="259.0" width="12.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="874.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.01%)</title><rect x="871.5" y="243.0" width="11.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="874.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.01%)</title><rect x="871.5" y="227.0" width="11.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="874.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.01%)</title><rect x="871.5" y="211.0" width="11.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="874.5" y="222.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.98%)</title><rect x="871.8" y="195.0" width="11.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="874.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.96%)</title><rect x="872.1" y="179.0" width="11.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="875.1" y="190.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.89%)</title><rect x="872.9" y="163.0" width="10.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="875.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.84%)</title><rect x="873.5" y="147.0" width="9.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="876.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="875.4" y="131.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="878.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.55%)</title><rect x="876.9" y="115.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="879.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="877.2" y="99.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="880.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.52%)</title><rect x="877.3" y="83.0" width="6.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="880.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="883.0" y="67.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="886.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="883.1" y="51.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="886.1" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="883.4" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="883.4" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="886.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="883.4" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="883.7" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.14%)</title><rect x="884.0" y="803.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="884.8" y="787.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="884.8" y="771.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="884.8" y="755.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="885.2" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="885.2" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="885.2" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="885.2" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (228 samples, 2.87%)</title><rect x="885.6" y="803.0" width="33.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.6" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="885.6" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="885.6" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="885.6" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="885.6" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (224 samples, 2.82%)</title><rect x="886.2" y="787.0" width="33.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.2" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (224 samples, 2.82%)</title><rect x="886.2" y="771.0" width="33.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.2" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (211 samples, 2.66%)</title><rect x="886.2" y="755.0" width="31.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.2" y="766.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (209 samples, 2.63%)</title><rect x="886.5" y="739.0" width="31.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.5" y="750.0">or..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="886.7" y="723.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="889.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="887.1" y="723.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="890.1" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (3 samples, 0.04%)</title><rect x="887.1" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="890.1" y="718.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.06%)</title><rect x="887.9" y="723.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="890.9" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="888.8" y="723.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="891.8" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="889.1" y="723.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="892.1" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="889.4" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.4" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="889.7" y="723.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="892.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="889.9" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.9" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (180 samples, 2.27%)</title><rect x="890.5" y="723.0" width="26.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="893.5" y="734.0">r..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="891.6" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="894.6" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="891.6" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="894.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="891.9" y="707.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="894.9" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="891.9" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="892.5" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="895.5" y="702.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (3 samples, 0.04%)</title><rect x="892.9" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="895.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (160 samples, 2.01%)</title><rect x="893.4" y="707.0" width="23.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.4" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="893.5" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="896.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (157 samples, 1.98%)</title><rect x="893.8" y="691.0" width="23.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="896.8" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (153 samples, 1.93%)</title><rect x="893.8" y="675.0" width="22.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="896.8" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (129 samples, 1.62%)</title><rect x="894.3" y="659.0" width="19.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="897.3" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.05%)</title><rect x="894.3" y="643.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="897.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (119 samples, 1.50%)</title><rect x="895.1" y="643.0" width="17.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="898.1" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="897.4" y="627.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="900.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="897.7" y="627.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="900.7" y="638.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="898.0" y="627.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="901.0" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="898.4" y="627.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="901.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.04%)</title><rect x="898.7" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="901.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="899.2" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.08%)</title><rect x="899.5" y="627.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="902.5" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.04%)</title><rect x="899.6" y="611.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="902.6" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="900.1" y="611.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="903.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (71 samples, 0.89%)</title><rect x="900.6" y="627.0" width="10.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="903.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (69 samples, 0.87%)</title><rect x="900.9" y="611.0" width="10.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="903.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (64 samples, 0.81%)</title><rect x="901.5" y="595.0" width="9.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="904.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (63 samples, 0.79%)</title><rect x="901.7" y="579.0" width="9.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.7" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="901.8" y="563.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="904.8" y="574.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="902.4" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="905.4" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.04%)</title><rect x="902.7" y="563.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="905.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (52 samples, 0.65%)</title><rect x="903.3" y="563.0" width="7.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="904.5" y="547.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="907.5" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (38 samples, 0.48%)</title><rect x="905.1" y="547.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="908.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (33 samples, 0.42%)</title><rect x="905.7" y="531.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="908.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (17 samples, 0.21%)</title><rect x="907.8" y="515.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="910.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="908.4" y="499.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="911.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.11%)</title><rect x="909.0" y="499.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.0" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="910.0" y="483.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="913.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="910.3" y="515.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="913.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="910.7" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="913.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.03%)</title><rect x="911.2" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="914.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.03%)</title><rect x="912.1" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="915.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.03%)</title><rect x="912.5" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="915.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.03%)</title><rect x="913.6" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="916.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.10%)</title><rect x="913.9" y="659.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.9" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="913.9" y="643.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="916.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="914.2" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="917.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="914.5" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.04%)</title><rect x="915.1" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="918.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="915.5" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="918.5" y="670.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.03%)</title><rect x="915.8" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="918.8" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="916.2" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="919.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="916.5" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="919.5" y="686.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="917.3" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="920.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (7 samples, 0.09%)</title><rect x="917.6" y="755.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="917.9" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (2 samples, 0.03%)</title><rect x="918.3" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="918.3" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.3" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.3" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.3" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.3" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="918.3" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (6 samples, 0.08%)</title><rect x="918.6" y="755.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="918.6" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.6" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.6" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="918.6" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="918.6" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="921.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="918.6" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="918.9" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="918.9" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="918.9" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="918.9" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="918.9" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="918.9" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="919.2" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.09%)</title><rect x="919.5" y="867.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="919.7" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="919.7" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="919.7" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="919.7" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="920.0" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="920.1" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="920.5" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="920.8" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="920.8" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="920.8" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="921.3" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 0.67%)</title><rect x="921.7" y="883.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="924.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 0.67%)</title><rect x="921.7" y="867.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="922.0" y="851.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="925.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="922.0" y="835.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="925.0" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.13%)</title><rect x="922.0" y="819.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="925.0" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.09%)</title><rect x="922.3" y="803.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="925.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="923.5" y="819.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="926.5" y="830.0"></text>
</g>
<g>
<title>__GI___recv (38 samples, 0.48%)</title><rect x="923.8" y="851.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="926.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="924.6" y="835.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="927.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="924.6" y="819.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="927.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="925.3" y="803.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="928.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="925.3" y="787.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="928.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="925.3" y="771.0" width="4.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="928.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="925.6" y="755.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="928.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="926.0" y="739.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="929.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="927.1" y="723.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="930.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="927.8" y="707.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="930.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="928.1" y="691.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="931.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="928.4" y="675.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="931.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="929.0" y="659.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="932.0" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=30016] (619 samples, 7.79%)</title><rect x="929.8" y="947.0" width="91.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="932.8" y="958.0">[NIO Select..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="929.8" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="932.8" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="929.8" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="932.8" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="929.8" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="932.8" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="929.8" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="932.8" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="930.4" y="931.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="933.4" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="930.4" y="915.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.4" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="930.4" y="899.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.4" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="930.4" y="883.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="933.4" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (613 samples, 7.72%)</title><rect x="930.6" y="931.0" width="91.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.6" y="942.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (78 samples, 0.98%)</title><rect x="930.8" y="915.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (75 samples, 0.94%)</title><rect x="931.2" y="899.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.05%)</title><rect x="931.7" y="883.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="934.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.86%)</title><rect x="932.3" y="883.0" width="10.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="935.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (66 samples, 0.83%)</title><rect x="932.6" y="867.0" width="9.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="935.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.72%)</title><rect x="933.9" y="851.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="936.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.72%)</title><rect x="933.9" y="835.0" width="8.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="936.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="934.4" y="819.0" width="8.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="937.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.68%)</title><rect x="934.4" y="803.0" width="8.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="937.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.67%)</title><rect x="934.5" y="787.0" width="7.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="937.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="935.4" y="771.0" width="7.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="938.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.40%)</title><rect x="937.6" y="755.0" width="4.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="940.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.33%)</title><rect x="938.5" y="739.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="941.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="939.4" y="723.0" width="3.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="942.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="940.6" y="707.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="943.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (534 samples, 6.72%)</title><rect x="942.4" y="915.0" width="79.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="945.4" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (534 samples, 6.72%)</title><rect x="942.4" y="899.0" width="79.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.4" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (488 samples, 6.14%)</title><rect x="942.4" y="883.0" width="72.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.4" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (471 samples, 5.93%)</title><rect x="942.8" y="867.0" width="70.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.8" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (471 samples, 5.93%)</title><rect x="942.8" y="851.0" width="70.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.8" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.09%)</title><rect x="942.8" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="943.0" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.06%)</title><rect x="943.0" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.06%)</title><rect x="943.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.06%)</title><rect x="943.0" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (464 samples, 5.84%)</title><rect x="943.9" y="835.0" width="68.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.9" y="846.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="944.0" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="944.0" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (461 samples, 5.80%)</title><rect x="944.3" y="819.0" width="68.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.3" y="830.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (226 samples, 2.84%)</title><rect x="944.5" y="803.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.5" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (221 samples, 2.78%)</title><rect x="945.1" y="787.0" width="32.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.1" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.18%)</title><rect x="945.2" y="771.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.10%)</title><rect x="946.1" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="946.1" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="946.1" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.10%)</title><rect x="946.1" y="707.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 2.59%)</title><rect x="947.3" y="771.0" width="30.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 2.59%)</title><rect x="947.3" y="755.0" width="30.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.3" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (206 samples, 2.59%)</title><rect x="947.3" y="739.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.3" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (205 samples, 2.58%)</title><rect x="947.4" y="723.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.4" y="734.0">on..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="947.9" y="707.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="950.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="947.9" y="691.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="950.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.08%)</title><rect x="947.9" y="675.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="950.9" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="948.5" y="659.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="951.5" y="670.0"></text>
</g>
<g>
<title>__send (194 samples, 2.44%)</title><rect x="949.1" y="707.0" width="28.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="952.1" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (184 samples, 2.32%)</title><rect x="950.6" y="691.0" width="27.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="953.6" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (184 samples, 2.32%)</title><rect x="950.6" y="675.0" width="27.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="953.6" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (180 samples, 2.27%)</title><rect x="951.1" y="659.0" width="26.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="954.1" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (180 samples, 2.27%)</title><rect x="951.1" y="643.0" width="26.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="954.1" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.25%)</title><rect x="951.3" y="627.0" width="26.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="954.3" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.23%)</title><rect x="951.6" y="611.0" width="26.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="954.6" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (172 samples, 2.17%)</title><rect x="952.3" y="595.0" width="25.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="955.3" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (172 samples, 2.17%)</title><rect x="952.3" y="579.0" width="25.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="955.3" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (166 samples, 2.09%)</title><rect x="953.2" y="563.0" width="24.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="956.2" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="954.0" y="547.0" width="23.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="957.0" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.93%)</title><rect x="955.2" y="531.0" width="22.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="958.2" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.84%)</title><rect x="956.2" y="515.0" width="21.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="959.2" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (136 samples, 1.71%)</title><rect x="957.7" y="499.0" width="20.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="960.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.64%)</title><rect x="958.6" y="483.0" width="19.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="961.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.60%)</title><rect x="959.0" y="467.0" width="18.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="962.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.59%)</title><rect x="959.2" y="451.0" width="18.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="962.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.55%)</title><rect x="959.6" y="435.0" width="18.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="962.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.50%)</title><rect x="960.2" y="419.0" width="17.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="963.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="960.5" y="403.0" width="17.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="963.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.47%)</title><rect x="960.5" y="387.0" width="17.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="963.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.42%)</title><rect x="961.1" y="371.0" width="16.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="964.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.37%)</title><rect x="961.7" y="355.0" width="16.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="964.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.32%)</title><rect x="962.3" y="339.0" width="15.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="965.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.27%)</title><rect x="962.9" y="323.0" width="15.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="965.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.25%)</title><rect x="963.2" y="307.0" width="14.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="966.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.23%)</title><rect x="963.3" y="291.0" width="14.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="966.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.23%)</title><rect x="963.3" y="275.0" width="14.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="966.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="964.1" y="259.0" width="13.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="967.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="964.1" y="243.0" width="13.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="967.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="964.1" y="227.0" width="13.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="967.1" y="238.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.17%)</title><rect x="964.1" y="211.0" width="13.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="967.1" y="222.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="964.4" y="195.0" width="13.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="967.4" y="206.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="964.8" y="179.0" width="13.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.96%)</title><rect x="966.6" y="163.0" width="11.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="969.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.87%)</title><rect x="967.6" y="147.0" width="10.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="970.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.76%)</title><rect x="969.0" y="131.0" width="8.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="972.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="970.9" y="115.0" width="7.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="973.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.55%)</title><rect x="971.3" y="99.0" width="6.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="974.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="971.6" y="83.0" width="6.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="974.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="978.0" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="978.5" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (228 samples, 2.87%)</title><rect x="978.9" y="803.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.9" y="814.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="978.9" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.06%)</title><rect x="978.9" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.06%)</title><rect x="978.9" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.06%)</title><rect x="978.9" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (223 samples, 2.81%)</title><rect x="979.7" y="787.0" width="33.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.7" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (223 samples, 2.81%)</title><rect x="979.7" y="771.0" width="33.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.7" y="782.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (206 samples, 2.59%)</title><rect x="979.7" y="755.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.7" y="766.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (204 samples, 2.57%)</title><rect x="980.0" y="739.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.0" y="750.0">or..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (3 samples, 0.04%)</title><rect x="980.0" y="723.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="983.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="980.6" y="723.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="983.6" y="734.0"></text>
</g>
<g>
<title>__malloc (6 samples, 0.08%)</title><rect x="981.6" y="723.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="984.6" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="982.5" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="985.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="983.4" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="986.4" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (177 samples, 2.23%)</title><rect x="983.7" y="723.0" width="26.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.7" y="734.0">r..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="984.4" y="707.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="987.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (168 samples, 2.11%)</title><rect x="984.7" y="707.0" width="25.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.7" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="984.7" y="691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="987.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (165 samples, 2.08%)</title><rect x="985.2" y="691.0" width="24.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.2" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (158 samples, 1.99%)</title><rect x="985.3" y="675.0" width="23.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="988.3" y="686.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="985.5" y="659.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="988.5" y="670.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="985.8" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="988.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (123 samples, 1.55%)</title><rect x="986.4" y="659.0" width="18.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="986.6" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (113 samples, 1.42%)</title><rect x="987.1" y="643.0" width="16.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="990.1" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.04%)</title><rect x="990.1" y="627.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="993.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="611.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="993.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="595.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="993.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="579.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="993.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="563.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="993.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="547.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="993.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="990.2" y="531.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="993.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="990.5" y="627.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="993.5" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="990.8" y="627.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="993.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.03%)</title><rect x="991.3" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="994.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.04%)</title><rect x="991.6" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.03%)</title><rect x="992.0" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (65 samples, 0.82%)</title><rect x="992.3" y="627.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (63 samples, 0.79%)</title><rect x="992.6" y="611.0" width="9.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (58 samples, 0.73%)</title><rect x="992.9" y="595.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (56 samples, 0.70%)</title><rect x="993.2" y="579.0" width="8.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="996.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (48 samples, 0.60%)</title><rect x="993.9" y="563.0" width="7.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="994.4" y="547.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="997.4" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (35 samples, 0.44%)</title><rect x="995.0" y="547.0" width="5.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.0" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (28 samples, 0.35%)</title><rect x="995.4" y="531.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="998.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (8 samples, 0.10%)</title><rect x="997.5" y="515.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1000.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.09%)</title><rect x="997.6" y="499.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.6" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="998.4" y="483.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1001.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.06%)</title><rect x="998.8" y="515.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.8" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.06%)</title><rect x="998.8" y="499.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1001.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.04%)</title><rect x="999.7" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.03%)</title><rect x="1000.3" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="1000.8" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.03%)</title><rect x="1001.2" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1004.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="1001.5" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1004.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (4 samples, 0.05%)</title><rect x="1001.9" y="627.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1004.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.05%)</title><rect x="1001.9" y="611.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1004.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="1001.9" y="595.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1004.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.05%)</title><rect x="1001.9" y="579.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1004.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 0.05%)</title><rect x="1001.9" y="563.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.05%)</title><rect x="1001.9" y="547.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1004.9" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.05%)</title><rect x="1001.9" y="531.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1004.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="1001.9" y="515.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1004.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="1002.1" y="499.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1005.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="1002.2" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (3 samples, 0.04%)</title><rect x="1003.0" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1006.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1004.0" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1007.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.03%)</title><rect x="1004.6" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.04%)</title><rect x="1004.9" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1007.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 0.18%)</title><rect x="1005.4" y="659.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="1005.7" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1008.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.05%)</title><rect x="1006.0" y="643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (3 samples, 0.04%)</title><rect x="1006.6" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1009.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="1007.0" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1007.4" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1010.4" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (5 samples, 0.06%)</title><rect x="1007.7" y="659.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1010.7" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="1008.5" y="659.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="1008.9" y="675.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="1009.4" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1012.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1009.7" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1012.7" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="1010.0" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1013.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.08%)</title><rect x="1010.3" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (3 samples, 0.04%)</title><rect x="1010.7" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="1010.7" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1010.7" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1010.7" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1010.7" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1010.7" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (11 samples, 0.14%)</title><rect x="1011.2" y="755.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="1011.2" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1011.2" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1011.2" y="707.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1011.2" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="1011.2" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="1011.2" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1011.9" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1011.9" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.05%)</title><rect x="1012.2" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1012.2" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1012.2" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1012.2" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1012.2" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1012.2" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.06%)</title><rect x="1012.8" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1012.9" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1012.9" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="1013.7" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="1013.7" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1013.7" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1014.1" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1014.1" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (45 samples, 0.57%)</title><rect x="1015.0" y="883.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (45 samples, 0.57%)</title><rect x="1015.0" y="867.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="1015.3" y="851.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1018.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="1015.3" y="835.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1018.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.08%)</title><rect x="1015.3" y="819.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1018.3" y="830.0"></text>
</g>
<g>
<title>__GI___recv (35 samples, 0.44%)</title><rect x="1016.5" y="851.0" width="5.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1019.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1017.5" y="835.0" width="4.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1020.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1017.5" y="819.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1020.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="1018.4" y="803.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1021.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="1018.4" y="787.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1021.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="1018.4" y="771.0" width="3.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1021.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="1018.6" y="755.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1021.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="1018.6" y="739.0" width="3.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1021.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="1019.3" y="723.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1022.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1020.7" y="707.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1023.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1020.7" y="691.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1023.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1021.3" y="675.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1024.3" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=29965] (1,104 samples, 13.90%)</title><rect x="1021.7" y="947.0" width="164.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1024.7" y="958.0">[NIO Selector #3 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.09%)</title><rect x="1021.7" y="931.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1024.7" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.09%)</title><rect x="1021.7" y="915.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.7" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="1021.7" y="899.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1024.7" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.09%)</title><rect x="1021.7" y="883.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.7" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="1022.0" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1025.0" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="1022.0" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.0" y="862.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (2 samples, 0.03%)</title><rect x="1022.0" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.0" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (2 samples, 0.03%)</title><rect x="1022.0" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.0" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1022.0" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1025.0" y="814.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.03%)</title><rect x="1022.0" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.0" y="798.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="1022.4" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1025.4" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="1022.7" y="931.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1025.7" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,092 samples, 13.75%)</title><rect x="1023.3" y="931.0" width="162.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.3" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.58%)</title><rect x="1023.5" y="915.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 0.58%)</title><rect x="1023.5" y="899.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.53%)</title><rect x="1023.6" y="883.0" width="6.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1026.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (41 samples, 0.52%)</title><rect x="1023.8" y="867.0" width="6.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1026.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="1023.9" y="851.0" width="6.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1026.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.50%)</title><rect x="1023.9" y="835.0" width="6.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1026.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="1024.1" y="819.0" width="5.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1027.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="1024.1" y="803.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1027.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="1024.2" y="787.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1027.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1025.7" y="771.0" width="4.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1028.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="1027.5" y="755.0" width="2.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1030.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="1028.4" y="739.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1031.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="1028.5" y="723.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1031.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1029.1" y="707.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1032.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="1029.9" y="883.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1032.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,045 samples, 13.15%)</title><rect x="1030.3" y="915.0" width="155.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.3" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,042 samples, 13.12%)</title><rect x="1030.8" y="899.0" width="154.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.8" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,005 samples, 12.65%)</title><rect x="1030.8" y="883.0" width="149.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.8" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (995 samples, 12.53%)</title><rect x="1030.8" y="867.0" width="147.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.8" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (995 samples, 12.53%)</title><rect x="1030.8" y="851.0" width="147.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.8" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.06%)</title><rect x="1030.8" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="1030.9" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="1030.9" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="1030.9" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="1030.9" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (990 samples, 12.46%)</title><rect x="1031.5" y="835.0" width="147.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.5" y="846.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="1031.5" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="1031.5" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (988 samples, 12.44%)</title><rect x="1031.8" y="819.0" width="146.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.8" y="830.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (172 samples, 2.17%)</title><rect x="1031.8" y="803.0" width="25.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.8" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (168 samples, 2.11%)</title><rect x="1032.3" y="787.0" width="24.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.3" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.06%)</title><rect x="1032.4" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="1032.8" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="1032.8" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="1032.8" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="1032.8" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 2.04%)</title><rect x="1033.1" y="771.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.1" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 2.04%)</title><rect x="1033.1" y="755.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1036.1" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (160 samples, 2.01%)</title><rect x="1033.4" y="739.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.4" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (160 samples, 2.01%)</title><rect x="1033.4" y="723.0" width="23.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.4" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1033.9" y="707.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1036.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1033.9" y="691.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1036.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.06%)</title><rect x="1033.9" y="675.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1036.9" y="686.0"></text>
</g>
<g>
<title>__send (152 samples, 1.91%)</title><rect x="1034.6" y="707.0" width="22.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1037.6" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.83%)</title><rect x="1035.7" y="691.0" width="21.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1038.7" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.83%)</title><rect x="1035.7" y="675.0" width="21.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1038.7" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="1036.3" y="659.0" width="20.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1039.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.77%)</title><rect x="1036.3" y="643.0" width="20.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.76%)</title><rect x="1036.4" y="627.0" width="20.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1039.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.76%)</title><rect x="1036.4" y="611.0" width="20.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1039.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.75%)</title><rect x="1036.6" y="595.0" width="20.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1039.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.74%)</title><rect x="1036.7" y="579.0" width="20.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1039.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.69%)</title><rect x="1037.3" y="563.0" width="19.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1040.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.62%)</title><rect x="1038.0" y="547.0" width="19.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1041.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.57%)</title><rect x="1038.6" y="531.0" width="18.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1041.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.50%)</title><rect x="1039.5" y="515.0" width="17.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1042.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.36%)</title><rect x="1041.2" y="499.0" width="16.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1044.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.35%)</title><rect x="1041.3" y="483.0" width="15.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1044.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.28%)</title><rect x="1042.1" y="467.0" width="15.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1045.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.25%)</title><rect x="1042.5" y="451.0" width="14.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1045.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.23%)</title><rect x="1042.6" y="435.0" width="14.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1045.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.23%)</title><rect x="1042.6" y="419.0" width="14.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1045.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.21%)</title><rect x="1042.9" y="403.0" width="14.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1045.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.21%)</title><rect x="1042.9" y="387.0" width="14.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1045.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.15%)</title><rect x="1043.7" y="371.0" width="13.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1046.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.08%)</title><rect x="1044.4" y="355.0" width="12.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1047.4" y="366.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.02%)</title><rect x="1045.2" y="339.0" width="12.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.97%)</title><rect x="1045.8" y="323.0" width="11.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1048.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="1046.5" y="307.0" width="10.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1049.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.89%)</title><rect x="1046.7" y="291.0" width="10.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1049.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.86%)</title><rect x="1047.1" y="275.0" width="10.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1050.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.82%)</title><rect x="1047.6" y="259.0" width="9.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1050.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.81%)</title><rect x="1047.7" y="243.0" width="9.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1050.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.79%)</title><rect x="1047.8" y="227.0" width="9.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1050.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.79%)</title><rect x="1047.8" y="211.0" width="9.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1050.8" y="222.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.78%)</title><rect x="1048.0" y="195.0" width="9.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1051.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.72%)</title><rect x="1048.7" y="179.0" width="8.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1051.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.63%)</title><rect x="1049.8" y="163.0" width="7.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1052.8" y="174.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.59%)</title><rect x="1050.2" y="147.0" width="7.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1053.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.47%)</title><rect x="1051.7" y="131.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1054.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.40%)</title><rect x="1052.5" y="115.0" width="4.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1055.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="1052.6" y="99.0" width="4.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1055.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="1052.7" y="83.0" width="4.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1055.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.08%)</title><rect x="1057.4" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1057.5" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="1057.5" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1057.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1057.8" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1057.8" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinatePut (795 samples, 10.01%)</title><rect x="1058.2" y="803.0" width="118.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.2" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="1058.7" y="787.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1058.7" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.09%)</title><rect x="1059.0" y="771.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.09%)</title><rect x="1059.0" y="755.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.09%)</title><rect x="1059.0" y="739.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1059.7" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1062.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (610 samples, 7.68%)</title><rect x="1060.3" y="787.0" width="90.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.3" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (5 samples, 0.06%)</title><rect x="1060.3" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (602 samples, 7.58%)</title><rect x="1061.1" y="771.0" width="89.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.1" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (602 samples, 7.58%)</title><rect x="1061.1" y="755.0" width="89.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.1" y="766.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.11%)</title><rect x="1061.5" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="1061.5" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="1061.8" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1062.1" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1065.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="1062.1" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (140 samples, 1.76%)</title><rect x="1062.8" y="739.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (136 samples, 1.71%)</title><rect x="1063.0" y="723.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1063.9" y="707.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1066.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1063.9" y="691.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1066.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.20%)</title><rect x="1063.9" y="675.0" width="2.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1066.9" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1064.6" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1067.6" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="1064.9" y="659.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1067.9" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.08%)</title><rect x="1065.2" y="659.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1068.2" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.06%)</title><rect x="1065.4" y="643.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1068.4" y="654.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.03%)</title><rect x="1066.3" y="675.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1069.3" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="1066.6" y="675.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1069.6" y="686.0"></text>
</g>
<g>
<title>__GI___recv (108 samples, 1.36%)</title><rect x="1066.9" y="707.0" width="16.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1069.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.26%)</title><rect x="1068.0" y="691.0" width="14.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1071.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.26%)</title><rect x="1068.0" y="675.0" width="14.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1071.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="1068.5" y="659.0" width="14.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1071.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.22%)</title><rect x="1068.5" y="643.0" width="14.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1071.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.20%)</title><rect x="1068.8" y="627.0" width="14.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1071.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.20%)</title><rect x="1068.8" y="611.0" width="14.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1071.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.13%)</title><rect x="1069.5" y="595.0" width="13.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1072.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.91%)</title><rect x="1072.2" y="579.0" width="10.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1075.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.73%)</title><rect x="1074.3" y="563.0" width="8.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1077.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.62%)</title><rect x="1075.6" y="547.0" width="7.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1078.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="1079.2" y="531.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1082.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="1081.4" y="515.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1084.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="1082.3" y="499.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1085.3" y="510.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="1082.9" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1085.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1083.2" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (45 samples, 0.57%)</title><rect x="1083.6" y="739.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="1083.9" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1084.1" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (26 samples, 0.33%)</title><rect x="1084.4" y="723.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="1086.2" y="707.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="1086.2" y="691.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.10%)</title><rect x="1088.3" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.3" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="1088.8" y="707.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="1089.4" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1089.7" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1089.7" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (2 samples, 0.03%)</title><rect x="1090.0" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (14 samples, 0.18%)</title><rect x="1090.3" y="739.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.06%)</title><rect x="1091.7" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="1091.7" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.06%)</title><rect x="1091.7" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="1091.7" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="1092.4" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (69 samples, 0.87%)</title><rect x="1093.0" y="739.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.0" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (6 samples, 0.08%)</title><rect x="1093.2" y="723.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1096.2" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (62 samples, 0.78%)</title><rect x="1094.0" y="723.0" width="9.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1097.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.57%)</title><rect x="1096.6" y="707.0" width="6.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1099.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.57%)</title><rect x="1096.6" y="691.0" width="6.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1099.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.39%)</title><rect x="1098.6" y="675.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1101.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.38%)</title><rect x="1098.8" y="659.0" width="4.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1101.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.37%)</title><rect x="1098.9" y="643.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1101.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="1099.8" y="627.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1102.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="1101.0" y="611.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1104.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="1101.9" y="595.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1104.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1103.0" y="579.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1106.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (313 samples, 3.94%)</title><rect x="1103.3" y="739.0" width="46.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.3" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.08%)</title><rect x="1103.3" y="723.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1106.3" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="1103.5" y="707.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1106.5" y="718.0"></text>
</g>
<g>
<title>__send (307 samples, 3.86%)</title><rect x="1104.1" y="723.0" width="45.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1107.1" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (295 samples, 3.71%)</title><rect x="1105.9" y="707.0" width="43.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1108.9" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (295 samples, 3.71%)</title><rect x="1105.9" y="691.0" width="43.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1108.9" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (288 samples, 3.63%)</title><rect x="1107.0" y="675.0" width="42.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.0" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (288 samples, 3.63%)</title><rect x="1107.0" y="659.0" width="42.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1110.0" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (287 samples, 3.61%)</title><rect x="1107.1" y="643.0" width="42.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1110.1" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (286 samples, 3.60%)</title><rect x="1107.3" y="627.0" width="42.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1110.3" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (281 samples, 3.54%)</title><rect x="1108.0" y="611.0" width="41.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1111.0" y="622.0">[un..</text>
</g>
<g>
<title>[unknown] (280 samples, 3.52%)</title><rect x="1108.2" y="595.0" width="41.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1111.2" y="606.0">[un..</text>
</g>
<g>
<title>[unknown] (263 samples, 3.31%)</title><rect x="1110.7" y="579.0" width="39.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1113.7" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (248 samples, 3.12%)</title><rect x="1112.9" y="563.0" width="36.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1115.9" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (238 samples, 3.00%)</title><rect x="1114.4" y="547.0" width="35.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1117.4" y="558.0">[un..</text>
</g>
<g>
<title>[unknown] (224 samples, 2.82%)</title><rect x="1116.5" y="531.0" width="33.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1119.5" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (209 samples, 2.63%)</title><rect x="1118.7" y="515.0" width="31.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1121.7" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (203 samples, 2.56%)</title><rect x="1119.6" y="499.0" width="30.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1122.6" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.51%)</title><rect x="1120.2" y="483.0" width="29.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1123.2" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (194 samples, 2.44%)</title><rect x="1120.9" y="467.0" width="28.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1123.9" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (188 samples, 2.37%)</title><rect x="1121.8" y="451.0" width="27.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1124.8" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (185 samples, 2.33%)</title><rect x="1122.3" y="435.0" width="27.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1125.3" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.30%)</title><rect x="1122.6" y="419.0" width="27.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1125.6" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.30%)</title><rect x="1122.6" y="403.0" width="27.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1125.6" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (180 samples, 2.27%)</title><rect x="1123.0" y="387.0" width="26.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1126.0" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.20%)</title><rect x="1123.8" y="371.0" width="25.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1126.8" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (168 samples, 2.11%)</title><rect x="1124.8" y="355.0" width="24.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1127.8" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (163 samples, 2.05%)</title><rect x="1125.5" y="339.0" width="24.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1128.5" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="1125.8" y="323.0" width="23.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1128.8" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 2.03%)</title><rect x="1125.8" y="307.0" width="23.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1128.8" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 2.00%)</title><rect x="1126.1" y="291.0" width="23.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1129.1" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.86%)</title><rect x="1127.8" y="275.0" width="21.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1130.8" y="286.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.83%)</title><rect x="1128.2" y="259.0" width="21.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1131.2" y="270.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.80%)</title><rect x="1128.5" y="243.0" width="21.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1131.5" y="254.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.80%)</title><rect x="1128.5" y="227.0" width="21.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1131.5" y="238.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.79%)</title><rect x="1128.7" y="211.0" width="21.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1131.7" y="222.0">[..</text>
</g>
<g>
<title>[unknown] (134 samples, 1.69%)</title><rect x="1129.8" y="195.0" width="19.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1132.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.59%)</title><rect x="1131.0" y="179.0" width="18.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1134.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.50%)</title><rect x="1132.1" y="163.0" width="17.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1135.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.31%)</title><rect x="1134.3" y="147.0" width="15.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1137.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.13%)</title><rect x="1136.4" y="131.0" width="13.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1139.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.11%)</title><rect x="1136.7" y="115.0" width="13.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1139.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.08%)</title><rect x="1137.0" y="99.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1140.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1149.4" y="83.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.4" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.06%)</title><rect x="1149.7" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1152.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.04%)</title><rect x="1150.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.0" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.04%)</title><rect x="1150.0" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="1150.5" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.putWithTimestampMethodWrapper (171 samples, 2.15%)</title><rect x="1150.9" y="787.0" width="25.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.9" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.upsertRecordWithTimestamp (171 samples, 2.15%)</title><rect x="1150.9" y="771.0" width="25.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.9" y="782.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (165 samples, 2.08%)</title><rect x="1150.9" y="755.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.9" y="766.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (164 samples, 2.06%)</title><rect x="1151.1" y="739.0" width="24.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.1" y="750.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="1151.1" y="723.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1154.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1151.4" y="723.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1154.4" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (5 samples, 0.06%)</title><rect x="1152.3" y="723.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1155.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (148 samples, 1.86%)</title><rect x="1153.3" y="723.0" width="22.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.3" y="734.0">r..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="1153.8" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (141 samples, 1.77%)</title><rect x="1154.4" y="707.0" width="20.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="1154.5" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 1.72%)</title><rect x="1154.9" y="691.0" width="20.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (134 samples, 1.69%)</title><rect x="1154.9" y="675.0" width="19.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.9" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="1155.4" y="659.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1158.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (112 samples, 1.41%)</title><rect x="1155.7" y="659.0" width="16.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="1156.0" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (104 samples, 1.31%)</title><rect x="1156.3" y="643.0" width="15.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.3" y="654.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="1158.5" y="627.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1161.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="611.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1161.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="595.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1161.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="579.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1161.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1161.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="547.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1161.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1158.5" y="531.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1161.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1158.8" y="627.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1161.8" y="638.0"></text>
</g>
<g>
<title>_init (6 samples, 0.08%)</title><rect x="1159.4" y="627.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1162.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="1160.3" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.05%)</title><rect x="1160.7" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (63 samples, 0.79%)</title><rect x="1161.3" y="627.0" width="9.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="1161.8" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (57 samples, 0.72%)</title><rect x="1162.2" y="611.0" width="8.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 0.68%)</title><rect x="1162.2" y="595.0" width="8.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="1162.4" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (51 samples, 0.64%)</title><rect x="1162.7" y="579.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.03%)</title><rect x="1163.0" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (46 samples, 0.58%)</title><rect x="1163.3" y="563.0" width="6.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="1163.7" y="547.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1166.7" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (37 samples, 0.47%)</title><rect x="1164.3" y="547.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.3" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (34 samples, 0.43%)</title><rect x="1164.7" y="531.0" width="5.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1167.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (15 samples, 0.19%)</title><rect x="1166.8" y="515.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1169.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.18%)</title><rect x="1167.0" y="499.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="1167.7" y="483.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1170.7" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="1168.2" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="1168.5" y="483.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1171.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.06%)</title><rect x="1169.1" y="515.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.1" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="1169.5" y="499.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1172.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="1169.8" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="1170.2" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.03%)</title><rect x="1170.8" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.16%)</title><rect x="1172.3" y="659.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.6" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="1173.1" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1173.4" y="627.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1176.4" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="1173.8" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.8" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="1174.6" y="659.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1174.8" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.08%)</title><rect x="1175.4" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (5 samples, 0.06%)</title><rect x="1175.6" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="1175.6" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1175.6" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1175.6" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1175.6" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1175.6" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (11 samples, 0.14%)</title><rect x="1176.3" y="803.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (11 samples, 0.14%)</title><rect x="1176.3" y="787.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.3" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (11 samples, 0.14%)</title><rect x="1176.3" y="771.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.14%)</title><rect x="1176.3" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.13%)</title><rect x="1176.5" y="739.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.11%)</title><rect x="1176.6" y="723.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (2 samples, 0.03%)</title><rect x="1177.2" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.03%)</title><rect x="1177.7" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (4 samples, 0.05%)</title><rect x="1178.0" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (3 samples, 0.04%)</title><rect x="1178.1" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.04%)</title><rect x="1178.6" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.08%)</title><rect x="1179.2" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="1179.3" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="1179.3" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 0.45%)</title><rect x="1180.2" y="883.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (36 samples, 0.45%)</title><rect x="1180.2" y="867.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="1180.6" y="851.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1183.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="1180.6" y="835.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1183.6" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="1180.6" y="819.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1183.6" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="1180.8" y="803.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1181.1" y="803.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="1181.4" y="787.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1184.4" y="798.0"></text>
</g>
<g>
<title>__GI___recv (25 samples, 0.31%)</title><rect x="1181.8" y="851.0" width="3.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1184.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="1182.1" y="835.0" width="3.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1185.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.29%)</title><rect x="1182.1" y="819.0" width="3.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1185.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1182.6" y="803.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1185.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1182.6" y="787.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1185.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.24%)</title><rect x="1182.7" y="771.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.23%)</title><rect x="1182.9" y="755.0" width="2.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="1183.3" y="739.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="1183.6" y="723.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="1184.2" y="707.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1184.5" y="691.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1184.7" y="675.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="1184.9" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1187.9" y="670.0"></text>
</g>
<g>
<title>[tid=29924] (2 samples, 0.03%)</title><rect x="1185.7" y="947.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1185.7" y="931.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1185.7" y="915.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1185.7" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="1185.7" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1185.7" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1185.7" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.03%)</title><rect x="1185.7" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1185.7" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="830.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1185.7" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.7" y="814.0"></text>
</g>
<g>
<title>[tid=29929] (4 samples, 0.05%)</title><rect x="1186.0" y="947.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1189.0" y="958.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.05%)</title><rect x="1186.0" y="931.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.0" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.05%)</title><rect x="1186.0" y="915.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1189.0" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.05%)</title><rect x="1186.0" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1186.0" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1186.0" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1186.3" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1186.3" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1186.3" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1186.3" y="803.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>[tid=29933] (16 samples, 0.20%)</title><rect x="1186.6" y="947.0" width="2.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1189.6" y="958.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.20%)</title><rect x="1186.6" y="931.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1189.6" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.20%)</title><rect x="1186.6" y="915.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.20%)</title><rect x="1186.6" y="899.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (16 samples, 0.20%)</title><rect x="1186.6" y="883.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (16 samples, 0.20%)</title><rect x="1186.6" y="867.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (16 samples, 0.20%)</title><rect x="1186.6" y="851.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 0.20%)</title><rect x="1186.6" y="835.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.20%)</title><rect x="1186.6" y="819.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.6" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (16 samples, 0.20%)</title><rect x="1186.6" y="803.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.11%)</title><rect x="1186.6" y="787.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.03%)</title><rect x="1186.9" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.9" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.03%)</title><rect x="1186.9" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 0.06%)</title><rect x="1187.2" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.04%)</title><rect x="1187.2" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="1187.3" y="739.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.06%)</title><rect x="1187.9" y="787.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (3 samples, 0.04%)</title><rect x="1188.1" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.7" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.7" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.7" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.7" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1188.7" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1188.7" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1188.7" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1188.7" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1188.7" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1188.7" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1188.7" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>[tid=29968] (2 samples, 0.03%)</title><rect x="1189.1" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.1" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.1" y="931.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.1" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.1" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.1" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1189.1" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="1189.1" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="894.0"></text>
</g>
<g>
<title>[tid=29969] (2 samples, 0.03%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.4" y="931.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.4" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1189.4" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="1189.4" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>[tid=29970] (2 samples, 0.03%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.03%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.03%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
</g>
</svg>
