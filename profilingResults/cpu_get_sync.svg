<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (435 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="10.0" y="1027.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.23%)</title><rect x="10.0" y="1011.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.23%)</title><rect x="10.0" y="995.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.23%)</title><rect x="10.0" y="979.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="12.7" y="1027.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="15.7" y="1038.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.23%)</title><rect x="12.7" y="1011.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="995.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="979.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="963.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="15.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="947.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="931.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="915.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="899.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="883.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="15.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="867.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="12.7" y="851.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.7" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.23%)</title><rect x="15.4" y="1011.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 1.38%)</title><rect x="18.1" y="1027.0" width="16.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="21.1" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.46%)</title><rect x="29.0" y="1011.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="32.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="995.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="34.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="979.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="34.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="963.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="34.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="947.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="34.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="931.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="34.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="915.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="34.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="899.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="34.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="31.7" y="883.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="34.7" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.46%)</title><rect x="34.4" y="1027.0" width="5.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="34.4" y="1011.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="34.4" y="995.0" width="5.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="34.4" y="979.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="37.1" y="963.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="40.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="37.1" y="947.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="40.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="37.1" y="931.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="40.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="37.1" y="915.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="40.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="37.1" y="899.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="40.1" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (376 samples, 86.44%)</title><rect x="39.8" y="1027.0" width="1020.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.8" y="1038.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.92%)</title><rect x="110.4" y="1011.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.23%)</title><rect x="121.2" y="1011.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (58 samples, 13.33%)</title><rect x="123.9" y="1011.0" width="157.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.9" y="1022.0">one/nio/net/NativeSe..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.92%)</title><rect x="142.9" y="995.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.23%)</title><rect x="151.1" y="979.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 10.80%)</title><rect x="153.8" y="995.0" width="127.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.8" y="1006.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.46%)</title><rect x="164.6" y="979.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="167.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 9.43%)</title><rect x="170.0" y="979.0" width="111.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="173.0" y="990.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (41 samples, 9.43%)</title><rect x="170.0" y="963.0" width="111.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="173.0" y="974.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (34 samples, 7.82%)</title><rect x="189.0" y="947.0" width="92.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="192.0" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (34 samples, 7.82%)</title><rect x="189.0" y="931.0" width="92.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="192.0" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (30 samples, 6.90%)</title><rect x="199.9" y="915.0" width="81.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="202.9" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (30 samples, 6.90%)</title><rect x="199.9" y="899.0" width="81.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="202.9" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (29 samples, 6.67%)</title><rect x="202.6" y="883.0" width="78.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="205.6" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (25 samples, 5.75%)</title><rect x="213.4" y="867.0" width="67.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="216.4" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (23 samples, 5.29%)</title><rect x="218.9" y="851.0" width="62.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="221.9" y="862.0">[unkno..</text>
</g>
<g>
<title>[unknown] (19 samples, 4.37%)</title><rect x="229.7" y="835.0" width="51.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="232.7" y="846.0">[unkn..</text>
</g>
<g>
<title>[unknown] (15 samples, 3.45%)</title><rect x="240.6" y="819.0" width="40.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="243.6" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (14 samples, 3.22%)</title><rect x="243.3" y="803.0" width="38.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="246.3" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="787.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="281.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="771.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="281.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="755.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="739.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="281.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="723.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="281.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="707.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="281.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="278.6" y="691.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="281.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (287 samples, 65.98%)</title><rect x="281.3" y="1011.0" width="778.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.3" y="1022.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (283 samples, 65.06%)</title><rect x="292.1" y="995.0" width="767.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.1" y="1006.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (244 samples, 56.09%)</title><rect x="294.8" y="979.0" width="661.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.8" y="990.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (236 samples, 54.25%)</title><rect x="294.8" y="963.0" width="640.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.8" y="974.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (233 samples, 53.56%)</title><rect x="303.0" y="947.0" width="632.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.0" y="958.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (224 samples, 51.49%)</title><rect x="308.4" y="931.0" width="607.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.4" y="942.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (107 samples, 24.60%)</title><rect x="311.1" y="915.0" width="290.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.1" y="926.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (103 samples, 23.68%)</title><rect x="311.1" y="899.0" width="279.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.1" y="910.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 1.15%)</title><rect x="311.1" y="883.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.23%)</title><rect x="311.1" y="867.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="314.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.23%)</title><rect x="313.8" y="867.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.69%)</title><rect x="316.5" y="867.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.46%)</title><rect x="316.5" y="851.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.23%)</title><rect x="319.2" y="835.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.23%)</title><rect x="319.2" y="819.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.23%)</title><rect x="322.0" y="851.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.23%)</title><rect x="322.0" y="835.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 22.53%)</title><rect x="324.7" y="883.0" width="265.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.7" y="894.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 22.53%)</title><rect x="324.7" y="867.0" width="265.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.7" y="878.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (98 samples, 22.53%)</title><rect x="324.7" y="851.0" width="265.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.7" y="862.0">one/nio/net/Session$ArrayQueueItem...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (97 samples, 22.30%)</title><rect x="327.4" y="835.0" width="263.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.4" y="846.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (6 samples, 1.38%)</title><rect x="327.4" y="819.0" width="16.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="330.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 1.38%)</title><rect x="327.4" y="803.0" width="16.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="330.4" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.92%)</title><rect x="327.4" y="787.0" width="10.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="330.4" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.46%)</title><rect x="330.1" y="771.0" width="5.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="333.1" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.46%)</title><rect x="330.1" y="755.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="333.1" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.23%)</title><rect x="335.5" y="771.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="338.5" y="782.0"></text>
</g>
<g>
<title>__send (2 samples, 0.46%)</title><rect x="338.2" y="787.0" width="5.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.2" y="798.0"></text>
</g>
<g>
<title>__send (91 samples, 20.92%)</title><rect x="343.7" y="819.0" width="246.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="346.7" y="830.0">__send</text>
</g>
<g>
<title>[unknown] (87 samples, 20.00%)</title><rect x="354.5" y="803.0" width="236.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="357.5" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (87 samples, 20.00%)</title><rect x="354.5" y="787.0" width="236.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="357.5" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (85 samples, 19.54%)</title><rect x="359.9" y="771.0" width="230.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="362.9" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (85 samples, 19.54%)</title><rect x="359.9" y="755.0" width="230.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="362.9" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (84 samples, 19.31%)</title><rect x="362.6" y="739.0" width="227.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="365.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 19.08%)</title><rect x="365.4" y="723.0" width="225.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="368.4" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 19.08%)</title><rect x="365.4" y="707.0" width="225.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="368.4" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 19.08%)</title><rect x="365.4" y="691.0" width="225.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="368.4" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (80 samples, 18.39%)</title><rect x="373.5" y="675.0" width="217.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="376.5" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 17.70%)</title><rect x="381.6" y="659.0" width="208.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="384.6" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 17.70%)</title><rect x="381.6" y="643.0" width="208.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="384.6" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 16.09%)</title><rect x="400.6" y="627.0" width="189.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="403.6" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (63 samples, 14.48%)</title><rect x="419.6" y="611.0" width="170.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="422.6" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (62 samples, 14.25%)</title><rect x="422.3" y="595.0" width="168.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="425.3" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (60 samples, 13.79%)</title><rect x="427.7" y="579.0" width="162.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="430.7" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (59 samples, 13.56%)</title><rect x="430.5" y="563.0" width="160.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="433.5" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (58 samples, 13.33%)</title><rect x="433.2" y="547.0" width="157.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="436.2" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (58 samples, 13.33%)</title><rect x="433.2" y="531.0" width="157.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="436.2" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (57 samples, 13.10%)</title><rect x="435.9" y="515.0" width="154.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="438.9" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (56 samples, 12.87%)</title><rect x="438.6" y="499.0" width="151.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="441.6" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (53 samples, 12.18%)</title><rect x="446.7" y="483.0" width="143.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="449.7" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (52 samples, 11.95%)</title><rect x="449.4" y="467.0" width="141.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="452.4" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (51 samples, 11.72%)</title><rect x="452.2" y="451.0" width="138.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="455.2" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (51 samples, 11.72%)</title><rect x="452.2" y="435.0" width="138.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="455.2" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (48 samples, 11.03%)</title><rect x="460.3" y="419.0" width="130.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="463.3" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (46 samples, 10.57%)</title><rect x="465.7" y="403.0" width="124.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="468.7" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (46 samples, 10.57%)</title><rect x="465.7" y="387.0" width="124.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="468.7" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (45 samples, 10.34%)</title><rect x="468.4" y="371.0" width="122.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="471.4" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (44 samples, 10.11%)</title><rect x="471.1" y="355.0" width="119.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="474.1" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (44 samples, 10.11%)</title><rect x="471.1" y="339.0" width="119.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="474.1" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (44 samples, 10.11%)</title><rect x="471.1" y="323.0" width="119.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="474.1" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (43 samples, 9.89%)</title><rect x="473.9" y="307.0" width="116.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="476.9" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (40 samples, 9.20%)</title><rect x="482.0" y="291.0" width="108.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="485.0" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (39 samples, 8.97%)</title><rect x="484.7" y="275.0" width="105.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="487.7" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (34 samples, 7.82%)</title><rect x="498.3" y="259.0" width="92.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="501.3" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (26 samples, 5.98%)</title><rect x="520.0" y="243.0" width="70.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="523.0" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (22 samples, 5.06%)</title><rect x="530.8" y="227.0" width="59.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="533.8" y="238.0">[unkno..</text>
</g>
<g>
<title>[unknown] (20 samples, 4.60%)</title><rect x="536.3" y="211.0" width="54.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="539.3" y="222.0">[unkn..</text>
</g>
<g>
<title>[unknown] (19 samples, 4.37%)</title><rect x="539.0" y="195.0" width="51.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="542.0" y="206.0">[unkn..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="582.4" y="179.0" width="8.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="585.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="585.1" y="163.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="588.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="585.1" y="147.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.46%)</title><rect x="590.5" y="899.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.46%)</title><rect x="590.5" y="883.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.5" y="894.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.46%)</title><rect x="595.9" y="899.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.23%)</title><rect x="598.6" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (1 samples, 0.23%)</title><rect x="598.6" y="867.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.weakCompareAndSetLong (1 samples, 0.23%)</title><rect x="598.6" y="851.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 1.61%)</title><rect x="601.4" y="915.0" width="18.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.69%)</title><rect x="606.8" y="899.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.23%)</title><rect x="606.8" y="883.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.23%)</title><rect x="606.8" y="867.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="609.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.46%)</title><rect x="609.5" y="883.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.23%)</title><rect x="612.2" y="867.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.46%)</title><rect x="614.9" y="899.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.23%)</title><rect x="617.6" y="883.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.23%)</title><rect x="617.6" y="867.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.23%)</title><rect x="617.6" y="851.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpService.entity (109 samples, 25.06%)</title><rect x="620.3" y="915.0" width="295.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.3" y="926.0">ru/mail/polis/service/HttpService.entity</text>
</g>
<g>
<title>ru/mail/polis/service/HttpService.processResponse (109 samples, 25.06%)</title><rect x="620.3" y="899.0" width="295.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.3" y="910.0">ru/mail/polis/service/HttpService.proces..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpService.getMethodWrapper (109 samples, 25.06%)</title><rect x="620.3" y="883.0" width="295.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.3" y="894.0">ru/mail/polis/service/HttpService.getMet..</text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.23%)</title><rect x="623.1" y="867.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="626.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.23%)</title><rect x="623.1" y="851.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="626.1" y="862.0"></text>
</g>
<g>
<title>nmethodLocker::unlock_nmethod(CompiledMethod*) (1 samples, 0.23%)</title><rect x="623.1" y="835.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="626.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.get (106 samples, 24.37%)</title><rect x="625.8" y="867.0" width="287.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="878.0">ru/mail/polis/dao/DAORocksDB.get</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (62 samples, 14.25%)</title><rect x="625.8" y="851.0" width="168.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.8" y="862.0">java/util/NoSuchElemen..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (62 samples, 14.25%)</title><rect x="625.8" y="835.0" width="168.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.8" y="846.0">java/lang/RuntimeExcep..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (62 samples, 14.25%)</title><rect x="625.8" y="819.0" width="168.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.8" y="830.0">java/lang/Exception.&lt;i..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (62 samples, 14.25%)</title><rect x="625.8" y="803.0" width="168.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.8" y="814.0">java/lang/Throwable.&lt;i..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (60 samples, 13.79%)</title><rect x="631.2" y="787.0" width="162.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.2" y="798.0">java/lang/Throwable.f..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (59 samples, 13.56%)</title><rect x="633.9" y="771.0" width="160.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.9" y="782.0">java/lang/Throwable...</text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.69%)</title><rect x="633.9" y="755.0" width="8.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="636.9" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (56 samples, 12.87%)</title><rect x="642.0" y="755.0" width="152.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="645.0" y="766.0">Java_java_lang_Thro..</text>
</g>
<g>
<title>JVM_FillInStackTrace (55 samples, 12.64%)</title><rect x="644.8" y="739.0" width="149.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="647.8" y="750.0">JVM_FillInStackTrace</text>
</g>
<g>
<title>JavaThread::active() (1 samples, 0.23%)</title><rect x="644.8" y="723.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="647.8" y="734.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (2 samples, 0.46%)</title><rect x="647.5" y="723.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="650.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (51 samples, 11.72%)</title><rect x="652.9" y="723.0" width="138.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.9" y="734.0">java_lang_Throwab..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.23%)</title><rect x="652.9" y="707.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="655.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.23%)</title><rect x="655.6" y="707.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="658.6" y="718.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.23%)</title><rect x="658.3" y="707.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="661.3" y="718.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (1 samples, 0.23%)</title><rect x="661.0" y="707.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="664.0" y="718.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.46%)</title><rect x="663.7" y="707.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="666.7" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="669.2" y="707.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="672.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (44 samples, 10.11%)</title><rect x="671.9" y="707.0" width="119.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="674.9" y="718.0">java_lang_Throw..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.69%)</title><rect x="699.0" y="691.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="702.0" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.23%)</title><rect x="707.1" y="691.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="710.1" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.23%)</title><rect x="709.9" y="691.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="712.9" y="702.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (14 samples, 3.22%)</title><rect x="712.6" y="691.0" width="38.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="715.6" y="702.0">Bac..</text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (14 samples, 3.22%)</title><rect x="712.6" y="675.0" width="38.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="715.6" y="686.0">Bac..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.23%)</title><rect x="715.3" y="659.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="718.3" y="670.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (5 samples, 1.15%)</title><rect x="718.0" y="659.0" width="13.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="721.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 1.15%)</title><rect x="718.0" y="643.0" width="13.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="721.0" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.92%)</title><rect x="718.0" y="627.0" width="10.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.0" y="638.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.46%)</title><rect x="718.0" y="611.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.0" y="622.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.46%)</title><rect x="723.4" y="611.0" width="5.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="726.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="595.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="729.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="579.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="729.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="563.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="729.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="547.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="729.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="531.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="729.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="515.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="729.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="499.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="729.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="726.1" y="483.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="729.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="728.9" y="627.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="731.9" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 1.61%)</title><rect x="731.6" y="659.0" width="19.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="734.6" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 1.61%)</title><rect x="731.6" y="643.0" width="19.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="734.6" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 1.61%)</title><rect x="731.6" y="627.0" width="19.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.6" y="638.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (7 samples, 1.61%)</title><rect x="731.6" y="611.0" width="19.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="734.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.61%)</title><rect x="731.6" y="595.0" width="19.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="734.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.61%)</title><rect x="731.6" y="579.0" width="19.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="734.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.61%)</title><rect x="731.6" y="563.0" width="19.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="734.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.15%)</title><rect x="737.0" y="547.0" width="13.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="740.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.15%)</title><rect x="737.0" y="531.0" width="13.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="740.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="745.1" y="515.0" width="5.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="748.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="745.1" y="499.0" width="5.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="748.1" y="510.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.46%)</title><rect x="750.6" y="691.0" width="5.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="753.6" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.23%)</title><rect x="756.0" y="691.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.0" y="702.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.23%)</title><rect x="758.7" y="691.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.7" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 1.15%)</title><rect x="761.4" y="691.0" width="13.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="764.4" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.69%)</title><rect x="761.4" y="675.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="764.4" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.23%)</title><rect x="766.8" y="659.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="769.8" y="670.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.23%)</title><rect x="769.5" y="675.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="772.5" y="686.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.23%)</title><rect x="772.3" y="675.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="775.3" y="686.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.23%)</title><rect x="775.0" y="691.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="778.0" y="702.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.23%)</title><rect x="777.7" y="691.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="780.7" y="702.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.92%)</title><rect x="780.4" y="691.0" width="10.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="783.4" y="702.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.92%)</title><rect x="780.4" y="675.0" width="10.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="783.4" y="686.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.46%)</title><rect x="780.4" y="659.0" width="5.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="783.4" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.46%)</title><rect x="785.8" y="659.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="788.8" y="670.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.23%)</title><rect x="788.5" y="643.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="791.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.23%)</title><rect x="791.2" y="723.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="794.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 8.97%)</title><rect x="794.0" y="851.0" width="105.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.0" y="862.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (39 samples, 8.97%)</title><rect x="794.0" y="835.0" width="105.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.0" y="846.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (31 samples, 7.13%)</title><rect x="796.7" y="819.0" width="84.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.7" y="830.0">Java_org_r..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.23%)</title><rect x="796.7" y="803.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="799.7" y="814.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.69%)</title><rect x="799.4" y="803.0" width="8.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="802.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.23%)</title><rect x="807.5" y="803.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="810.5" y="814.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (26 samples, 5.98%)</title><rect x="810.2" y="803.0" width="70.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.2" y="814.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="812.9" y="787.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="815.9" y="798.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="812.9" y="771.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.46%)</title><rect x="815.7" y="787.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="818.7" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.23%)</title><rect x="818.4" y="771.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="821.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (21 samples, 4.83%)</title><rect x="821.1" y="787.0" width="56.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="824.1" y="798.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.23%)</title><rect x="821.1" y="771.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="824.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (20 samples, 4.60%)</title><rect x="823.8" y="771.0" width="54.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="826.8" y="782.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (19 samples, 4.37%)</title><rect x="823.8" y="755.0" width="51.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="826.8" y="766.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.23%)</title><rect x="823.8" y="739.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="826.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (18 samples, 4.14%)</title><rect x="826.5" y="739.0" width="48.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="829.5" y="750.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni12830178932763898355.so (1 samples, 0.23%)</title><rect x="834.6" y="723.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="837.6" y="734.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="837.4" y="723.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="840.4" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="840.1" y="723.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="843.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.69%)</title><rect x="842.8" y="723.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="845.8" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="845.5" y="707.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="848.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.23%)</title><rect x="848.2" y="707.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="851.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.23%)</title><rect x="850.9" y="723.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="853.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.23%)</title><rect x="853.6" y="723.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="856.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.23%)</title><rect x="853.6" y="707.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="856.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.23%)</title><rect x="853.6" y="691.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="856.6" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="853.6" y="675.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="856.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (4 samples, 0.92%)</title><rect x="856.3" y="723.0" width="10.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="859.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="707.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="867.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="691.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="867.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="675.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="867.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="659.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="867.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="643.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="867.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="627.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="867.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="864.5" y="611.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="867.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.23%)</title><rect x="867.2" y="723.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="870.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (2 samples, 0.46%)</title><rect x="869.9" y="723.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.9" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12830178932763898355.so (1 samples, 0.23%)</title><rect x="872.6" y="707.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="875.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.23%)</title><rect x="875.3" y="755.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="878.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.23%)</title><rect x="878.0" y="787.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="881.0" y="798.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.23%)</title><rect x="880.8" y="819.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="883.8" y="830.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.69%)</title><rect x="883.5" y="819.0" width="8.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="886.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.23%)</title><rect x="891.6" y="819.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.6" y="830.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.46%)</title><rect x="894.3" y="819.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="897.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (5 samples, 1.15%)</title><rect x="899.7" y="851.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (5 samples, 1.15%)</title><rect x="899.7" y="835.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.69%)</title><rect x="899.7" y="819.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.69%)</title><rect x="899.7" y="803.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.46%)</title><rect x="899.7" y="787.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.23%)</title><rect x="905.2" y="787.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.46%)</title><rect x="907.9" y="819.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.46%)</title><rect x="907.9" y="803.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.46%)</title><rect x="907.9" y="787.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.46%)</title><rect x="907.9" y="771.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.23%)</title><rect x="907.9" y="755.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.23%)</title><rect x="910.6" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpService.responseWrapper (1 samples, 0.23%)</title><rect x="913.3" y="867.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.23%)</title><rect x="913.3" y="851.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.3" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.23%)</title><rect x="913.3" y="835.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="916.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 1.38%)</title><rect x="916.0" y="931.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 1.38%)</title><rect x="916.0" y="915.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 1.38%)</title><rect x="916.0" y="899.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.92%)</title><rect x="921.4" y="883.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.23%)</title><rect x="926.9" y="867.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.9" y="878.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.23%)</title><rect x="929.6" y="867.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.23%)</title><rect x="932.3" y="931.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.23%)</title><rect x="932.3" y="915.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.23%)</title><rect x="932.3" y="899.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="932.3" y="883.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="935.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="932.3" y="867.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="935.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="932.3" y="851.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="935.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="932.3" y="835.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="935.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="932.3" y="819.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="935.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 1.84%)</title><rect x="935.0" y="963.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="938.0" y="974.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="937.7" y="947.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="940.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="937.7" y="931.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="940.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="937.7" y="915.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="940.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="937.7" y="899.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="940.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.15%)</title><rect x="940.4" y="947.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.15%)</title><rect x="940.4" y="931.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="915.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="954.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="899.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="954.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="883.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="954.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="867.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="954.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="851.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="954.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="835.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="954.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="951.3" y="819.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="954.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.23%)</title><rect x="954.0" y="947.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 8.74%)</title><rect x="956.7" y="979.0" width="103.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.7" y="990.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (38 samples, 8.74%)</title><rect x="956.7" y="963.0" width="103.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.7" y="974.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (11 samples, 2.53%)</title><rect x="962.1" y="947.0" width="29.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="965.1" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (11 samples, 2.53%)</title><rect x="962.1" y="931.0" width="29.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="965.1" y="942.0">[u..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 2.30%)</title><rect x="962.1" y="915.0" width="27.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="965.1" y="926.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.23%)</title><rect x="962.1" y="899.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="965.1" y="910.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.23%)</title><rect x="964.9" y="899.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="967.9" y="910.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.23%)</title><rect x="967.6" y="899.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="970.6" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 1.38%)</title><rect x="970.3" y="899.0" width="16.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="973.3" y="910.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.23%)</title><rect x="973.0" y="883.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.0" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.92%)</title><rect x="975.7" y="883.0" width="10.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="978.7" y="894.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.23%)</title><rect x="986.6" y="899.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="989.6" y="910.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.23%)</title><rect x="989.3" y="915.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="992.3" y="926.0"></text>
</g>
<g>
<title>__GI___recv (25 samples, 5.75%)</title><rect x="992.0" y="947.0" width="67.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="995.0" y="958.0">__GI___..</text>
</g>
<g>
<title>[unknown] (22 samples, 5.06%)</title><rect x="1000.1" y="931.0" width="59.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1003.1" y="942.0">[unkno..</text>
</g>
<g>
<title>[unknown] (22 samples, 5.06%)</title><rect x="1000.1" y="915.0" width="59.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1003.1" y="926.0">[unkno..</text>
</g>
<g>
<title>[unknown] (16 samples, 3.68%)</title><rect x="1016.4" y="899.0" width="43.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1019.4" y="910.0">[unk..</text>
</g>
<g>
<title>[unknown] (16 samples, 3.68%)</title><rect x="1016.4" y="883.0" width="43.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.4" y="894.0">[unk..</text>
</g>
<g>
<title>[unknown] (14 samples, 3.22%)</title><rect x="1021.8" y="867.0" width="38.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1024.8" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (14 samples, 3.22%)</title><rect x="1021.8" y="851.0" width="38.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1024.8" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (14 samples, 3.22%)</title><rect x="1021.8" y="835.0" width="38.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1024.8" y="846.0">[un..</text>
</g>
<g>
<title>[unknown] (12 samples, 2.76%)</title><rect x="1027.2" y="819.0" width="32.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1030.2" y="830.0">[u..</text>
</g>
<g>
<title>[unknown] (10 samples, 2.30%)</title><rect x="1032.7" y="803.0" width="27.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1035.7" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 1.15%)</title><rect x="1046.2" y="787.0" width="13.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1049.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="1051.7" y="771.0" width="8.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1054.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1057.1" y="755.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1060.1" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.23%)</title><rect x="1059.8" y="1027.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1062.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="1011.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1062.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="995.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1062.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="979.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1062.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="963.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1062.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="947.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1062.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="931.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1062.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="915.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1062.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1059.8" y="899.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1062.8" y="910.0"></text>
</g>
<g>
<title>start_thread (47 samples, 10.80%)</title><rect x="1062.5" y="1027.0" width="127.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1065.5" y="1038.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (47 samples, 10.80%)</title><rect x="1062.5" y="1011.0" width="127.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1065.5" y="1022.0">thread_native_en..</text>
</g>
<g>
<title>Thread::call_run() (47 samples, 10.80%)</title><rect x="1062.5" y="995.0" width="127.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1065.5" y="1006.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (46 samples, 10.57%)</title><rect x="1062.5" y="979.0" width="124.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1065.5" y="990.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (46 samples, 10.57%)</title><rect x="1062.5" y="963.0" width="124.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1065.5" y="974.0">JavaThread::thr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (46 samples, 10.57%)</title><rect x="1062.5" y="947.0" width="124.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.5" y="958.0">CompileBroker::..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (46 samples, 10.57%)</title><rect x="1062.5" y="931.0" width="124.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1065.5" y="942.0">CompileBroker::..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (40 samples, 9.20%)</title><rect x="1062.5" y="915.0" width="108.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1065.5" y="926.0">C2Compiler::c..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (40 samples, 9.20%)</title><rect x="1062.5" y="899.0" width="108.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1065.5" y="910.0">Compile::Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (17 samples, 3.91%)</title><rect x="1062.5" y="883.0" width="46.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.5" y="894.0">Comp..</text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.23%)</title><rect x="1062.5" y="867.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.5" y="878.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.23%)</title><rect x="1062.5" y="851.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.5" y="862.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.23%)</title><rect x="1062.5" y="835.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1065.5" y="846.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.46%)</title><rect x="1065.2" y="867.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.2" y="878.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.23%)</title><rect x="1065.2" y="851.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.2" y="862.0"></text>
</g>
<g>
<title>StorePNode::Opcode() const (1 samples, 0.23%)</title><rect x="1067.9" y="851.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1070.9" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.23%)</title><rect x="1070.6" y="867.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1073.6" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.23%)</title><rect x="1070.6" y="851.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1073.6" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.23%)</title><rect x="1070.6" y="835.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1073.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (13 samples, 2.99%)</title><rect x="1073.4" y="867.0" width="35.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.4" y="878.0">Pha..</text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.46%)</title><rect x="1073.4" y="851.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.4" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.69%)</title><rect x="1078.8" y="851.0" width="8.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.8" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.23%)</title><rect x="1081.5" y="835.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1084.5" y="846.0"></text>
</g>
<g>
<title>loadRangeNode::rule() const (1 samples, 0.23%)</title><rect x="1084.2" y="835.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1087.2" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.92%)</title><rect x="1086.9" y="851.0" width="10.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.23%)</title><rect x="1086.9" y="835.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.9" y="846.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.23%)</title><rect x="1086.9" y="819.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.69%)</title><rect x="1089.6" y="835.0" width="8.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.6" y="846.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.23%)</title><rect x="1095.1" y="819.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.23%)</title><rect x="1097.8" y="851.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.8" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.23%)</title><rect x="1097.8" y="835.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1100.8" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.23%)</title><rect x="1100.5" y="851.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.5" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.46%)</title><rect x="1103.2" y="851.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.2" y="862.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.23%)</title><rect x="1105.9" y="835.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.9" y="846.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.23%)</title><rect x="1105.9" y="819.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.9" y="830.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.23%)</title><rect x="1105.9" y="803.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1108.9" y="814.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.23%)</title><rect x="1105.9" y="787.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1108.9" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.23%)</title><rect x="1105.9" y="771.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1108.9" y="782.0"></text>
</g>
<g>
<title>Compile::Optimize() (16 samples, 3.68%)</title><rect x="1108.6" y="883.0" width="43.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.6" y="894.0">Comp..</text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.46%)</title><rect x="1108.6" y="867.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.6" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.46%)</title><rect x="1108.6" y="851.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.6" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.23%)</title><rect x="1111.3" y="835.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1114.3" y="846.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.23%)</title><rect x="1114.0" y="867.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1117.0" y="878.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.23%)</title><rect x="1114.0" y="851.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.0" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (11 samples, 2.53%)</title><rect x="1116.8" y="867.0" width="29.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.8" y="878.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.23%)</title><rect x="1116.8" y="851.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1119.8" y="862.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.23%)</title><rect x="1116.8" y="835.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.8" y="846.0"></text>
</g>
<g>
<title>SafePointNode::Opcode() const (1 samples, 0.23%)</title><rect x="1116.8" y="819.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.8" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.23%)</title><rect x="1119.5" y="851.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.5" y="862.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.23%)</title><rect x="1119.5" y="835.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.5" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.23%)</title><rect x="1119.5" y="819.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.5" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.23%)</title><rect x="1119.5" y="803.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.5" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.23%)</title><rect x="1119.5" y="787.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.5" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.23%)</title><rect x="1122.2" y="851.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.2" y="862.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.23%)</title><rect x="1122.2" y="835.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 1.38%)</title><rect x="1124.9" y="851.0" width="16.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.9" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.92%)</title><rect x="1130.3" y="835.0" width="10.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.3" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.92%)</title><rect x="1130.3" y="819.0" width="10.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.3" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.23%)</title><rect x="1133.0" y="803.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.46%)</title><rect x="1135.7" y="803.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.7" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.46%)</title><rect x="1141.2" y="851.0" width="5.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.2" y="862.0"></text>
</g>
<g>
<title>IfProjNode::Identity(PhaseGVN*) (1 samples, 0.23%)</title><rect x="1141.2" y="835.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.2" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.23%)</title><rect x="1143.9" y="835.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.9" y="846.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.23%)</title><rect x="1143.9" y="819.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.9" y="830.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.23%)</title><rect x="1143.9" y="803.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.9" y="814.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.23%)</title><rect x="1143.9" y="787.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.9" y="798.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.23%)</title><rect x="1143.9" y="771.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.9" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.23%)</title><rect x="1146.6" y="867.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.6" y="878.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.23%)</title><rect x="1149.3" y="867.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.3" y="878.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.23%)</title><rect x="1149.3" y="851.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1152.3" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 1.61%)</title><rect x="1152.0" y="883.0" width="19.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 1.61%)</title><rect x="1152.0" y="867.0" width="19.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 1.61%)</title><rect x="1152.0" y="851.0" width="19.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 1.61%)</title><rect x="1152.0" y="835.0" width="19.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 1.61%)</title><rect x="1152.0" y="819.0" width="19.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.0" y="830.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.23%)</title><rect x="1152.0" y="803.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.0" y="814.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.23%)</title><rect x="1152.0" y="787.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.23%)</title><rect x="1152.0" y="771.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.0" y="782.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.23%)</title><rect x="1152.0" y="755.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.0" y="766.0"></text>
</g>
<g>
<title>TypeTuple::hash() const (1 samples, 0.23%)</title><rect x="1152.0" y="739.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.15%)</title><rect x="1154.7" y="803.0" width="13.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.7" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.92%)</title><rect x="1154.7" y="787.0" width="10.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.7" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.92%)</title><rect x="1154.7" y="771.0" width="10.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.92%)</title><rect x="1154.7" y="755.0" width="10.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.92%)</title><rect x="1154.7" y="739.0" width="10.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.92%)</title><rect x="1154.7" y="723.0" width="10.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.69%)</title><rect x="1154.7" y="707.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.69%)</title><rect x="1154.7" y="691.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.7" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.69%)</title><rect x="1154.7" y="675.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.69%)</title><rect x="1154.7" y="659.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.46%)</title><rect x="1157.4" y="643.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.46%)</title><rect x="1157.4" y="627.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.46%)</title><rect x="1157.4" y="611.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.4" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.46%)</title><rect x="1157.4" y="595.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.4" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.46%)</title><rect x="1157.4" y="579.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.46%)</title><rect x="1157.4" y="563.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.46%)</title><rect x="1157.4" y="547.0" width="5.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.46%)</title><rect x="1157.4" y="531.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.46%)</title><rect x="1157.4" y="515.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.4" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.46%)</title><rect x="1157.4" y="499.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.4" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.46%)</title><rect x="1157.4" y="483.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.4" y="494.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.23%)</title><rect x="1157.4" y="467.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.4" y="478.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.23%)</title><rect x="1157.4" y="451.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.4" y="462.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.23%)</title><rect x="1157.4" y="435.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.4" y="446.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.23%)</title><rect x="1157.4" y="419.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1160.2" y="467.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1160.2" y="451.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1160.2" y="435.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1160.2" y="419.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.2" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1160.2" y="403.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.2" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1160.2" y="387.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1160.2" y="371.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1160.2" y="355.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1160.2" y="339.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.23%)</title><rect x="1160.2" y="323.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.2" y="334.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.23%)</title><rect x="1160.2" y="307.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.2" y="318.0"></text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.23%)</title><rect x="1160.2" y="291.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.2" y="302.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.185] (1 samples, 0.23%)</title><rect x="1160.2" y="275.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.2" y="286.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.23%)</title><rect x="1160.2" y="259.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.2" y="270.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.23%)</title><rect x="1160.2" y="243.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.2" y="254.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.23%)</title><rect x="1160.2" y="227.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.2" y="238.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.23%)</title><rect x="1160.2" y="211.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.2" y="222.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::propagate(MethodLiveness*) (1 samples, 0.23%)</title><rect x="1160.2" y="195.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.2" y="206.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.23%)</title><rect x="1162.9" y="707.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.9" y="718.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.23%)</title><rect x="1162.9" y="691.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.9" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="1162.9" y="675.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="787.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="771.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="755.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="739.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="723.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="707.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="691.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="675.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.6" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="659.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="643.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="627.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="611.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="595.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="579.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="563.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="547.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="531.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="515.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="499.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="483.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="467.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="451.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="435.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="419.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="403.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="387.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="371.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="355.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="339.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="323.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="307.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="291.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.6" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="275.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="259.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="243.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="227.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="211.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="195.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.6" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="179.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="163.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.6" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="147.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="131.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="1165.6" y="115.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.6" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="1165.6" y="99.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.6" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="1165.6" y="83.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.6" y="94.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="1165.6" y="67.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.6" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="1165.6" y="51.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="62.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="1165.6" y="35.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="46.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.23%)</title><rect x="1168.3" y="803.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.3" y="814.0"></text>
</g>
<g>
<title>JumpData::is_JumpData() const (1 samples, 0.23%)</title><rect x="1168.3" y="787.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.3" y="798.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 1.15%)</title><rect x="1171.0" y="915.0" width="13.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.0" y="926.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 1.15%)</title><rect x="1171.0" y="899.0" width="13.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.0" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 1.15%)</title><rect x="1171.0" y="883.0" width="13.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.0" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 0.92%)</title><rect x="1171.0" y="867.0" width="10.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.0" y="878.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (3 samples, 0.69%)</title><rect x="1171.0" y="851.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="862.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 0.69%)</title><rect x="1171.0" y="835.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="846.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 0.69%)</title><rect x="1171.0" y="819.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.0" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.69%)</title><rect x="1171.0" y="803.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.69%)</title><rect x="1171.0" y="787.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.0" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.69%)</title><rect x="1171.0" y="771.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.0" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.69%)</title><rect x="1171.0" y="755.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.46%)</title><rect x="1171.0" y="739.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.0" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.46%)</title><rect x="1171.0" y="723.0" width="5.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.0" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.23%)</title><rect x="1173.7" y="707.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.7" y="718.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.23%)</title><rect x="1173.7" y="691.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.7" y="702.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.23%)</title><rect x="1176.4" y="739.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.23%)</title><rect x="1176.4" y="723.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.23%)</title><rect x="1176.4" y="707.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="718.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.23%)</title><rect x="1176.4" y="691.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.4" y="702.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.23%)</title><rect x="1176.4" y="675.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="686.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.23%)</title><rect x="1176.4" y="659.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.23%)</title><rect x="1176.4" y="643.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.4" y="654.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.23%)</title><rect x="1179.1" y="851.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.1" y="862.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.23%)</title><rect x="1179.1" y="835.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.1" y="846.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.23%)</title><rect x="1179.1" y="819.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="830.0"></text>
</g>
<g>
<title>LIRGenerator::do_ArrayLength(ArrayLength*) (1 samples, 0.23%)</title><rect x="1179.1" y="803.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.1" y="814.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.23%)</title><rect x="1179.1" y="787.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.23%)</title><rect x="1181.9" y="867.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="878.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.23%)</title><rect x="1181.9" y="851.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.9" y="862.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.23%)</title><rect x="1181.9" y="835.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.9" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.23%)</title><rect x="1181.9" y="819.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.9" y="830.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.23%)</title><rect x="1181.9" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.9" y="814.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.23%)</title><rect x="1181.9" y="787.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.9" y="798.0"></text>
</g>
<g>
<title>MallocTracker::record_malloc(void*, unsigned long, MemoryType, NativeCallStack const&amp;, NMT_TrackingLevel) (1 samples, 0.23%)</title><rect x="1181.9" y="771.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.9" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.23%)</title><rect x="1184.6" y="915.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="926.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.23%)</title><rect x="1184.6" y="899.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.23%)</title><rect x="1184.6" y="883.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.23%)</title><rect x="1184.6" y="867.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.23%)</title><rect x="1184.6" y="851.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.23%)</title><rect x="1184.6" y="835.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.23%)</title><rect x="1187.3" y="979.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="990.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.23%)</title><rect x="1187.3" y="963.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.23%)</title><rect x="1187.3" y="947.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
</g>
</svg>
