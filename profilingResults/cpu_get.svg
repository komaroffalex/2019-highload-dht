<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (8,105 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=29962] (1,118 samples, 13.79%)</title><rect x="10.0" y="947.0" width="162.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="958.0">[NIO Selector #0 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="10.0" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="10.0" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="10.0" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="10.0" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,114 samples, 13.74%)</title><rect x="10.6" y="931.0" width="162.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.6" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (46 samples, 0.57%)</title><rect x="10.9" y="915.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (41 samples, 0.51%)</title><rect x="11.6" y="899.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.6" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="11.7" y="883.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="12.0" y="883.0" width="5.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="15.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 0.44%)</title><rect x="12.0" y="867.0" width="5.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="15.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="13.2" y="851.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="16.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="13.2" y="835.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="13.6" y="819.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="13.8" y="803.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="16.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="13.8" y="787.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="14.2" y="771.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="17.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="14.7" y="755.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="17.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="15.5" y="739.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="18.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="16.0" y="723.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="16.6" y="707.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,065 samples, 13.14%)</title><rect x="17.6" y="915.0" width="155.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.6" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,065 samples, 13.14%)</title><rect x="17.6" y="899.0" width="155.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.6" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,030 samples, 12.71%)</title><rect x="17.6" y="883.0" width="149.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.6" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,013 samples, 12.50%)</title><rect x="18.3" y="867.0" width="147.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.3" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="18.6" y="851.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,008 samples, 12.44%)</title><rect x="18.9" y="851.0" width="146.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.9" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (1,007 samples, 12.42%)</title><rect x="19.0" y="835.0" width="146.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.0" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (1,006 samples, 12.41%)</title><rect x="19.2" y="819.0" width="146.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.2" y="830.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (172 samples, 2.12%)</title><rect x="19.5" y="803.0" width="25.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="20.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="20.0" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="20.0" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (159 samples, 1.96%)</title><rect x="20.3" y="787.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.3" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.10%)</title><rect x="20.5" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="21.2" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="21.2" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="21.2" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="21.2" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 1.85%)</title><rect x="21.6" y="771.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (150 samples, 1.85%)</title><rect x="21.6" y="755.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (150 samples, 1.85%)</title><rect x="21.6" y="739.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (150 samples, 1.85%)</title><rect x="21.6" y="723.0" width="21.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.6" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="21.9" y="707.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="24.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="21.9" y="691.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="24.9" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="22.1" y="675.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="25.1" y="686.0"></text>
</g>
<g>
<title>__send (143 samples, 1.76%)</title><rect x="22.7" y="707.0" width="20.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="25.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.71%)</title><rect x="23.2" y="691.0" width="20.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="26.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.71%)</title><rect x="23.2" y="675.0" width="20.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.65%)</title><rect x="24.0" y="659.0" width="19.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="27.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.65%)</title><rect x="24.0" y="643.0" width="19.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.63%)</title><rect x="24.3" y="627.0" width="19.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="27.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.62%)</title><rect x="24.4" y="611.0" width="19.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="27.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.57%)</title><rect x="25.0" y="595.0" width="18.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="28.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.55%)</title><rect x="25.1" y="579.0" width="18.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="28.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.51%)</title><rect x="25.7" y="563.0" width="17.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="28.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.46%)</title><rect x="26.3" y="547.0" width="17.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="29.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.36%)</title><rect x="27.5" y="531.0" width="16.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="30.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.28%)</title><rect x="28.3" y="515.0" width="15.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="31.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.17%)</title><rect x="29.7" y="499.0" width="13.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="32.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="30.1" y="483.0" width="13.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="33.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="30.5" y="467.0" width="13.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="33.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="30.8" y="451.0" width="12.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="33.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="31.0" y="435.0" width="12.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="34.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="31.1" y="419.0" width="12.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="31.5" y="403.0" width="12.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="34.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="31.5" y="387.0" width="12.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="34.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="32.0" y="371.0" width="11.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.95%)</title><rect x="32.3" y="355.0" width="11.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="35.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="32.9" y="339.0" width="10.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="35.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="33.0" y="323.0" width="10.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="36.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="33.3" y="307.0" width="10.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="36.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.84%)</title><rect x="33.6" y="291.0" width="9.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="36.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.84%)</title><rect x="33.6" y="275.0" width="9.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="36.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.83%)</title><rect x="33.7" y="259.0" width="9.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="36.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.80%)</title><rect x="34.0" y="243.0" width="9.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.80%)</title><rect x="34.0" y="227.0" width="9.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.80%)</title><rect x="34.0" y="211.0" width="9.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.78%)</title><rect x="34.3" y="195.0" width="9.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="37.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="34.6" y="179.0" width="8.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.64%)</title><rect x="35.9" y="163.0" width="7.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="38.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.63%)</title><rect x="36.1" y="147.0" width="7.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="39.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.53%)</title><rect x="37.2" y="131.0" width="6.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="40.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="38.5" y="115.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="41.5" y="126.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="38.8" y="99.0" width="4.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="41.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="38.8" y="83.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="41.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="43.0" y="67.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="46.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="43.2" y="51.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="46.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="43.5" y="787.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="43.6" y="771.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="43.6" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.07%)</title><rect x="44.7" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="45.2" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (800 samples, 9.87%)</title><rect x="45.5" y="803.0" width="116.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.5" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.25%)</title><rect x="45.8" y="787.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (20 samples, 0.25%)</title><rect x="45.8" y="771.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (20 samples, 0.25%)</title><rect x="45.8" y="755.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (576 samples, 7.11%)</title><rect x="48.7" y="787.0" width="83.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.7" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (4 samples, 0.05%)</title><rect x="48.7" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (572 samples, 7.06%)</title><rect x="49.3" y="771.0" width="83.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.3" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (572 samples, 7.06%)</title><rect x="49.3" y="755.0" width="83.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.3" y="766.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (116 samples, 1.43%)</title><rect x="49.3" y="739.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (116 samples, 1.43%)</title><rect x="49.3" y="723.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="49.6" y="707.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="52.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="49.6" y="691.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="52.6" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.12%)</title><rect x="49.6" y="675.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="52.6" y="686.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="49.9" y="659.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="52.9" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.06%)</title><rect x="50.3" y="659.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="53.3" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="51.2" y="675.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="54.2" y="686.0"></text>
</g>
<g>
<title>__GI___recv (98 samples, 1.21%)</title><rect x="51.6" y="707.0" width="14.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="54.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="53.7" y="691.0" width="12.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="56.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="53.7" y="675.0" width="12.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="56.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="54.4" y="659.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="57.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="54.4" y="643.0" width="11.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="57.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="54.6" y="627.0" width="11.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="54.8" y="611.0" width="11.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="57.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="55.7" y="595.0" width="10.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.68%)</title><rect x="57.9" y="579.0" width="8.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="60.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.53%)</title><rect x="59.6" y="563.0" width="6.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="62.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="61.2" y="547.0" width="4.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="64.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.27%)</title><rect x="62.7" y="531.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="65.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="64.6" y="515.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="67.6" y="526.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="65.9" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="68.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (36 samples, 0.44%)</title><rect x="66.2" y="739.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="66.2" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="66.2" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="66.5" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.5" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="66.8" y="723.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="69.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (18 samples, 0.22%)</title><rect x="67.4" y="723.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.17%)</title><rect x="67.9" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="68.2" y="691.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="70.0" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.06%)</title><rect x="70.4" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="70.7" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="70.7" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.02%)</title><rect x="71.1" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="71.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (20 samples, 0.25%)</title><rect x="71.4" y="739.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.21%)</title><rect x="71.9" y="723.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="72.2" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.02%)</title><rect x="72.3" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="72.7" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="72.9" y="691.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="73.0" y="675.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="76.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="73.3" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.07%)</title><rect x="73.5" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="73.8" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.02%)</title><rect x="74.1" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="74.4" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (64 samples, 0.79%)</title><rect x="74.9" y="739.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.9" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.02%)</title><rect x="75.1" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="78.1" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (61 samples, 0.75%)</title><rect x="75.4" y="723.0" width="8.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="78.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.56%)</title><rect x="77.7" y="707.0" width="6.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="80.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.56%)</title><rect x="77.7" y="691.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="80.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="80.0" y="675.0" width="4.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="83.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="80.2" y="659.0" width="4.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="83.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="80.2" y="643.0" width="4.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="83.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="81.2" y="627.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="84.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="82.1" y="611.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="85.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="83.4" y="595.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="86.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (332 samples, 4.10%)</title><rect x="84.3" y="739.0" width="48.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.3" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.07%)</title><rect x="84.8" y="723.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="87.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="85.4" y="707.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="88.4" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="85.9" y="723.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="88.9" y="734.0"></text>
</g>
<g>
<title>__send (319 samples, 3.94%)</title><rect x="86.1" y="723.0" width="46.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="89.1" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (305 samples, 3.76%)</title><rect x="88.2" y="707.0" width="44.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="91.2" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (305 samples, 3.76%)</title><rect x="88.2" y="691.0" width="44.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="91.2" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (292 samples, 3.60%)</title><rect x="90.1" y="675.0" width="42.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.1" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (292 samples, 3.60%)</title><rect x="90.1" y="659.0" width="42.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="93.1" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (290 samples, 3.58%)</title><rect x="90.4" y="643.0" width="42.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="93.4" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (289 samples, 3.57%)</title><rect x="90.5" y="627.0" width="42.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="93.5" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (289 samples, 3.57%)</title><rect x="90.5" y="611.0" width="42.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="93.5" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (287 samples, 3.54%)</title><rect x="90.8" y="595.0" width="41.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="93.8" y="606.0">[un..</text>
</g>
<g>
<title>[unknown] (264 samples, 3.26%)</title><rect x="94.2" y="579.0" width="38.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="97.2" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (251 samples, 3.10%)</title><rect x="96.0" y="563.0" width="36.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="99.0" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (238 samples, 2.94%)</title><rect x="97.9" y="547.0" width="34.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="100.9" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (228 samples, 2.81%)</title><rect x="99.4" y="531.0" width="33.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="102.4" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.59%)</title><rect x="102.0" y="515.0" width="30.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="105.0" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.53%)</title><rect x="102.7" y="499.0" width="29.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="105.7" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (202 samples, 2.49%)</title><rect x="103.2" y="483.0" width="29.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="106.2" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (202 samples, 2.49%)</title><rect x="103.2" y="467.0" width="29.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="106.2" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.47%)</title><rect x="103.5" y="451.0" width="29.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="106.5" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (196 samples, 2.42%)</title><rect x="104.1" y="435.0" width="28.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="107.1" y="446.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.33%)</title><rect x="105.1" y="419.0" width="27.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="108.1" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.33%)</title><rect x="105.1" y="403.0" width="27.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="108.1" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.25%)</title><rect x="106.1" y="387.0" width="26.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="109.1" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.18%)</title><rect x="106.8" y="371.0" width="25.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="109.8" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.10%)</title><rect x="107.8" y="355.0" width="24.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="110.8" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (165 samples, 2.04%)</title><rect x="108.6" y="339.0" width="24.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="111.6" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.00%)</title><rect x="109.0" y="323.0" width="23.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="112.0" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 1.96%)</title><rect x="109.4" y="307.0" width="23.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="112.4" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.94%)</title><rect x="109.7" y="291.0" width="22.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="112.7" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.85%)</title><rect x="110.7" y="275.0" width="21.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="113.7" y="286.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="111.0" y="259.0" width="21.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="114.0" y="270.0">[..</text>
</g>
<g>
<title>[unknown] (147 samples, 1.81%)</title><rect x="111.2" y="243.0" width="21.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="114.2" y="254.0">[..</text>
</g>
<g>
<title>[unknown] (147 samples, 1.81%)</title><rect x="111.2" y="227.0" width="21.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="114.2" y="238.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.79%)</title><rect x="111.5" y="211.0" width="21.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="114.5" y="222.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="111.9" y="195.0" width="20.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="114.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.63%)</title><rect x="113.4" y="179.0" width="19.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="116.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.54%)</title><rect x="114.4" y="163.0" width="18.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="117.4" y="174.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.30%)</title><rect x="117.3" y="147.0" width="15.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="120.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="119.9" y="131.0" width="12.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="122.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="121.2" y="115.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="124.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.93%)</title><rect x="121.7" y="99.0" width="10.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="124.7" y="110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="132.3" y="83.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="135.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="132.6" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (164 samples, 2.02%)</title><rect x="132.9" y="787.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.9" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (155 samples, 1.91%)</title><rect x="132.9" y="771.0" width="22.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.9" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (145 samples, 1.79%)</title><rect x="132.9" y="755.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.9" y="766.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 1.73%)</title><rect x="132.9" y="739.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.9" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 1.73%)</title><rect x="132.9" y="723.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.9" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (131 samples, 1.62%)</title><rect x="133.0" y="707.0" width="19.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="136.0" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="133.6" y="691.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="136.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (121 samples, 1.49%)</title><rect x="134.2" y="691.0" width="17.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="137.2" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="134.9" y="675.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="137.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (94 samples, 1.16%)</title><rect x="135.6" y="675.0" width="13.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="138.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (93 samples, 1.15%)</title><rect x="135.8" y="659.0" width="13.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="138.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (93 samples, 1.15%)</title><rect x="135.8" y="643.0" width="13.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="138.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.02%)</title><rect x="136.1" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="139.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (84 samples, 1.04%)</title><rect x="136.5" y="627.0" width="12.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="139.5" y="638.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.02%)</title><rect x="137.1" y="611.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="140.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="137.4" y="611.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="140.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.05%)</title><rect x="137.8" y="611.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="138.1" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="141.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="138.4" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.05%)</title><rect x="138.7" y="611.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="141.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="139.0" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="139.3" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="142.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (60 samples, 0.74%)</title><rect x="139.6" y="611.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="142.6" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (56 samples, 0.69%)</title><rect x="139.7" y="595.0" width="8.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="142.7" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="139.7" y="579.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="142.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (50 samples, 0.62%)</title><rect x="140.2" y="579.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="143.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="143.4" y="563.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="146.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="143.8" y="563.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="146.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (23 samples, 0.28%)</title><rect x="144.1" y="563.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="147.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="144.7" y="547.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="147.7" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="145.3" y="547.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="148.3" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (9 samples, 0.11%)</title><rect x="145.5" y="547.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="148.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="146.9" y="547.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="149.9" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="147.1" y="547.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="150.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.02%)</title><rect x="148.0" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (17 samples, 0.21%)</title><rect x="149.3" y="675.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="152.3" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.11%)</title><rect x="150.2" y="659.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="153.2" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="150.9" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="153.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="151.1" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="154.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="151.2" y="611.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="154.2" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="151.5" y="659.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="154.5" y="670.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.02%)</title><rect x="151.8" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.8" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="152.4" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="155.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (4 samples, 0.05%)</title><rect x="153.3" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (3 samples, 0.04%)</title><rect x="153.4" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="153.6" y="707.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (10 samples, 0.12%)</title><rect x="154.0" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="154.0" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="154.0" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.07%)</title><rect x="154.3" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="154.3" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="154.3" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="154.7" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="155.2" y="739.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (9 samples, 0.11%)</title><rect x="155.4" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.11%)</title><rect x="155.4" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.02%)</title><rect x="156.5" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (36 samples, 0.44%)</title><rect x="156.8" y="787.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.8" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (4 samples, 0.05%)</title><rect x="159.4" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="159.7" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="159.7" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.7" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1367322467.get$Lambda (2 samples, 0.02%)</title><rect x="159.7" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.09%)</title><rect x="160.1" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (7 samples, 0.09%)</title><rect x="160.1" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.09%)</title><rect x="160.1" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.09%)</title><rect x="160.1" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.09%)</title><rect x="160.1" y="707.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.07%)</title><rect x="160.1" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.02%)</title><rect x="160.1" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (3 samples, 0.04%)</title><rect x="160.4" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.04%)</title><rect x="160.4" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.02%)</title><rect x="161.3" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.02%)</title><rect x="161.6" y="771.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (18 samples, 0.22%)</title><rect x="162.0" y="803.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (18 samples, 0.22%)</title><rect x="162.0" y="787.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (16 samples, 0.20%)</title><rect x="162.0" y="771.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (16 samples, 0.20%)</title><rect x="162.0" y="755.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (16 samples, 0.20%)</title><rect x="162.0" y="739.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (16 samples, 0.20%)</title><rect x="162.0" y="723.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="162.4" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (2 samples, 0.02%)</title><rect x="162.7" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.07%)</title><rect x="163.0" y="707.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.0" y="718.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="164.0" y="707.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="167.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="164.3" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (7 samples, 0.09%)</title><rect x="164.6" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.02%)</title><rect x="165.3" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.09%)</title><rect x="165.8" y="867.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.06%)</title><rect x="166.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="166.8" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (35 samples, 0.43%)</title><rect x="167.5" y="883.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (34 samples, 0.42%)</title><rect x="167.7" y="867.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="168.3" y="851.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="171.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="168.3" y="835.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="171.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.06%)</title><rect x="168.3" y="819.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="171.3" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="168.5" y="803.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="171.5" y="814.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.02%)</title><rect x="169.0" y="819.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="172.0" y="830.0"></text>
</g>
<g>
<title>__GI___recv (23 samples, 0.28%)</title><rect x="169.3" y="851.0" width="3.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="172.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="170.0" y="835.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="173.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="170.0" y="819.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="173.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="170.3" y="803.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="173.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="170.3" y="787.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="173.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="170.3" y="771.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="173.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="170.4" y="755.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="173.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="170.4" y="739.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="173.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="170.9" y="723.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="173.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="171.3" y="707.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="174.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="171.7" y="691.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="174.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="171.9" y="675.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="174.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="172.2" y="659.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="175.2" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=29990] (449 samples, 5.54%)</title><rect x="172.8" y="947.0" width="65.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="175.8" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="172.9" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="175.9" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (445 samples, 5.49%)</title><rect x="173.4" y="931.0" width="64.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.4" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 0.58%)</title><rect x="173.9" y="915.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 0.58%)</title><rect x="173.9" y="899.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="174.2" y="883.0" width="5.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="177.2" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="174.2" y="867.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="177.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (38 samples, 0.47%)</title><rect x="174.5" y="867.0" width="5.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="177.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="175.8" y="851.0" width="4.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="178.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="175.8" y="835.0" width="4.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="178.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="175.8" y="819.0" width="4.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="178.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="175.8" y="803.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="178.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="176.0" y="787.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="179.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="177.0" y="771.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="180.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="177.7" y="755.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="180.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="178.2" y="739.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="181.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="178.9" y="723.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="181.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="179.2" y="707.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="182.2" y="718.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="180.0" y="883.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="183.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="180.5" y="867.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="183.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (394 samples, 4.86%)</title><rect x="180.8" y="915.0" width="57.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.8" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (391 samples, 4.82%)</title><rect x="180.8" y="899.0" width="56.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (348 samples, 4.29%)</title><rect x="180.8" y="883.0" width="50.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.8" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (333 samples, 4.11%)</title><rect x="180.9" y="867.0" width="48.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.9" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (329 samples, 4.06%)</title><rect x="181.5" y="851.0" width="47.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.5" y="862.0">one/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (327 samples, 4.03%)</title><rect x="181.8" y="835.0" width="47.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.8" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (325 samples, 4.01%)</title><rect x="182.1" y="819.0" width="47.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.1" y="830.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (183 samples, 2.26%)</title><rect x="182.4" y="803.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.4" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="182.5" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="182.5" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="182.5" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="182.7" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="185.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (175 samples, 2.16%)</title><rect x="183.0" y="787.0" width="25.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.0" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="183.0" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="183.1" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="183.1" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="183.1" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="183.1" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 2.11%)</title><rect x="183.5" y="771.0" width="24.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 2.11%)</title><rect x="183.5" y="755.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 2.10%)</title><rect x="183.7" y="739.0" width="24.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.7" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (166 samples, 2.05%)</title><rect x="184.3" y="723.0" width="24.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.3" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="184.4" y="707.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="187.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="184.4" y="691.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="187.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.02%)</title><rect x="184.4" y="675.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="187.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="184.4" y="659.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="187.4" y="670.0"></text>
</g>
<g>
<title>__send (162 samples, 2.00%)</title><rect x="184.9" y="707.0" width="23.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.9" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.90%)</title><rect x="186.0" y="691.0" width="22.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="189.0" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.90%)</title><rect x="186.0" y="675.0" width="22.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="189.0" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.85%)</title><rect x="186.6" y="659.0" width="21.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="189.6" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.85%)</title><rect x="186.6" y="643.0" width="21.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="189.6" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (149 samples, 1.84%)</title><rect x="186.7" y="627.0" width="21.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="189.7" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (147 samples, 1.81%)</title><rect x="187.0" y="611.0" width="21.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="190.0" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="187.2" y="595.0" width="21.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="190.2" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="187.2" y="579.0" width="21.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="190.2" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="187.5" y="563.0" width="20.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="190.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.70%)</title><rect x="188.3" y="547.0" width="20.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="191.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.69%)</title><rect x="188.5" y="531.0" width="19.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="191.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.60%)</title><rect x="189.5" y="515.0" width="18.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="192.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.42%)</title><rect x="191.7" y="499.0" width="16.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="194.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.39%)</title><rect x="192.0" y="483.0" width="16.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="195.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.34%)</title><rect x="192.6" y="467.0" width="15.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="195.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.32%)</title><rect x="192.9" y="451.0" width="15.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="195.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.30%)</title><rect x="193.2" y="435.0" width="15.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="196.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="193.4" y="419.0" width="15.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="196.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="194.2" y="403.0" width="14.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="197.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="194.2" y="387.0" width="14.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="197.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="194.9" y="371.0" width="13.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="197.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="195.0" y="355.0" width="13.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="198.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="195.8" y="339.0" width="12.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="198.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="196.2" y="323.0" width="12.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="199.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="196.6" y="307.0" width="11.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="199.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="196.9" y="291.0" width="11.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="199.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="196.9" y="275.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="199.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.95%)</title><rect x="197.2" y="259.0" width="11.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="200.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.93%)</title><rect x="197.5" y="243.0" width="10.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="200.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="197.8" y="227.0" width="10.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="200.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="198.0" y="211.0" width="10.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="201.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="198.0" y="195.0" width="10.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="201.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="198.8" y="179.0" width="9.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="201.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="199.6" y="163.0" width="8.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="202.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.69%)</title><rect x="200.3" y="147.0" width="8.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="203.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.58%)</title><rect x="201.6" y="131.0" width="6.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="204.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="202.6" y="115.0" width="5.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="205.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="203.2" y="99.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="203.2" y="83.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.2" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="208.0" y="67.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="211.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="208.1" y="51.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="211.1" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="208.4" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="208.4" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="208.4" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.07%)</title><rect x="209.2" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="209.7" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (132 samples, 1.63%)</title><rect x="210.0" y="803.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="210.3" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (115 samples, 1.42%)</title><rect x="210.8" y="787.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (113 samples, 1.39%)</title><rect x="210.8" y="771.0" width="16.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (111 samples, 1.37%)</title><rect x="210.8" y="755.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (107 samples, 1.32%)</title><rect x="210.8" y="739.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (107 samples, 1.32%)</title><rect x="210.8" y="723.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.8" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (98 samples, 1.21%)</title><rect x="211.1" y="707.0" width="14.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="214.1" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="211.1" y="691.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="214.1" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (92 samples, 1.14%)</title><rect x="211.9" y="691.0" width="13.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="214.9" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="212.2" y="675.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="215.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (68 samples, 0.84%)</title><rect x="213.2" y="675.0" width="9.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="216.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (67 samples, 0.83%)</title><rect x="213.4" y="659.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="216.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (66 samples, 0.81%)</title><rect x="213.4" y="643.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="216.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="213.4" y="627.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="216.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.05%)</title><rect x="213.7" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="216.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (58 samples, 0.72%)</title><rect x="214.4" y="627.0" width="8.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="217.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="214.8" y="611.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="217.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.04%)</title><rect x="215.3" y="611.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="218.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.02%)</title><rect x="215.4" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="218.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.05%)</title><rect x="215.7" y="611.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="218.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="215.9" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="218.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (43 samples, 0.53%)</title><rect x="216.3" y="611.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="219.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (37 samples, 0.46%)</title><rect x="216.6" y="595.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="219.6" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="216.9" y="579.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="219.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (29 samples, 0.36%)</title><rect x="217.2" y="579.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="220.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="219.6" y="563.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="222.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.11%)</title><rect x="220.1" y="563.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="223.1" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="220.7" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.02%)</title><rect x="221.0" y="547.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="224.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.02%)</title><rect x="221.5" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="224.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.04%)</title><rect x="222.0" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="225.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="222.6" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="225.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.02%)</title><rect x="223.1" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="226.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (12 samples, 0.15%)</title><rect x="223.4" y="675.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="226.4" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.09%)</title><rect x="223.9" y="659.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="226.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="223.9" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="226.9" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.02%)</title><rect x="224.3" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="227.3" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="224.6" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="227.6" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="224.6" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="227.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="224.6" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="227.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="225.3" y="707.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="228.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="225.3" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="228.3" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="225.3" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="228.3" y="686.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="225.6" y="707.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="228.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (2 samples, 0.02%)</title><rect x="226.3" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.fromBytes (2 samples, 0.02%)</title><rect x="226.6" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="226.9" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="226.9" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="226.9" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="226.9" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (2 samples, 0.02%)</title><rect x="227.2" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="227.2" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (12 samples, 0.15%)</title><rect x="227.5" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="229.0" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.10%)</title><rect x="229.4" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="229.7" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="229.7" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="230.6" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="231.0" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="231.0" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (43 samples, 0.53%)</title><rect x="231.4" y="883.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 0.52%)</title><rect x="231.6" y="867.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="231.6" y="851.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="234.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="231.6" y="835.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="234.6" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.06%)</title><rect x="231.6" y="819.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="234.6" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="231.7" y="803.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="234.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="232.0" y="803.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="235.0" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="232.0" y="787.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="235.0" y="798.0"></text>
</g>
<g>
<title>__GI___recv (36 samples, 0.44%)</title><rect x="232.5" y="851.0" width="5.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="235.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="233.5" y="835.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="236.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="233.5" y="819.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="236.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="234.1" y="803.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="237.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="234.1" y="787.0" width="3.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="237.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.27%)</title><rect x="234.5" y="771.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="237.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="234.9" y="755.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="237.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="235.1" y="739.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="238.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="235.7" y="723.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="238.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="236.1" y="707.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="239.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="236.7" y="691.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="239.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="236.8" y="675.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="237.3" y="659.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="240.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.04%)</title><rect x="237.7" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.7" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=30014] (439 samples, 5.42%)</title><rect x="238.1" y="947.0" width="64.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="241.1" y="958.0">[NIO Se..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="238.3" y="931.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="241.3" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (435 samples, 5.37%)</title><rect x="238.7" y="931.0" width="63.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.7" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 0.54%)</title><rect x="238.7" y="915.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (43 samples, 0.53%)</title><rect x="238.9" y="899.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.48%)</title><rect x="239.2" y="883.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="242.2" y="894.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 0.48%)</title><rect x="239.2" y="867.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="242.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="239.6" y="851.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="242.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="239.6" y="835.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="242.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="240.2" y="819.0" width="4.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="243.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="240.2" y="803.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="243.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="240.3" y="787.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="243.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="240.9" y="771.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="243.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="242.2" y="755.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="245.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="242.7" y="739.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="245.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="243.7" y="723.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="246.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="244.0" y="707.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="247.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (391 samples, 4.82%)</title><rect x="245.1" y="915.0" width="57.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.1" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (391 samples, 4.82%)</title><rect x="245.1" y="899.0" width="57.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.1" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (355 samples, 4.38%)</title><rect x="245.1" y="883.0" width="51.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.1" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (334 samples, 4.12%)</title><rect x="246.1" y="867.0" width="48.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.1" y="878.0">one/..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="246.4" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="249.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (330 samples, 4.07%)</title><rect x="246.7" y="851.0" width="48.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.7" y="862.0">one/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (330 samples, 4.07%)</title><rect x="246.7" y="835.0" width="48.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.7" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (329 samples, 4.06%)</title><rect x="246.9" y="819.0" width="47.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.9" y="830.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (156 samples, 1.92%)</title><rect x="247.2" y="803.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (154 samples, 1.90%)</title><rect x="247.3" y="787.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.3" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.06%)</title><rect x="247.3" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="247.6" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="247.6" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="247.6" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="247.6" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="247.7" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="250.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 1.84%)</title><rect x="248.0" y="771.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 1.84%)</title><rect x="248.0" y="755.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.0" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (149 samples, 1.84%)</title><rect x="248.0" y="739.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (147 samples, 1.81%)</title><rect x="248.3" y="723.0" width="21.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.3" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="248.8" y="707.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="251.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="248.8" y="691.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="251.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.02%)</title><rect x="248.8" y="675.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="251.8" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="249.1" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="252.1" y="686.0"></text>
</g>
<g>
<title>__send (138 samples, 1.70%)</title><rect x="249.6" y="707.0" width="20.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="252.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.64%)</title><rect x="250.4" y="691.0" width="19.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="253.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.64%)</title><rect x="250.4" y="675.0" width="19.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="253.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 1.60%)</title><rect x="250.8" y="659.0" width="18.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="253.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="251.0" y="643.0" width="18.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="254.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.57%)</title><rect x="251.2" y="627.0" width="18.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="254.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.55%)</title><rect x="251.4" y="611.0" width="18.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="254.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.53%)</title><rect x="251.7" y="595.0" width="18.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="254.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.52%)</title><rect x="251.8" y="579.0" width="17.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="254.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.48%)</title><rect x="252.3" y="563.0" width="17.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="255.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.41%)</title><rect x="253.1" y="547.0" width="16.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="256.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.36%)</title><rect x="253.7" y="531.0" width="16.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="256.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="254.3" y="515.0" width="15.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="257.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.22%)</title><rect x="255.3" y="499.0" width="14.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="258.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.20%)</title><rect x="255.6" y="483.0" width="14.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="258.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="256.5" y="467.0" width="13.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="259.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="257.1" y="451.0" width="12.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="260.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="257.2" y="435.0" width="12.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="260.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="257.4" y="419.0" width="12.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="260.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.99%)</title><rect x="258.1" y="403.0" width="11.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="261.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="258.4" y="387.0" width="11.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="261.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="258.7" y="371.0" width="11.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="261.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="258.7" y="355.0" width="11.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.88%)</title><rect x="259.4" y="339.0" width="10.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="262.4" y="350.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.88%)</title><rect x="259.4" y="323.0" width="10.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="262.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="259.5" y="307.0" width="10.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="262.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="259.7" y="291.0" width="10.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="262.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="259.7" y="275.0" width="10.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="262.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="260.1" y="259.0" width="9.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="263.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="260.4" y="243.0" width="9.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="263.4" y="254.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="260.7" y="227.0" width="9.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="263.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="260.7" y="211.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="263.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="260.7" y="195.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="263.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.72%)</title><rect x="261.3" y="179.0" width="8.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="264.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.63%)</title><rect x="262.3" y="163.0" width="7.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="265.3" y="174.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.60%)</title><rect x="262.6" y="147.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="265.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.48%)</title><rect x="264.1" y="131.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="267.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="264.2" y="115.0" width="5.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="267.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="264.5" y="99.0" width="5.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="267.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="265.1" y="83.0" width="4.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="268.1" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="269.4" y="67.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="272.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="269.9" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.12%)</title><rect x="270.2" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="270.9" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="270.9" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="271.2" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="271.2" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="271.2" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (158 samples, 1.95%)</title><rect x="271.6" y="803.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.6" y="814.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="271.6" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (150 samples, 1.85%)</title><rect x="272.1" y="787.0" width="21.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.1" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (148 samples, 1.83%)</title><rect x="272.1" y="771.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (145 samples, 1.79%)</title><rect x="272.1" y="755.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.1" y="766.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 1.73%)</title><rect x="272.1" y="739.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (140 samples, 1.73%)</title><rect x="272.1" y="723.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.1" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (132 samples, 1.63%)</title><rect x="272.1" y="707.0" width="19.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="275.1" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="272.4" y="691.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="275.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="272.8" y="691.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="275.8" y="702.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.05%)</title><rect x="273.1" y="691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.1" y="702.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.05%)</title><rect x="273.7" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="276.7" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.06%)</title><rect x="274.4" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="277.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.02%)</title><rect x="275.1" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="278.1" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (109 samples, 1.34%)</title><rect x="275.4" y="691.0" width="15.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="278.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="276.4" y="675.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="279.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (79 samples, 0.97%)</title><rect x="277.0" y="675.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="280.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (77 samples, 0.95%)</title><rect x="277.3" y="659.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="280.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 0.94%)</title><rect x="277.4" y="643.0" width="11.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="280.4" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="277.4" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="280.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (3 samples, 0.04%)</title><rect x="278.2" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="281.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (64 samples, 0.79%)</title><rect x="278.6" y="627.0" width="9.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="281.6" y="638.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.02%)</title><rect x="279.5" y="611.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="282.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="279.8" y="611.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="282.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.07%)</title><rect x="280.1" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="283.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.02%)</title><rect x="280.2" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="283.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="281.2" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="284.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (42 samples, 0.52%)</title><rect x="281.7" y="611.0" width="6.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="284.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (35 samples, 0.43%)</title><rect x="282.1" y="595.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="285.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="282.1" y="579.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="285.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (28 samples, 0.35%)</title><rect x="282.5" y="579.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="285.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.16%)</title><rect x="284.7" y="563.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="287.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="285.2" y="547.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="288.2" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="285.6" y="547.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.6" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="285.9" y="547.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="288.9" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="286.3" y="547.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="289.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="286.6" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="289.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.02%)</title><rect x="286.9" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="289.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.05%)</title><rect x="287.2" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="290.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.02%)</title><rect x="288.1" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="291.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (18 samples, 0.22%)</title><rect x="288.7" y="675.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="291.7" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="289.1" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="292.1" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (12 samples, 0.15%)</title><rect x="289.4" y="659.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="292.4" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.12%)</title><rect x="289.7" y="643.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="292.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.12%)</title><rect x="289.7" y="627.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="292.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.11%)</title><rect x="289.7" y="611.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="292.7" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="290.3" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="293.3" y="606.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="291.3" y="707.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="294.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.04%)</title><rect x="291.7" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="294.7" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.02%)</title><rect x="292.2" y="707.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="295.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (4 samples, 0.05%)</title><rect x="292.4" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="292.4" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="292.4" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="292.4" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="292.4" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="292.4" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="292.7" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (3 samples, 0.04%)</title><rect x="293.2" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="293.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="293.2" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="293.2" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (2 samples, 0.02%)</title><rect x="293.6" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="293.6" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (5 samples, 0.06%)</title><rect x="293.9" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.05%)</title><rect x="294.8" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="295.4" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="295.9" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="295.9" y="851.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 0.44%)</title><rect x="296.8" y="883.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (36 samples, 0.44%)</title><rect x="296.8" y="867.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="297.2" y="851.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="300.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="297.2" y="835.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="300.2" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="297.2" y="819.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="300.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.09%)</title><rect x="297.2" y="803.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="300.2" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="297.4" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="300.4" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="298.0" y="787.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="301.0" y="798.0"></text>
</g>
<g>
<title>__GI___recv (26 samples, 0.32%)</title><rect x="298.3" y="851.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="301.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="298.6" y="835.0" width="3.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="301.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="298.6" y="819.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="301.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="299.4" y="803.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="302.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="299.4" y="787.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="302.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="299.7" y="771.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="302.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="300.0" y="755.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="303.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="300.2" y="739.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="303.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="300.5" y="723.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="303.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="300.7" y="707.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="303.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="300.7" y="691.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="303.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="301.2" y="675.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="304.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="301.6" y="659.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="304.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=29963] (1,121 samples, 13.83%)</title><rect x="302.1" y="947.0" width="163.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.1" y="958.0">[NIO Selector #1 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="302.1" y="931.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="305.1" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="302.1" y="915.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="305.1" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="302.1" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="305.1" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="302.1" y="883.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="305.1" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.07%)</title><rect x="302.6" y="931.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="305.6" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,111 samples, 13.71%)</title><rect x="303.5" y="931.0" width="161.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.5" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 0.54%)</title><rect x="303.7" y="915.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (40 samples, 0.49%)</title><rect x="304.2" y="899.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="304.4" y="883.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="307.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="304.7" y="883.0" width="5.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="307.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.42%)</title><rect x="305.0" y="867.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="308.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="305.5" y="851.0" width="4.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="308.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="305.5" y="835.0" width="4.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="308.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="306.3" y="819.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="309.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="306.3" y="803.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="309.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="306.3" y="787.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="309.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="306.9" y="771.0" width="3.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="309.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="308.2" y="755.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="311.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="308.7" y="739.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="311.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="309.2" y="723.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="312.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,066 samples, 13.15%)</title><rect x="310.1" y="915.0" width="155.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.1" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,065 samples, 13.14%)</title><rect x="310.2" y="899.0" width="155.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.2" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,021 samples, 12.60%)</title><rect x="310.2" y="883.0" width="148.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.2" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,001 samples, 12.35%)</title><rect x="310.5" y="867.0" width="145.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.5" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (997 samples, 12.30%)</title><rect x="310.8" y="851.0" width="145.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.8" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (997 samples, 12.30%)</title><rect x="310.8" y="835.0" width="145.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="313.8" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="310.9" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (993 samples, 12.25%)</title><rect x="311.4" y="819.0" width="144.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.4" y="830.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (204 samples, 2.52%)</title><rect x="311.5" y="803.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.5" y="814.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="311.7" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="311.7" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="311.7" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.7" y="766.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="311.7" y="739.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="314.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (196 samples, 2.42%)</title><rect x="312.2" y="787.0" width="28.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="312.4" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.02%)</title><rect x="312.7" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="312.7" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="312.7" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="312.7" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (191 samples, 2.36%)</title><rect x="313.0" y="771.0" width="27.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (191 samples, 2.36%)</title><rect x="313.0" y="755.0" width="27.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.0" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (189 samples, 2.33%)</title><rect x="313.3" y="739.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.3" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (188 samples, 2.32%)</title><rect x="313.4" y="723.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.4" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="313.7" y="707.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="316.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="313.7" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="316.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.02%)</title><rect x="313.7" y="675.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="316.7" y="686.0"></text>
</g>
<g>
<title>__send (184 samples, 2.27%)</title><rect x="314.0" y="707.0" width="26.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="317.0" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.23%)</title><rect x="314.4" y="691.0" width="26.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="317.4" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.23%)</title><rect x="314.4" y="675.0" width="26.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="317.4" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.16%)</title><rect x="315.3" y="659.0" width="25.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="318.3" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.16%)</title><rect x="315.3" y="643.0" width="25.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="318.3" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (172 samples, 2.12%)</title><rect x="315.7" y="627.0" width="25.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="318.7" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (171 samples, 2.11%)</title><rect x="315.9" y="611.0" width="24.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="318.9" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.10%)</title><rect x="316.0" y="595.0" width="24.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="319.0" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.10%)</title><rect x="316.0" y="579.0" width="24.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="319.0" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (152 samples, 1.88%)</title><rect x="318.6" y="563.0" width="22.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="321.6" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="319.5" y="547.0" width="21.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="322.5" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (136 samples, 1.68%)</title><rect x="321.0" y="531.0" width="19.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="324.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.55%)</title><rect x="322.4" y="515.0" width="18.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="325.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.38%)</title><rect x="324.5" y="499.0" width="16.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="327.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.36%)</title><rect x="324.8" y="483.0" width="16.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="327.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.30%)</title><rect x="325.5" y="467.0" width="15.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="328.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="325.8" y="451.0" width="15.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="328.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="325.8" y="435.0" width="15.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="328.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.26%)</title><rect x="325.9" y="419.0" width="14.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="328.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.26%)</title><rect x="325.9" y="403.0" width="14.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="328.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.25%)</title><rect x="326.1" y="387.0" width="14.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="329.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.23%)</title><rect x="326.2" y="371.0" width="14.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="329.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="326.5" y="355.0" width="14.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="329.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.16%)</title><rect x="327.1" y="339.0" width="13.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="330.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="327.5" y="323.0" width="13.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="330.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.11%)</title><rect x="327.7" y="307.0" width="13.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="330.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="328.1" y="291.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="331.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="328.1" y="275.0" width="12.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="331.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="328.5" y="259.0" width="12.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="331.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="328.5" y="243.0" width="12.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="331.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="328.5" y="227.0" width="12.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="331.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.02%)</title><rect x="328.7" y="211.0" width="12.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="331.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.02%)</title><rect x="328.7" y="195.0" width="12.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="331.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="329.4" y="179.0" width="11.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="332.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.88%)</title><rect x="330.4" y="163.0" width="10.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="333.4" y="174.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="331.2" y="147.0" width="9.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="334.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="331.9" y="131.0" width="8.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="334.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.59%)</title><rect x="333.8" y="115.0" width="7.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="336.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.57%)</title><rect x="334.1" y="99.0" width="6.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="337.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.53%)</title><rect x="334.5" y="83.0" width="6.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="337.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="340.8" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.09%)</title><rect x="341.4" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.4" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="341.5" y="787.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="344.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="341.9" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (763 samples, 9.41%)</title><rect x="342.4" y="803.0" width="111.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.4" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.12%)</title><rect x="342.7" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (10 samples, 0.12%)</title><rect x="342.7" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (10 samples, 0.12%)</title><rect x="342.7" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (562 samples, 6.93%)</title><rect x="344.1" y="787.0" width="81.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.1" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (6 samples, 0.07%)</title><rect x="344.1" y="771.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (556 samples, 6.86%)</title><rect x="345.0" y="771.0" width="80.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.0" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (556 samples, 6.86%)</title><rect x="345.0" y="755.0" width="80.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.0" y="766.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (123 samples, 1.52%)</title><rect x="345.0" y="739.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (123 samples, 1.52%)</title><rect x="345.0" y="723.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="346.0" y="707.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="349.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="346.0" y="691.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="349.0" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.22%)</title><rect x="346.0" y="675.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="349.0" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="346.2" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="349.2" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="346.6" y="659.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="349.6" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.11%)</title><rect x="347.2" y="659.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="350.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="347.8" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="350.8" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="348.1" y="643.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="351.1" y="654.0"></text>
</g>
<g>
<title>__GI___recv (96 samples, 1.18%)</title><rect x="348.8" y="707.0" width="14.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="351.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="350.5" y="691.0" width="12.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="353.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="350.5" y="675.0" width="12.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="353.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="351.0" y="659.0" width="11.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="354.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="351.0" y="643.0" width="11.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="354.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.99%)</title><rect x="351.1" y="627.0" width="11.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="354.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="351.7" y="611.0" width="11.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="354.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="352.3" y="595.0" width="10.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="355.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="353.9" y="579.0" width="8.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="356.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.51%)</title><rect x="356.8" y="563.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="359.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="358.0" y="547.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="361.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="359.7" y="531.0" width="3.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="362.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="361.9" y="515.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="364.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="362.5" y="499.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="365.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (25 samples, 0.31%)</title><rect x="362.9" y="739.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.10%)</title><rect x="362.9" y="723.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="363.2" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="363.6" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (10 samples, 0.12%)</title><rect x="364.1" y="723.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.11%)</title><rect x="364.2" y="707.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.10%)</title><rect x="364.4" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.06%)</title><rect x="365.5" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.02%)</title><rect x="366.3" y="723.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="366.3" y="707.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="366.3" y="691.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (32 samples, 0.39%)</title><rect x="366.5" y="739.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.26%)</title><rect x="367.6" y="723.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="367.9" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.02%)</title><rect x="368.0" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.10%)</title><rect x="368.3" y="707.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="368.9" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="369.0" y="675.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="372.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="369.5" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.10%)</title><rect x="369.5" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="369.8" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.8" y="686.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.02%)</title><rect x="370.3" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="370.6" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.06%)</title><rect x="371.2" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="371.5" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="371.5" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (59 samples, 0.73%)</title><rect x="371.9" y="739.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (3 samples, 0.04%)</title><rect x="372.2" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="375.2" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (54 samples, 0.67%)</title><rect x="372.7" y="723.0" width="7.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="375.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="375.6" y="707.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="378.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="375.6" y="691.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="378.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="376.7" y="675.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="379.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="376.7" y="659.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="379.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="377.0" y="643.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="380.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="377.5" y="627.0" width="3.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="380.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="378.2" y="611.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="381.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="379.2" y="595.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="382.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (312 samples, 3.85%)</title><rect x="380.5" y="739.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.5" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (9 samples, 0.11%)</title><rect x="381.4" y="723.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="384.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.07%)</title><rect x="381.8" y="707.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="384.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="382.3" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="385.3" y="702.0"></text>
</g>
<g>
<title>__send (297 samples, 3.66%)</title><rect x="382.7" y="723.0" width="43.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="385.7" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (281 samples, 3.47%)</title><rect x="385.0" y="707.0" width="40.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="388.0" y="718.0">[un..</text>
</g>
<g>
<title>[unknown] (281 samples, 3.47%)</title><rect x="385.0" y="691.0" width="40.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="388.0" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (274 samples, 3.38%)</title><rect x="386.1" y="675.0" width="39.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="389.1" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (274 samples, 3.38%)</title><rect x="386.1" y="659.0" width="39.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="389.1" y="670.0">[un..</text>
</g>
<g>
<title>[unknown] (272 samples, 3.36%)</title><rect x="386.3" y="643.0" width="39.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="389.3" y="654.0">[un..</text>
</g>
<g>
<title>[unknown] (270 samples, 3.33%)</title><rect x="386.6" y="627.0" width="39.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="389.6" y="638.0">[un..</text>
</g>
<g>
<title>[unknown] (270 samples, 3.33%)</title><rect x="386.6" y="611.0" width="39.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="389.6" y="622.0">[un..</text>
</g>
<g>
<title>[unknown] (269 samples, 3.32%)</title><rect x="386.8" y="595.0" width="39.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="389.8" y="606.0">[un..</text>
</g>
<g>
<title>[unknown] (255 samples, 3.15%)</title><rect x="388.8" y="579.0" width="37.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="391.8" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (249 samples, 3.07%)</title><rect x="389.7" y="563.0" width="36.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="392.7" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (237 samples, 2.92%)</title><rect x="391.4" y="547.0" width="34.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="394.4" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (221 samples, 2.73%)</title><rect x="393.8" y="531.0" width="32.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="396.8" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.59%)</title><rect x="395.4" y="515.0" width="30.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="398.4" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.46%)</title><rect x="397.0" y="499.0" width="28.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="400.0" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.33%)</title><rect x="398.4" y="483.0" width="27.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="401.4" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (185 samples, 2.28%)</title><rect x="399.0" y="467.0" width="26.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="402.0" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (184 samples, 2.27%)</title><rect x="399.2" y="451.0" width="26.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="402.2" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.25%)</title><rect x="399.5" y="435.0" width="26.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="402.5" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 2.13%)</title><rect x="400.8" y="419.0" width="25.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="403.8" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 2.13%)</title><rect x="400.8" y="403.0" width="25.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="403.8" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="402.1" y="387.0" width="23.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="405.1" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 1.96%)</title><rect x="402.8" y="371.0" width="23.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="405.8" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.94%)</title><rect x="403.1" y="355.0" width="22.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="406.1" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (151 samples, 1.86%)</title><rect x="404.0" y="339.0" width="21.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="407.0" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.85%)</title><rect x="404.1" y="323.0" width="21.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="407.1" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="404.4" y="307.0" width="21.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="407.4" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="404.7" y="291.0" width="21.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="407.7" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="405.3" y="275.0" width="20.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="408.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.70%)</title><rect x="405.9" y="259.0" width="20.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="408.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.68%)</title><rect x="406.1" y="243.0" width="19.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="409.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.68%)</title><rect x="406.1" y="227.0" width="19.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="409.1" y="238.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.67%)</title><rect x="406.3" y="211.0" width="19.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="409.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="407.2" y="195.0" width="18.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="410.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.49%)</title><rect x="408.3" y="179.0" width="17.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="411.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.48%)</title><rect x="408.5" y="163.0" width="17.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="411.5" y="174.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.30%)</title><rect x="410.7" y="147.0" width="15.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="413.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.16%)</title><rect x="412.3" y="131.0" width="13.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="415.3" y="142.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="413.0" y="115.0" width="12.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="416.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.09%)</title><rect x="413.1" y="99.0" width="12.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="416.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="425.1" y="83.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="428.1" y="94.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="425.4" y="67.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="428.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (152 samples, 1.88%)</title><rect x="425.9" y="787.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.9" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (141 samples, 1.74%)</title><rect x="425.9" y="771.0" width="20.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (136 samples, 1.68%)</title><rect x="425.9" y="755.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.9" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (127 samples, 1.57%)</title><rect x="426.1" y="739.0" width="18.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (127 samples, 1.57%)</title><rect x="426.1" y="723.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.1" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (113 samples, 1.39%)</title><rect x="426.7" y="707.0" width="16.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="429.7" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="427.4" y="691.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="430.4" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (103 samples, 1.27%)</title><rect x="427.8" y="691.0" width="15.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="430.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (84 samples, 1.04%)</title><rect x="429.0" y="675.0" width="12.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="432.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (82 samples, 1.01%)</title><rect x="429.2" y="659.0" width="11.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="432.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (78 samples, 0.96%)</title><rect x="429.4" y="643.0" width="11.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.4" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="429.4" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="432.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="429.9" y="627.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="432.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.04%)</title><rect x="430.5" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="433.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (61 samples, 0.75%)</title><rect x="431.0" y="627.0" width="8.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="434.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.04%)</title><rect x="432.6" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="435.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (46 samples, 0.57%)</title><rect x="433.1" y="611.0" width="6.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="436.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (41 samples, 0.51%)</title><rect x="433.4" y="595.0" width="5.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="436.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="433.7" y="579.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="436.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (28 samples, 0.35%)</title><rect x="434.2" y="579.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="437.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="435.7" y="563.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="438.7" y="574.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="436.4" y="563.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="439.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.12%)</title><rect x="436.9" y="563.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="439.9" y="574.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.05%)</title><rect x="437.6" y="547.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="440.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="438.3" y="579.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="441.3" y="590.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.02%)</title><rect x="439.1" y="579.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="442.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.02%)</title><rect x="439.3" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="442.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (3 samples, 0.04%)</title><rect x="440.2" y="627.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="443.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.02%)</title><rect x="440.8" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="443.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (10 samples, 0.12%)</title><rect x="441.4" y="675.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="444.4" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.06%)</title><rect x="442.0" y="659.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="445.0" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="442.3" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="445.3" y="654.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.02%)</title><rect x="442.8" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="445.8" y="702.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.06%)</title><rect x="443.1" y="707.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="446.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.02%)</title><rect x="443.9" y="707.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="446.9" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.02%)</title><rect x="444.1" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="447.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.07%)</title><rect x="444.6" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="444.9" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.05%)</title><rect x="444.9" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="444.9" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.fromBytes (2 samples, 0.02%)</title><rect x="445.5" y="739.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (5 samples, 0.06%)</title><rect x="445.7" y="755.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="446.0" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="446.2" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="446.2" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (11 samples, 0.14%)</title><rect x="446.5" y="771.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.14%)</title><rect x="446.5" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="447.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.02%)</title><rect x="447.6" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (37 samples, 0.46%)</title><rect x="448.1" y="787.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.1" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (5 samples, 0.06%)</title><rect x="451.3" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="451.7" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="451.7" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1367322467.get$Lambda (2 samples, 0.02%)</title><rect x="451.7" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.06%)</title><rect x="452.0" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.06%)</title><rect x="452.0" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.05%)</title><rect x="452.0" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.05%)</title><rect x="452.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="455.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.04%)</title><rect x="452.0" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.04%)</title><rect x="452.0" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.02%)</title><rect x="452.0" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.02%)</title><rect x="452.0" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.0" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="452.7" y="771.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="455.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (14 samples, 0.17%)</title><rect x="453.5" y="803.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (14 samples, 0.17%)</title><rect x="453.5" y="787.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.5" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (13 samples, 0.16%)</title><rect x="453.6" y="771.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (12 samples, 0.15%)</title><rect x="453.8" y="755.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.15%)</title><rect x="453.8" y="739.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.15%)</title><rect x="453.8" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="454.3" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.04%)</title><rect x="454.6" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.02%)</title><rect x="455.1" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (3 samples, 0.04%)</title><rect x="455.5" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.02%)</title><rect x="455.6" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (2 samples, 0.02%)</title><rect x="455.9" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.14%)</title><rect x="456.2" y="867.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.04%)</title><rect x="456.5" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="456.5" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="456.5" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="456.7" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="457.0" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="457.0" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.02%)</title><rect x="457.5" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="458.0" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="458.6" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="458.6" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (44 samples, 0.54%)</title><rect x="458.9" y="883.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 0.54%)</title><rect x="458.9" y="867.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.02%)</title><rect x="459.0" y="851.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="462.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="459.3" y="851.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="462.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="459.3" y="835.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="462.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.10%)</title><rect x="459.3" y="819.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="462.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="459.7" y="803.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="462.7" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="459.9" y="787.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="462.9" y="798.0"></text>
</g>
<g>
<title>__GI___recv (32 samples, 0.39%)</title><rect x="460.5" y="851.0" width="4.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="463.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="461.5" y="835.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="464.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="461.5" y="819.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="464.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="462.2" y="803.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="465.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="462.2" y="787.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="465.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="462.2" y="771.0" width="2.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="465.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="462.2" y="755.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="465.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="462.2" y="739.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="465.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="463.1" y="723.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="466.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="464.1" y="707.0" width="1.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="467.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="464.2" y="691.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="467.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="464.7" y="675.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="467.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="464.8" y="659.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="467.8" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=29991] (449 samples, 5.54%)</title><rect x="465.3" y="947.0" width="65.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="468.3" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="465.3" y="931.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="468.3" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="465.3" y="915.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="468.3" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="465.3" y="899.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="468.3" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="465.3" y="883.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="468.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="465.5" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="468.5" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="465.5" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="468.5" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="465.5" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="468.5" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="465.5" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="468.5" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (445 samples, 5.49%)</title><rect x="465.8" y="931.0" width="64.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.8" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.02%)</title><rect x="465.8" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 0.47%)</title><rect x="466.1" y="915.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (38 samples, 0.47%)</title><rect x="466.1" y="899.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.1" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="466.3" y="883.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="469.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="466.6" y="883.0" width="4.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="469.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 0.37%)</title><rect x="466.7" y="867.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="469.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="467.1" y="851.0" width="4.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="470.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="467.1" y="835.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="470.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="467.4" y="819.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="470.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="467.4" y="803.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="470.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="467.4" y="787.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="470.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="467.7" y="771.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="470.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="468.5" y="755.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="471.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="469.0" y="739.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="472.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="469.6" y="723.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="472.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="470.1" y="707.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="473.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="471.2" y="883.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="474.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (405 samples, 5.00%)</title><rect x="471.7" y="915.0" width="58.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.7" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (402 samples, 4.96%)</title><rect x="472.1" y="899.0" width="58.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.1" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (371 samples, 4.58%)</title><rect x="472.1" y="883.0" width="54.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.1" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (362 samples, 4.47%)</title><rect x="472.5" y="867.0" width="52.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.5" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (357 samples, 4.40%)</title><rect x="473.3" y="851.0" width="51.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.3" y="862.0">one/n..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (356 samples, 4.39%)</title><rect x="473.4" y="835.0" width="51.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.4" y="846.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (354 samples, 4.37%)</title><rect x="473.7" y="819.0" width="51.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.7" y="830.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (187 samples, 2.31%)</title><rect x="474.1" y="803.0" width="27.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.1" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.07%)</title><rect x="474.3" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="474.3" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="474.3" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="474.7" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="477.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="474.7" y="723.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="477.7" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="474.9" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="477.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (179 samples, 2.21%)</title><rect x="475.2" y="787.0" width="26.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.2" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.10%)</title><rect x="475.4" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="476.0" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="476.0" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="476.0" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="476.0" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (169 samples, 2.09%)</title><rect x="476.6" y="771.0" width="24.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (169 samples, 2.09%)</title><rect x="476.6" y="755.0" width="24.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (169 samples, 2.09%)</title><rect x="476.6" y="739.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.02%)</title><rect x="476.6" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (167 samples, 2.06%)</title><rect x="476.9" y="723.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.9" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.02%)</title><rect x="477.0" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="480.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="477.3" y="707.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="480.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="477.3" y="691.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="480.3" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.06%)</title><rect x="477.3" y="675.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="480.3" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.06%)</title><rect x="477.3" y="659.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="480.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="477.6" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="480.6" y="654.0"></text>
</g>
<g>
<title>__send (156 samples, 1.92%)</title><rect x="478.5" y="707.0" width="22.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="481.5" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (151 samples, 1.86%)</title><rect x="479.2" y="691.0" width="22.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="482.2" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (151 samples, 1.86%)</title><rect x="479.2" y="675.0" width="22.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="482.2" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="480.3" y="659.0" width="20.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="480.3" y="643.0" width="20.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="483.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="480.5" y="627.0" width="20.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="483.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.74%)</title><rect x="480.7" y="611.0" width="20.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="483.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.71%)</title><rect x="481.0" y="595.0" width="20.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="484.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.71%)</title><rect x="481.0" y="579.0" width="20.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="484.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="482.4" y="563.0" width="18.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="485.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.49%)</title><rect x="483.6" y="547.0" width="17.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="486.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.43%)</title><rect x="484.3" y="531.0" width="16.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="487.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.38%)</title><rect x="484.9" y="515.0" width="16.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="487.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="485.8" y="499.0" width="15.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="488.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.25%)</title><rect x="486.5" y="483.0" width="14.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="489.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="487.0" y="467.0" width="14.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="490.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="487.7" y="451.0" width="13.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="490.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="488.0" y="435.0" width="13.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="491.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.09%)</title><rect x="488.4" y="419.0" width="12.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="491.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="489.0" y="403.0" width="12.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="492.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="489.0" y="387.0" width="12.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="492.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="489.4" y="371.0" width="11.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="492.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="489.7" y="355.0" width="11.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="492.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="489.9" y="339.0" width="11.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="492.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.91%)</title><rect x="490.4" y="323.0" width="10.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="493.4" y="334.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="490.7" y="307.0" width="10.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="493.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="491.6" y="291.0" width="9.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="494.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="491.6" y="275.0" width="9.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="494.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="492.2" y="259.0" width="9.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="495.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="492.3" y="243.0" width="8.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="495.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="492.5" y="227.0" width="8.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="495.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="492.5" y="211.0" width="8.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="495.5" y="222.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.73%)</title><rect x="492.6" y="195.0" width="8.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="495.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.70%)</title><rect x="492.9" y="179.0" width="8.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="495.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.60%)</title><rect x="494.1" y="163.0" width="7.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="497.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.58%)</title><rect x="494.4" y="147.0" width="6.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="497.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.46%)</title><rect x="495.8" y="131.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="498.8" y="142.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="496.4" y="115.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="499.4" y="126.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="496.9" y="99.0" width="4.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="499.9" y="110.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="496.9" y="83.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="499.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="500.9" y="67.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="503.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="501.4" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="501.5" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="501.5" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.05%)</title><rect x="501.9" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="501.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="501.9" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="501.9" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (156 samples, 1.92%)</title><rect x="502.5" y="803.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.5" y="814.0">r..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="502.5" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="502.5" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="502.5" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="502.8" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (138 samples, 1.70%)</title><rect x="503.1" y="787.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (138 samples, 1.70%)</title><rect x="503.1" y="771.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (137 samples, 1.69%)</title><rect x="503.1" y="755.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.1" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (131 samples, 1.62%)</title><rect x="503.3" y="739.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.3" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (131 samples, 1.62%)</title><rect x="503.3" y="723.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.3" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (120 samples, 1.48%)</title><rect x="503.3" y="707.0" width="17.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="506.3" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="503.5" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="506.5" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.02%)</title><rect x="504.3" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="507.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (5 samples, 0.06%)</title><rect x="504.6" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="507.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (102 samples, 1.26%)</title><rect x="505.4" y="691.0" width="14.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="508.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (75 samples, 0.93%)</title><rect x="507.2" y="675.0" width="10.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (73 samples, 0.90%)</title><rect x="507.5" y="659.0" width="10.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="510.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (73 samples, 0.90%)</title><rect x="507.5" y="643.0" width="10.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="510.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.02%)</title><rect x="507.5" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="510.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (3 samples, 0.04%)</title><rect x="507.9" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="510.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (64 samples, 0.79%)</title><rect x="508.4" y="627.0" width="9.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="511.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="509.1" y="611.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="512.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.06%)</title><rect x="509.5" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="512.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.04%)</title><rect x="510.2" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="513.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="510.7" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="510.7" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="513.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (39 samples, 0.48%)</title><rect x="511.0" y="611.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="514.0" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (36 samples, 0.44%)</title><rect x="511.4" y="595.0" width="5.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="514.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="511.4" y="579.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="514.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (30 samples, 0.37%)</title><rect x="512.0" y="579.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="515.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.19%)</title><rect x="514.2" y="563.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="517.2" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="515.5" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="518.5" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.04%)</title><rect x="515.8" y="547.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="518.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.02%)</title><rect x="516.7" y="611.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="519.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.04%)</title><rect x="517.2" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="520.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.02%)</title><rect x="517.8" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="520.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (14 samples, 0.17%)</title><rect x="518.3" y="675.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="521.3" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.12%)</title><rect x="518.7" y="659.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="521.7" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.12%)</title><rect x="518.7" y="643.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="521.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.10%)</title><rect x="518.7" y="627.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="521.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.07%)</title><rect x="518.7" y="611.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="521.7" y="622.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.02%)</title><rect x="519.1" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="522.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="519.6" y="611.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="522.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="519.9" y="627.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="522.9" y="638.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.02%)</title><rect x="520.3" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="523.3" y="702.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="520.9" y="707.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="523.9" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="521.3" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="524.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.05%)</title><rect x="521.6" y="707.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (4 samples, 0.05%)</title><rect x="522.3" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (2 samples, 0.02%)</title><rect x="522.6" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (14 samples, 0.17%)</title><rect x="523.2" y="787.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="524.7" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.02%)</title><rect x="525.2" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="525.7" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="525.7" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.37%)</title><rect x="526.3" y="883.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 0.37%)</title><rect x="526.3" y="867.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="526.4" y="851.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="529.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="526.4" y="835.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="529.4" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.07%)</title><rect x="526.4" y="819.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="529.4" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="526.4" y="803.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="529.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="526.7" y="803.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="529.7" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="526.8" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="529.8" y="798.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.27%)</title><rect x="527.4" y="851.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="530.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="528.0" y="835.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="531.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="528.0" y="819.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="531.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="528.3" y="803.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="531.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="528.3" y="787.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="531.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="528.4" y="771.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="531.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="528.4" y="755.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="531.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="528.4" y="739.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="531.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="528.9" y="723.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="531.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="529.6" y="707.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="532.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="529.8" y="691.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="532.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="529.9" y="675.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="532.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="530.3" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="533.3" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=30015] (451 samples, 5.56%)</title><rect x="530.6" y="947.0" width="65.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="533.6" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="530.6" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="533.6" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="530.6" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="533.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="530.9" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="533.9" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="530.9" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.9" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="530.9" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="533.9" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="530.9" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.9" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="530.9" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="533.9" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.05%)</title><rect x="531.2" y="931.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="534.2" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="531.2" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="534.2" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.02%)</title><rect x="531.5" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="534.5" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.02%)</title><rect x="531.8" y="931.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="534.8" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (441 samples, 5.44%)</title><rect x="532.1" y="931.0" width="64.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.1" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (45 samples, 0.56%)</title><rect x="532.1" y="915.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.56%)</title><rect x="532.1" y="899.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.1" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.05%)</title><rect x="532.1" y="883.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="535.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.51%)</title><rect x="532.7" y="883.0" width="5.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="535.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (40 samples, 0.49%)</title><rect x="532.8" y="867.0" width="5.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="535.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="534.0" y="851.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="537.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="534.0" y="835.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="537.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="534.4" y="819.0" width="4.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="537.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="534.4" y="803.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="537.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="534.4" y="787.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="537.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="534.8" y="771.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="537.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="535.9" y="755.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="538.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="536.9" y="739.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="539.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="537.6" y="723.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="540.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="538.1" y="707.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="541.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (396 samples, 4.89%)</title><rect x="538.6" y="915.0" width="57.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.6" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (395 samples, 4.87%)</title><rect x="538.8" y="899.0" width="57.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.8" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (356 samples, 4.39%)</title><rect x="538.8" y="883.0" width="51.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.8" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (343 samples, 4.23%)</title><rect x="539.2" y="867.0" width="50.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="542.2" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (339 samples, 4.18%)</title><rect x="539.8" y="851.0" width="49.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.8" y="862.0">one/n..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (338 samples, 4.17%)</title><rect x="539.9" y="835.0" width="49.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.9" y="846.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.02%)</title><rect x="540.1" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="540.1" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="540.1" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (335 samples, 4.13%)</title><rect x="540.4" y="819.0" width="48.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.4" y="830.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.02%)</title><rect x="540.5" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="540.5" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.02%)</title><rect x="540.5" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="541.0" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="541.0" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 2.09%)</title><rect x="541.4" y="803.0" width="24.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.4" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (166 samples, 2.05%)</title><rect x="541.4" y="787.0" width="24.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.4" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.09%)</title><rect x="541.5" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.02%)</title><rect x="542.3" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="542.3" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="542.3" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="542.3" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 1.95%)</title><rect x="542.6" y="771.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (158 samples, 1.95%)</title><rect x="542.6" y="755.0" width="23.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (158 samples, 1.95%)</title><rect x="542.6" y="739.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (158 samples, 1.95%)</title><rect x="542.6" y="723.0" width="23.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.6" y="734.0">o..</text>
</g>
<g>
<title>__send (155 samples, 1.91%)</title><rect x="543.0" y="707.0" width="22.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="546.0" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="544.0" y="691.0" width="21.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="547.0" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="544.0" y="675.0" width="21.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="547.0" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.74%)</title><rect x="545.0" y="659.0" width="20.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="548.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.73%)</title><rect x="545.2" y="643.0" width="20.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="548.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.73%)</title><rect x="545.2" y="627.0" width="20.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="548.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.73%)</title><rect x="545.2" y="611.0" width="20.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="548.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 1.71%)</title><rect x="545.3" y="595.0" width="20.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="548.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.68%)</title><rect x="545.8" y="579.0" width="19.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="548.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.63%)</title><rect x="546.4" y="563.0" width="19.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="549.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.57%)</title><rect x="547.1" y="547.0" width="18.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="550.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.52%)</title><rect x="547.7" y="531.0" width="17.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="550.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.39%)</title><rect x="549.1" y="515.0" width="16.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="552.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.22%)</title><rect x="551.2" y="499.0" width="14.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="554.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.20%)</title><rect x="551.4" y="483.0" width="14.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="554.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.17%)</title><rect x="551.7" y="467.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="554.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.16%)</title><rect x="551.9" y="451.0" width="13.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="554.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="552.2" y="435.0" width="13.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="555.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="552.6" y="419.0" width="13.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="555.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="553.0" y="403.0" width="12.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="556.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="553.2" y="387.0" width="12.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="556.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="553.8" y="371.0" width="11.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="556.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="554.5" y="355.0" width="11.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="557.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.88%)</title><rect x="555.2" y="339.0" width="10.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="558.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="555.5" y="323.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="558.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.83%)</title><rect x="555.8" y="307.0" width="9.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="558.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.80%)</title><rect x="556.1" y="291.0" width="9.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="559.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="556.3" y="275.0" width="9.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="559.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="556.7" y="259.0" width="8.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="559.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="556.7" y="243.0" width="8.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="559.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="556.7" y="227.0" width="8.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="559.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="556.7" y="211.0" width="8.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="559.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="556.8" y="195.0" width="8.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="559.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.69%)</title><rect x="557.4" y="179.0" width="8.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="560.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.68%)</title><rect x="557.6" y="163.0" width="8.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="560.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.65%)</title><rect x="557.9" y="147.0" width="7.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="560.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.57%)</title><rect x="558.9" y="131.0" width="6.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="561.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.48%)</title><rect x="559.9" y="115.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="562.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="560.0" y="99.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="563.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="560.0" y="83.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="563.0" y="94.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="564.4" y="67.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="567.4" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="564.8" y="51.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="567.8" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="565.6" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="565.6" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="565.6" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.07%)</title><rect x="566.0" y="803.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="566.4" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="566.4" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="566.9" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (150 samples, 1.85%)</title><rect x="567.3" y="803.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.3" y="814.0">r..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="567.3" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="567.3" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="567.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="567.3" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="567.6" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="567.9" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="567.9" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="567.9" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (143 samples, 1.76%)</title><rect x="568.2" y="787.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (143 samples, 1.76%)</title><rect x="568.2" y="771.0" width="20.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (141 samples, 1.74%)</title><rect x="568.2" y="755.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.2" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 1.67%)</title><rect x="568.2" y="739.0" width="19.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.2" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 1.67%)</title><rect x="568.2" y="723.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.2" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (127 samples, 1.57%)</title><rect x="568.3" y="707.0" width="18.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="571.3" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="568.5" y="691.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="571.5" y="702.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.02%)</title><rect x="568.8" y="691.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="571.8" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="569.1" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="572.1" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (113 samples, 1.39%)</title><rect x="569.9" y="691.0" width="16.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="572.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="570.4" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="573.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (95 samples, 1.17%)</title><rect x="570.8" y="675.0" width="13.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (3 samples, 0.04%)</title><rect x="570.8" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="573.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (91 samples, 1.12%)</title><rect x="571.4" y="659.0" width="13.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="574.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (91 samples, 1.12%)</title><rect x="571.4" y="643.0" width="13.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="574.4" y="654.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="571.7" y="627.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="574.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.04%)</title><rect x="572.0" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="575.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (74 samples, 0.91%)</title><rect x="572.7" y="627.0" width="10.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="575.7" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="573.6" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="576.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="573.9" y="611.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="576.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.05%)</title><rect x="574.2" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="577.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.04%)</title><rect x="574.2" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="577.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.04%)</title><rect x="574.7" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="577.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="574.7" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="577.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.05%)</title><rect x="575.2" y="611.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="578.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (50 samples, 0.62%)</title><rect x="575.8" y="611.0" width="7.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="578.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (43 samples, 0.53%)</title><rect x="576.1" y="595.0" width="6.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="579.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="576.1" y="579.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="579.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (37 samples, 0.46%)</title><rect x="576.3" y="579.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="579.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="578.2" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="581.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="578.5" y="563.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="581.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.22%)</title><rect x="579.1" y="563.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="582.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="579.8" y="547.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="582.8" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.02%)</title><rect x="580.3" y="547.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="583.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="580.6" y="547.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="583.6" y="558.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="581.3" y="547.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="584.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="581.7" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="584.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 0.06%)</title><rect x="582.3" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="585.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="583.2" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="586.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 0.04%)</title><rect x="583.6" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="586.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (3 samples, 0.04%)</title><rect x="584.2" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="587.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (11 samples, 0.14%)</title><rect x="584.6" y="675.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="587.6" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="584.9" y="659.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="587.9" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.04%)</title><rect x="585.2" y="659.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="588.2" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="585.4" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="588.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="585.4" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="588.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="585.4" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="588.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="585.7" y="659.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="588.7" y="670.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.02%)</title><rect x="586.0" y="659.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="589.0" y="670.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.02%)</title><rect x="586.4" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="589.4" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="587.0" y="707.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="590.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.02%)</title><rect x="587.4" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="590.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (5 samples, 0.06%)</title><rect x="587.8" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (3 samples, 0.04%)</title><rect x="588.1" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="588.3" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="588.7" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.05%)</title><rect x="589.2" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="589.2" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="589.2" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="589.7" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="589.9" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="589.9" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="590.3" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="590.3" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 0.48%)</title><rect x="590.6" y="883.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (38 samples, 0.47%)</title><rect x="590.8" y="867.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="590.8" y="851.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="593.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="590.8" y="835.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="593.8" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="590.8" y="819.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="593.8" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.06%)</title><rect x="590.9" y="803.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.9" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="591.0" y="787.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="594.0" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="591.3" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="594.3" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="591.9" y="819.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="594.9" y="830.0"></text>
</g>
<g>
<title>__GI___recv (26 samples, 0.32%)</title><rect x="592.5" y="851.0" width="3.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="595.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="593.5" y="835.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="596.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="593.5" y="819.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="596.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="594.0" y="803.0" width="2.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="597.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="594.0" y="787.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="597.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="594.0" y="771.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="597.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="594.1" y="755.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="597.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="594.4" y="739.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="597.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="594.5" y="723.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="597.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="594.8" y="707.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="597.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.11%)</title><rect x="595.0" y="691.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="598.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="595.6" y="675.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="598.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="596.0" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="599.0" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=29964] (1,119 samples, 13.81%)</title><rect x="596.3" y="947.0" width="162.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="599.3" y="958.0">[NIO Selector #2 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="596.3" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="599.3" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="596.3" y="915.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="599.3" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="596.3" y="899.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="599.3" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="596.3" y="883.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="599.3" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.02%)</title><rect x="597.0" y="931.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="600.0" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,112 samples, 13.72%)</title><rect x="597.3" y="931.0" width="161.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.3" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (43 samples, 0.53%)</title><rect x="597.6" y="915.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (43 samples, 0.53%)</title><rect x="597.6" y="899.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="597.6" y="883.0" width="5.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="600.6" y="894.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 0.46%)</title><rect x="597.7" y="867.0" width="5.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="600.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="598.6" y="851.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="601.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="598.6" y="835.0" width="4.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="601.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="599.2" y="819.0" width="3.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="602.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="599.2" y="803.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="602.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="599.2" y="787.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="602.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="599.6" y="771.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="602.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="600.2" y="755.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="603.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="601.4" y="739.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="604.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="602.1" y="723.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="605.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="602.7" y="707.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="605.7" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="603.3" y="883.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="606.3" y="894.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.02%)</title><rect x="603.6" y="883.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="606.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,067 samples, 13.16%)</title><rect x="603.9" y="915.0" width="155.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.9" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,062 samples, 13.10%)</title><rect x="604.6" y="899.0" width="154.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.6" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,031 samples, 12.72%)</title><rect x="604.6" y="883.0" width="150.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.6" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,011 samples, 12.47%)</title><rect x="605.2" y="867.0" width="147.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.2" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="605.2" y="851.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="608.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,007 samples, 12.42%)</title><rect x="605.6" y="851.0" width="146.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.6" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (1,005 samples, 12.40%)</title><rect x="605.9" y="835.0" width="146.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.9" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (1,003 samples, 12.38%)</title><rect x="606.2" y="819.0" width="146.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.2" y="830.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (193 samples, 2.38%)</title><rect x="606.3" y="803.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.3" y="814.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="606.5" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="606.5" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="606.5" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (187 samples, 2.31%)</title><rect x="606.9" y="787.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.9" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="606.9" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.02%)</title><rect x="607.2" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="607.2" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="607.2" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="607.2" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (183 samples, 2.26%)</title><rect x="607.5" y="771.0" width="26.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (183 samples, 2.26%)</title><rect x="607.5" y="755.0" width="26.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (181 samples, 2.23%)</title><rect x="607.8" y="739.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.8" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (181 samples, 2.23%)</title><rect x="607.8" y="723.0" width="26.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.8" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="607.9" y="707.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="610.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="607.9" y="691.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="610.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="607.9" y="675.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.9" y="686.0"></text>
</g>
<g>
<title>__send (176 samples, 2.17%)</title><rect x="608.5" y="707.0" width="25.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="611.5" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (167 samples, 2.06%)</title><rect x="609.8" y="691.0" width="24.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="612.8" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (167 samples, 2.06%)</title><rect x="609.8" y="675.0" width="24.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="612.8" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="610.3" y="659.0" width="23.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="613.3" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="610.3" y="643.0" width="23.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="613.3" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="610.3" y="627.0" width="23.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="613.3" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (163 samples, 2.01%)</title><rect x="610.4" y="611.0" width="23.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="613.4" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.00%)</title><rect x="610.6" y="595.0" width="23.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="613.6" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.00%)</title><rect x="610.6" y="579.0" width="23.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="613.6" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (154 samples, 1.90%)</title><rect x="611.7" y="563.0" width="22.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="614.7" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.85%)</title><rect x="612.3" y="547.0" width="21.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="615.3" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.79%)</title><rect x="613.0" y="531.0" width="21.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="616.0" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (131 samples, 1.62%)</title><rect x="615.1" y="515.0" width="19.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="618.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 1.42%)</title><rect x="617.4" y="499.0" width="16.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="620.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.37%)</title><rect x="618.0" y="483.0" width="16.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="621.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.33%)</title><rect x="618.4" y="467.0" width="15.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="621.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="618.7" y="451.0" width="15.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="619.1" y="435.0" width="15.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="622.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="619.1" y="419.0" width="15.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="622.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.23%)</title><rect x="619.6" y="403.0" width="14.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="622.6" y="414.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.23%)</title><rect x="619.6" y="387.0" width="14.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="622.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="619.9" y="371.0" width="14.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="622.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="620.6" y="355.0" width="13.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="623.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="620.6" y="339.0" width="13.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="623.6" y="350.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.11%)</title><rect x="621.0" y="323.0" width="13.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="624.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.09%)</title><rect x="621.3" y="307.0" width="12.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="624.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="621.9" y="291.0" width="12.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="624.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="622.2" y="275.0" width="11.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="625.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="622.8" y="259.0" width="11.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="625.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.95%)</title><rect x="622.9" y="243.0" width="11.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="625.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.93%)</title><rect x="623.2" y="227.0" width="10.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="626.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.91%)</title><rect x="623.4" y="211.0" width="10.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="626.4" y="222.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="623.5" y="195.0" width="10.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="626.5" y="206.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.88%)</title><rect x="623.8" y="179.0" width="10.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="626.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.84%)</title><rect x="624.2" y="163.0" width="9.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="627.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.78%)</title><rect x="625.0" y="147.0" width="9.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="628.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.69%)</title><rect x="626.0" y="131.0" width="8.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="629.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.56%)</title><rect x="627.6" y="115.0" width="6.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="630.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.51%)</title><rect x="628.2" y="99.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="631.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.48%)</title><rect x="628.5" y="83.0" width="5.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="631.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="633.8" y="67.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="636.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="634.1" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="634.4" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.10%)</title><rect x="634.7" y="803.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="635.0" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="635.0" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="635.0" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="635.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (782 samples, 9.65%)</title><rect x="635.9" y="803.0" width="113.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.9" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.15%)</title><rect x="636.0" y="787.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.15%)</title><rect x="636.0" y="771.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (12 samples, 0.15%)</title><rect x="636.0" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (593 samples, 7.32%)</title><rect x="637.8" y="787.0" width="86.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.8" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (6 samples, 0.07%)</title><rect x="637.8" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.02%)</title><rect x="638.4" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="638.4" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="638.4" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="638.4" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (587 samples, 7.24%)</title><rect x="638.7" y="771.0" width="85.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.7" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (587 samples, 7.24%)</title><rect x="638.7" y="755.0" width="85.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.7" y="766.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (115 samples, 1.42%)</title><rect x="638.7" y="739.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (115 samples, 1.42%)</title><rect x="638.7" y="723.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="639.2" y="707.0" width="3.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="642.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="639.2" y="691.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="642.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.27%)</title><rect x="639.2" y="675.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="642.2" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="639.4" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="642.4" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="639.8" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="642.8" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="640.3" y="659.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="643.3" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.10%)</title><rect x="640.8" y="659.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="643.8" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="641.4" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="644.4" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="641.7" y="643.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="644.7" y="654.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.02%)</title><rect x="642.0" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="645.0" y="670.0"></text>
</g>
<g>
<title>__GI___recv (87 samples, 1.07%)</title><rect x="642.6" y="707.0" width="12.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="645.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="645.1" y="691.0" width="10.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="648.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="645.1" y="675.0" width="10.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="648.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="646.4" y="659.0" width="8.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="649.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="646.5" y="643.0" width="8.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="649.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.73%)</title><rect x="646.7" y="627.0" width="8.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="649.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.70%)</title><rect x="647.0" y="611.0" width="8.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="650.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.68%)</title><rect x="647.2" y="595.0" width="8.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="650.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.57%)</title><rect x="648.6" y="579.0" width="6.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="651.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="650.7" y="563.0" width="4.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="653.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="651.6" y="547.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="654.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="652.6" y="531.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="655.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="654.2" y="515.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="657.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="655.0" y="499.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="658.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (31 samples, 0.38%)</title><rect x="655.4" y="739.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="655.7" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="655.7" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="656.0" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="656.0" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="656.1" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (13 samples, 0.16%)</title><rect x="656.6" y="723.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="656.9" y="707.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.12%)</title><rect x="657.0" y="691.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="658.5" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="659.0" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="659.2" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="659.2" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.02%)</title><rect x="659.6" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="659.6" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (22 samples, 0.27%)</title><rect x="659.9" y="739.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.20%)</title><rect x="660.8" y="723.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.02%)</title><rect x="661.1" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.15%)</title><rect x="661.4" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.15%)</title><rect x="661.4" y="691.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.09%)</title><rect x="662.1" y="675.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.02%)</title><rect x="663.1" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (64 samples, 0.79%)</title><rect x="663.4" y="739.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.02%)</title><rect x="663.5" y="723.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (61 samples, 0.75%)</title><rect x="663.8" y="723.0" width="8.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="666.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.53%)</title><rect x="666.5" y="707.0" width="6.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="669.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.53%)</title><rect x="666.5" y="691.0" width="6.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="669.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="668.1" y="675.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="671.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="668.2" y="659.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="671.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="668.5" y="643.0" width="4.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="671.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="670.1" y="627.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="673.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="671.6" y="611.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="674.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="672.4" y="595.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="675.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (353 samples, 4.36%)</title><rect x="672.7" y="739.0" width="51.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.7" y="750.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (11 samples, 0.14%)</title><rect x="673.7" y="723.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="676.7" y="734.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="674.5" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="677.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="675.1" y="707.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="678.1" y="718.0"></text>
</g>
<g>
<title>__send (332 samples, 4.10%)</title><rect x="675.6" y="723.0" width="48.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="678.6" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (314 samples, 3.87%)</title><rect x="678.3" y="707.0" width="45.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.3" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (314 samples, 3.87%)</title><rect x="678.3" y="691.0" width="45.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="681.3" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (302 samples, 3.73%)</title><rect x="680.0" y="675.0" width="44.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="683.0" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (301 samples, 3.71%)</title><rect x="680.1" y="659.0" width="43.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="683.1" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (301 samples, 3.71%)</title><rect x="680.1" y="643.0" width="43.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="683.1" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (298 samples, 3.68%)</title><rect x="680.6" y="627.0" width="43.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="683.6" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (296 samples, 3.65%)</title><rect x="680.9" y="611.0" width="43.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="683.9" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (295 samples, 3.64%)</title><rect x="681.0" y="595.0" width="43.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="684.0" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (284 samples, 3.50%)</title><rect x="682.6" y="579.0" width="41.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="685.6" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (269 samples, 3.32%)</title><rect x="684.8" y="563.0" width="39.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="687.8" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (256 samples, 3.16%)</title><rect x="686.7" y="547.0" width="37.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="689.7" y="558.0">[un..</text>
</g>
<g>
<title>[unknown] (243 samples, 3.00%)</title><rect x="688.6" y="531.0" width="35.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="691.6" y="542.0">[un..</text>
</g>
<g>
<title>[unknown] (225 samples, 2.78%)</title><rect x="691.2" y="515.0" width="32.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="694.2" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.68%)</title><rect x="692.4" y="499.0" width="31.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="695.4" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (209 samples, 2.58%)</title><rect x="693.5" y="483.0" width="30.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="696.5" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.55%)</title><rect x="693.8" y="467.0" width="30.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="696.8" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (206 samples, 2.54%)</title><rect x="694.0" y="451.0" width="30.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="697.0" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (201 samples, 2.48%)</title><rect x="694.7" y="435.0" width="29.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="697.7" y="446.0">[u..</text>
</g>
<g>
<title>[unknown] (194 samples, 2.39%)</title><rect x="695.7" y="419.0" width="28.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="698.7" y="430.0">[u..</text>
</g>
<g>
<title>[unknown] (193 samples, 2.38%)</title><rect x="695.9" y="403.0" width="28.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="698.9" y="414.0">[u..</text>
</g>
<g>
<title>[unknown] (184 samples, 2.27%)</title><rect x="697.2" y="387.0" width="26.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="700.2" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.21%)</title><rect x="697.9" y="371.0" width="26.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="700.9" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (170 samples, 2.10%)</title><rect x="699.2" y="355.0" width="24.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="702.2" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (165 samples, 2.04%)</title><rect x="699.9" y="339.0" width="24.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="702.9" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (159 samples, 1.96%)</title><rect x="700.8" y="323.0" width="23.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="703.8" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.94%)</title><rect x="701.1" y="307.0" width="22.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="704.1" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.94%)</title><rect x="701.1" y="291.0" width="22.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="704.1" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="702.4" y="275.0" width="21.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="705.4" y="286.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.76%)</title><rect x="703.1" y="259.0" width="20.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="706.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="703.3" y="243.0" width="20.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="706.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="703.3" y="227.0" width="20.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="706.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.74%)</title><rect x="703.4" y="211.0" width="20.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="706.4" y="222.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.65%)</title><rect x="704.5" y="195.0" width="19.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="707.5" y="206.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.62%)</title><rect x="704.9" y="179.0" width="19.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="707.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 1.57%)</title><rect x="705.5" y="163.0" width="18.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="708.5" y="174.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.34%)</title><rect x="708.1" y="147.0" width="15.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="711.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.22%)</title><rect x="709.6" y="131.0" width="14.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="710.4" y="115.0" width="13.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="713.4" y="126.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="710.6" y="99.0" width="13.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="713.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="723.5" y="83.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="726.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="723.7" y="67.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="726.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="724.1" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (145 samples, 1.79%)</title><rect x="724.4" y="787.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.4" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (135 samples, 1.67%)</title><rect x="724.4" y="771.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (127 samples, 1.57%)</title><rect x="724.4" y="755.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.4" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (119 samples, 1.47%)</title><rect x="724.4" y="739.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.4" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (119 samples, 1.47%)</title><rect x="724.4" y="723.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.4" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (113 samples, 1.39%)</title><rect x="724.4" y="707.0" width="16.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="727.4" y="718.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.06%)</title><rect x="724.8" y="691.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="727.8" y="702.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="725.6" y="691.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="728.6" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.02%)</title><rect x="726.3" y="691.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="729.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.02%)</title><rect x="726.9" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="729.9" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (92 samples, 1.14%)</title><rect x="727.3" y="691.0" width="13.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="730.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="727.5" y="675.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="730.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (72 samples, 0.89%)</title><rect x="727.9" y="675.0" width="10.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="730.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (3 samples, 0.04%)</title><rect x="727.9" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="730.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (67 samples, 0.83%)</title><rect x="728.5" y="659.0" width="9.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="731.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (66 samples, 0.81%)</title><rect x="728.6" y="643.0" width="9.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.02%)</title><rect x="728.8" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="731.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (60 samples, 0.74%)</title><rect x="729.1" y="627.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="729.1" y="611.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.05%)</title><rect x="729.6" y="611.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.04%)</title><rect x="730.2" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="733.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.05%)</title><rect x="730.7" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="733.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="730.8" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="733.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (38 samples, 0.47%)</title><rect x="731.4" y="611.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="734.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (35 samples, 0.43%)</title><rect x="731.5" y="595.0" width="5.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="734.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="731.5" y="579.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="734.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (28 samples, 0.35%)</title><rect x="731.8" y="579.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="734.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (12 samples, 0.15%)</title><rect x="734.2" y="563.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.2" y="574.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.05%)</title><rect x="734.9" y="547.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="737.9" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="735.6" y="547.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="738.6" y="558.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.02%)</title><rect x="736.3" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="739.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.02%)</title><rect x="737.1" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="740.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.04%)</title><rect x="737.4" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="740.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (16 samples, 0.20%)</title><rect x="738.4" y="675.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="741.4" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (15 samples, 0.19%)</title><rect x="738.4" y="659.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="741.4" y="670.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.02%)</title><rect x="738.7" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="741.7" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.14%)</title><rect x="739.0" y="643.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="742.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="739.3" y="627.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="742.3" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.07%)</title><rect x="739.3" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="742.3" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="739.3" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="742.3" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.02%)</title><rect x="739.7" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="742.7" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="740.3" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.3" y="638.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="740.9" y="707.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.02%)</title><rect x="741.3" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="744.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.07%)</title><rect x="741.7" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="742.0" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.05%)</title><rect x="742.0" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="742.2" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.04%)</title><rect x="742.2" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.fromBytes (2 samples, 0.02%)</title><rect x="742.6" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (8 samples, 0.10%)</title><rect x="742.9" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="742.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="742.9" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.06%)</title><rect x="743.2" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="743.3" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.3" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="743.6" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (10 samples, 0.12%)</title><rect x="744.1" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.12%)</title><rect x="744.1" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="744.8" y="739.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="747.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.02%)</title><rect x="745.2" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (29 samples, 0.36%)</title><rect x="745.5" y="787.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.5" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (2 samples, 0.02%)</title><rect x="747.3" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="747.3" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="747.3" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.3" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/1367322467.get$Lambda (2 samples, 0.02%)</title><rect x="747.3" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.06%)</title><rect x="747.7" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.05%)</title><rect x="747.8" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.04%)</title><rect x="747.8" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.02%)</title><rect x="748.0" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="748.0" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.02%)</title><rect x="748.0" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (2 samples, 0.02%)</title><rect x="748.7" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 0.02%)</title><rect x="749.3" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (15 samples, 0.19%)</title><rect x="749.7" y="803.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15 samples, 0.19%)</title><rect x="749.7" y="787.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (13 samples, 0.16%)</title><rect x="750.0" y="771.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (13 samples, 0.16%)</title><rect x="750.0" y="755.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (13 samples, 0.16%)</title><rect x="750.0" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.15%)</title><rect x="750.2" y="723.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (2 samples, 0.02%)</title><rect x="750.8" y="707.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.05%)</title><rect x="751.0" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.0" y="718.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="751.6" y="707.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="754.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (2 samples, 0.02%)</title><rect x="751.9" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.11%)</title><rect x="752.4" y="867.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="752.5" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="752.5" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.05%)</title><rect x="753.1" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.06%)</title><rect x="753.7" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="754.4" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="754.4" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 0.38%)</title><rect x="754.7" y="883.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 0.37%)</title><rect x="754.8" y="867.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="755.0" y="851.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="758.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="755.0" y="835.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="758.0" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="755.0" y="819.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="758.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="755.1" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.1" y="814.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="755.4" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="758.4" y="814.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.27%)</title><rect x="756.0" y="851.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="759.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="756.3" y="835.0" width="2.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="759.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="756.3" y="819.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="759.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="757.0" y="803.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="760.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="757.2" y="787.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="760.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="757.3" y="771.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="760.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="757.5" y="755.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="760.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="757.6" y="739.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="760.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="758.2" y="723.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="761.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="758.2" y="707.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="761.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="758.5" y="691.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="761.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="758.8" y="675.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="761.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="758.9" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="761.9" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=29992] (456 samples, 5.63%)</title><rect x="759.2" y="947.0" width="66.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="762.2" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="759.8" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="762.8" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="759.8" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="762.8" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="759.8" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="762.8" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="759.8" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="762.8" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.04%)</title><rect x="760.1" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.1" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.02%)</title><rect x="760.2" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="763.2" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="760.5" y="931.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="763.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="760.7" y="915.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.7" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="760.7" y="899.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="763.7" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (444 samples, 5.48%)</title><rect x="760.9" y="931.0" width="64.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.9" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 0.62%)</title><rect x="761.2" y="915.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 0.57%)</title><rect x="761.8" y="899.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.52%)</title><rect x="762.4" y="883.0" width="6.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="765.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 0.52%)</title><rect x="762.4" y="867.0" width="6.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="765.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="763.0" y="851.0" width="5.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="766.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="763.0" y="835.0" width="5.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="766.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.43%)</title><rect x="763.4" y="819.0" width="5.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="766.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.43%)</title><rect x="763.4" y="803.0" width="5.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="766.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="763.6" y="787.0" width="4.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="766.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="764.2" y="771.0" width="4.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="767.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="765.5" y="755.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="768.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="767.1" y="739.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="770.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="767.8" y="723.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="770.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="768.2" y="707.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="771.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (392 samples, 4.84%)</title><rect x="768.5" y="915.0" width="57.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.5" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (391 samples, 4.82%)</title><rect x="768.7" y="899.0" width="56.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.7" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (347 samples, 4.28%)</title><rect x="768.7" y="883.0" width="50.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (337 samples, 4.16%)</title><rect x="768.8" y="867.0" width="49.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.8" y="878.0">one/n..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="768.8" y="851.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="771.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (332 samples, 4.10%)</title><rect x="769.2" y="851.0" width="48.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.2" y="862.0">one/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (330 samples, 4.07%)</title><rect x="769.5" y="835.0" width="48.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.5" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (327 samples, 4.03%)</title><rect x="770.0" y="819.0" width="47.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.0" y="830.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (183 samples, 2.26%)</title><rect x="770.1" y="803.0" width="26.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.1" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="770.1" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="770.1" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="770.1" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="770.4" y="739.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="773.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (176 samples, 2.17%)</title><rect x="770.7" y="787.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="770.8" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="770.8" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="770.8" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="770.8" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="770.8" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 2.11%)</title><rect x="771.4" y="771.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.4" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 2.11%)</title><rect x="771.4" y="755.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.4" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (169 samples, 2.09%)</title><rect x="771.7" y="739.0" width="24.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.7" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (168 samples, 2.07%)</title><rect x="771.9" y="723.0" width="24.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.9" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="771.9" y="707.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="774.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="771.9" y="691.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="774.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="771.9" y="675.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="774.9" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="772.5" y="707.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="775.5" y="718.0"></text>
</g>
<g>
<title>__send (162 samples, 2.00%)</title><rect x="772.7" y="707.0" width="23.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="775.7" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="774.8" y="691.0" width="21.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="777.8" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="774.8" y="675.0" width="21.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="777.8" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="775.4" y="659.0" width="20.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="778.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (143 samples, 1.76%)</title><rect x="775.5" y="643.0" width="20.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="778.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (141 samples, 1.74%)</title><rect x="775.8" y="627.0" width="20.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="778.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.73%)</title><rect x="775.9" y="611.0" width="20.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="778.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.70%)</title><rect x="776.2" y="595.0" width="20.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="779.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.69%)</title><rect x="776.4" y="579.0" width="19.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="779.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.64%)</title><rect x="777.0" y="563.0" width="19.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="780.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 1.55%)</title><rect x="778.0" y="547.0" width="18.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="781.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.51%)</title><rect x="778.6" y="531.0" width="17.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="781.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.41%)</title><rect x="779.7" y="515.0" width="16.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="782.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="781.3" y="499.0" width="15.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="784.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.23%)</title><rect x="781.8" y="483.0" width="14.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="784.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.22%)</title><rect x="781.9" y="467.0" width="14.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="784.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="782.1" y="451.0" width="14.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="785.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.20%)</title><rect x="782.2" y="435.0" width="14.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="785.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="782.8" y="419.0" width="13.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="785.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="783.4" y="403.0" width="12.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="786.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="783.4" y="387.0" width="12.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="786.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="784.0" y="371.0" width="12.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="787.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.99%)</title><rect x="784.7" y="355.0" width="11.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="787.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="785.3" y="339.0" width="11.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="788.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.91%)</title><rect x="785.6" y="323.0" width="10.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="788.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="785.7" y="307.0" width="10.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="788.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="785.7" y="291.0" width="10.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="788.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="786.1" y="275.0" width="10.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="789.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.83%)</title><rect x="786.6" y="259.0" width="9.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="789.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="786.7" y="243.0" width="9.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="789.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="787.0" y="227.0" width="9.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="790.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="787.0" y="211.0" width="9.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="790.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="787.3" y="195.0" width="9.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="790.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="787.6" y="179.0" width="8.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="790.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.69%)</title><rect x="788.2" y="163.0" width="8.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="791.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.67%)</title><rect x="788.5" y="147.0" width="7.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="791.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.54%)</title><rect x="789.9" y="131.0" width="6.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="792.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="790.8" y="115.0" width="5.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="793.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="791.5" y="99.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="794.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="791.8" y="83.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="794.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="796.3" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="796.3" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="796.3" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="796.8" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="796.8" y="787.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="796.8" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.02%)</title><rect x="797.2" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (137 samples, 1.69%)</title><rect x="797.5" y="803.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="797.6" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="797.6" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="797.6" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="797.6" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="797.9" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (118 samples, 1.46%)</title><rect x="798.5" y="787.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (117 samples, 1.44%)</title><rect x="798.5" y="771.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (116 samples, 1.43%)</title><rect x="798.5" y="755.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.5" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (112 samples, 1.38%)</title><rect x="798.5" y="739.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.5" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (112 samples, 1.38%)</title><rect x="798.5" y="723.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.5" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (103 samples, 1.27%)</title><rect x="798.8" y="707.0" width="15.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="801.8" y="718.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.02%)</title><rect x="799.2" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="802.2" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="799.5" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="802.5" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.02%)</title><rect x="800.0" y="691.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="803.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.02%)</title><rect x="800.5" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="803.5" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (88 samples, 1.09%)</title><rect x="800.8" y="691.0" width="12.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="803.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="801.0" y="675.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (72 samples, 0.89%)</title><rect x="801.4" y="675.0" width="10.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="804.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (72 samples, 0.89%)</title><rect x="801.4" y="659.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="804.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (70 samples, 0.86%)</title><rect x="801.6" y="643.0" width="10.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="804.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.04%)</title><rect x="802.0" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="805.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (60 samples, 0.74%)</title><rect x="802.6" y="627.0" width="8.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="805.6" y="638.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.02%)</title><rect x="803.2" y="611.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="806.2" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="803.5" y="611.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="806.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.07%)</title><rect x="804.2" y="611.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="807.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.02%)</title><rect x="804.3" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="807.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="805.1" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="808.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="805.4" y="611.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="808.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="805.4" y="595.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="808.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (38 samples, 0.47%)</title><rect x="805.8" y="611.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="808.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (35 samples, 0.43%)</title><rect x="805.9" y="595.0" width="5.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="808.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="806.2" y="579.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="809.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (27 samples, 0.33%)</title><rect x="806.8" y="579.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="809.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (16 samples, 0.20%)</title><rect x="808.4" y="563.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="811.4" y="574.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (7 samples, 0.09%)</title><rect x="809.1" y="547.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="812.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="810.2" y="547.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="813.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (11 samples, 0.14%)</title><rect x="811.9" y="675.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="814.9" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.10%)</title><rect x="812.1" y="659.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="815.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="812.1" y="643.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="815.1" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.06%)</title><rect x="812.5" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="815.5" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="812.6" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="815.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="812.6" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="815.6" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.02%)</title><rect x="812.6" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="815.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="813.2" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="816.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="813.8" y="707.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="816.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="813.8" y="691.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="816.8" y="702.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.02%)</title><rect x="814.2" y="707.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="817.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (3 samples, 0.04%)</title><rect x="814.8" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (3 samples, 0.04%)</title><rect x="814.8" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="814.8" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (12 samples, 0.15%)</title><rect x="815.7" y="787.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="817.1" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (2 samples, 0.02%)</title><rect x="817.6" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.07%)</title><rect x="817.9" y="867.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="818.2" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="818.2" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="818.9" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="818.9" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (44 samples, 0.54%)</title><rect x="819.2" y="883.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 0.54%)</title><rect x="819.2" y="867.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="819.3" y="851.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="822.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="819.3" y="835.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="822.3" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.06%)</title><rect x="819.3" y="819.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="822.3" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="819.3" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="822.3" y="814.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="819.6" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="822.6" y="814.0"></text>
</g>
<g>
<title>__GI___recv (38 samples, 0.47%)</title><rect x="820.1" y="851.0" width="5.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="823.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="821.5" y="835.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="824.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="821.5" y="819.0" width="4.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="824.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="821.8" y="803.0" width="3.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="824.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="821.8" y="787.0" width="3.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="824.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="822.1" y="771.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="825.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="822.2" y="755.0" width="3.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="825.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="822.5" y="739.0" width="3.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="825.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="823.3" y="723.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="826.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="824.0" y="707.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="827.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="824.4" y="691.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="827.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="825.2" y="675.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="828.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="825.3" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="828.3" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=30016] (456 samples, 5.63%)</title><rect x="825.6" y="947.0" width="66.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="828.6" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="825.6" y="931.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="828.6" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="825.6" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="828.6" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="825.6" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="828.6" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="825.6" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.6" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.02%)</title><rect x="825.9" y="931.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="828.9" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.02%)</title><rect x="826.2" y="931.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="829.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="826.2" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="829.2" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="826.2" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="829.2" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (450 samples, 5.55%)</title><rect x="826.5" y="931.0" width="65.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.5" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (53 samples, 0.65%)</title><rect x="826.8" y="915.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 0.62%)</title><rect x="827.2" y="899.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.58%)</title><rect x="827.5" y="883.0" width="6.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="830.5" y="894.0"></text>
</g>
<g>
<title>epoll_wait (46 samples, 0.57%)</title><rect x="827.6" y="867.0" width="6.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="830.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="829.5" y="851.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="832.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="829.5" y="835.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="832.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="829.8" y="819.0" width="4.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="832.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="829.8" y="803.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="832.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.37%)</title><rect x="830.0" y="787.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="833.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="830.5" y="771.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="833.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="831.6" y="755.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="834.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="832.4" y="739.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="835.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="832.9" y="723.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="835.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="833.5" y="707.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="836.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (395 samples, 4.87%)</title><rect x="834.5" y="915.0" width="57.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.5" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (395 samples, 4.87%)</title><rect x="834.5" y="899.0" width="57.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.5" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (355 samples, 4.38%)</title><rect x="834.5" y="883.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.5" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (338 samples, 4.17%)</title><rect x="835.1" y="867.0" width="49.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.1" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (335 samples, 4.13%)</title><rect x="835.3" y="851.0" width="48.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.3" y="862.0">one/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (334 samples, 4.12%)</title><rect x="835.5" y="835.0" width="48.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.5" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (332 samples, 4.10%)</title><rect x="835.8" y="819.0" width="48.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.8" y="830.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.02%)</title><rect x="835.9" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.02%)</title><rect x="835.9" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 2.22%)</title><rect x="836.2" y="803.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (174 samples, 2.15%)</title><rect x="836.8" y="787.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.8" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="836.8" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (170 samples, 2.10%)</title><rect x="837.4" y="771.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.4" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (170 samples, 2.10%)</title><rect x="837.4" y="755.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.4" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 2.10%)</title><rect x="837.4" y="739.0" width="24.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.4" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (168 samples, 2.07%)</title><rect x="837.7" y="723.0" width="24.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.7" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="838.1" y="707.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="841.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="838.7" y="707.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="841.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="838.7" y="691.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="841.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="838.7" y="675.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="841.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="838.8" y="659.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="841.8" y="670.0"></text>
</g>
<g>
<title>__send (3 samples, 0.04%)</title><rect x="839.4" y="675.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="842.4" y="686.0"></text>
</g>
<g>
<title>__send (153 samples, 1.89%)</title><rect x="839.9" y="707.0" width="22.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="842.9" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="841.5" y="691.0" width="20.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="844.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="841.5" y="675.0" width="20.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="844.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 1.69%)</title><rect x="842.2" y="659.0" width="19.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="845.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (136 samples, 1.68%)</title><rect x="842.3" y="643.0" width="19.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="845.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (134 samples, 1.65%)</title><rect x="842.6" y="627.0" width="19.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="845.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.64%)</title><rect x="842.8" y="611.0" width="19.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="845.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (133 samples, 1.64%)</title><rect x="842.8" y="595.0" width="19.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="845.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 1.63%)</title><rect x="842.9" y="579.0" width="19.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="845.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.52%)</title><rect x="844.2" y="563.0" width="17.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="847.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 1.44%)</title><rect x="845.1" y="547.0" width="17.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="848.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 1.38%)</title><rect x="845.8" y="531.0" width="16.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="848.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="846.7" y="515.0" width="15.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="849.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.15%)</title><rect x="848.6" y="499.0" width="13.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="851.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="848.9" y="483.0" width="13.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="851.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="849.5" y="467.0" width="12.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="852.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="849.8" y="451.0" width="12.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="852.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="849.8" y="435.0" width="12.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="852.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.02%)</title><rect x="850.0" y="419.0" width="12.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="853.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="850.3" y="403.0" width="11.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="853.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="850.3" y="387.0" width="11.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="853.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 0.97%)</title><rect x="850.6" y="371.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="853.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.95%)</title><rect x="850.9" y="355.0" width="11.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="853.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.91%)</title><rect x="851.4" y="339.0" width="10.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="854.4" y="350.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="851.9" y="323.0" width="10.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="854.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="852.1" y="307.0" width="10.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="855.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="852.5" y="291.0" width="9.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="855.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="852.5" y="275.0" width="9.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="855.5" y="286.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="852.8" y="259.0" width="9.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="855.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="853.1" y="243.0" width="9.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="856.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="853.3" y="227.0" width="8.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="856.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="853.3" y="211.0" width="8.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="856.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="853.3" y="195.0" width="8.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="856.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.70%)</title><rect x="853.8" y="179.0" width="8.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="856.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.64%)</title><rect x="854.6" y="163.0" width="7.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="857.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.62%)</title><rect x="854.9" y="147.0" width="7.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="857.9" y="158.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.48%)</title><rect x="856.5" y="131.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="859.5" y="142.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="857.6" y="115.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="860.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="858.3" y="99.0" width="3.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="861.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="858.3" y="83.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="861.3" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="861.8" y="67.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="864.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="862.1" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="862.4" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="862.7" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="862.7" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.7" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="862.7" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="863.0" y="803.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="864.0" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (136 samples, 1.68%)</title><rect x="864.3" y="803.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="864.5" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="864.5" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="864.5" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="864.5" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (121 samples, 1.49%)</title><rect x="864.9" y="787.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (120 samples, 1.48%)</title><rect x="864.9" y="771.0" width="17.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (120 samples, 1.48%)</title><rect x="864.9" y="755.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.9" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (111 samples, 1.37%)</title><rect x="864.9" y="739.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (111 samples, 1.37%)</title><rect x="864.9" y="723.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.9" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (95 samples, 1.17%)</title><rect x="865.2" y="707.0" width="13.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="868.2" y="718.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.02%)</title><rect x="865.5" y="691.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="865.8" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="868.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.02%)</title><rect x="866.2" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.2" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (85 samples, 1.05%)</title><rect x="866.5" y="691.0" width="12.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="869.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.02%)</title><rect x="866.8" y="675.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="869.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="866.8" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.02%)</title><rect x="867.2" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="870.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (65 samples, 0.80%)</title><rect x="867.5" y="675.0" width="9.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="870.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (62 samples, 0.76%)</title><rect x="867.7" y="659.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="870.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (61 samples, 0.75%)</title><rect x="867.8" y="643.0" width="8.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="870.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.06%)</title><rect x="868.0" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="871.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (3 samples, 0.04%)</title><rect x="868.8" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (47 samples, 0.58%)</title><rect x="869.3" y="627.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="872.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="869.7" y="611.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="872.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.04%)</title><rect x="870.3" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="873.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="870.9" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="873.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (30 samples, 0.37%)</title><rect x="871.3" y="611.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (29 samples, 0.36%)</title><rect x="871.5" y="595.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="874.5" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="871.6" y="579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="874.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (19 samples, 0.23%)</title><rect x="871.9" y="579.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="874.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.07%)</title><rect x="873.8" y="563.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="876.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="874.2" y="547.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="877.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.05%)</title><rect x="874.7" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="877.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.02%)</title><rect x="876.7" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (12 samples, 0.15%)</title><rect x="877.1" y="675.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="880.1" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.14%)</title><rect x="877.1" y="659.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="880.1" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.10%)</title><rect x="877.6" y="643.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="880.6" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.10%)</title><rect x="877.6" y="627.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="880.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="877.9" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="880.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="879.0" y="707.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="882.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="879.0" y="691.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="882.0" y="702.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.02%)</title><rect x="879.3" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="882.3" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 0.07%)</title><rect x="880.0" y="707.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="883.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (5 samples, 0.06%)</title><rect x="881.1" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (3 samples, 0.04%)</title><rect x="881.4" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.04%)</title><rect x="881.4" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.fromBytes (4 samples, 0.05%)</title><rect x="881.8" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="881.8" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="881.8" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="881.8" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="881.8" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.8" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="881.8" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="881.8" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="881.9" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (11 samples, 0.14%)</title><rect x="882.5" y="787.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.5" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="883.5" y="771.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="886.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.06%)</title><rect x="884.3" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.02%)</title><rect x="884.3" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="884.3" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="884.3" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="884.3" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.02%)</title><rect x="884.7" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="885.1" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="885.7" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="885.7" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 0.48%)</title><rect x="886.3" y="883.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 0.48%)</title><rect x="886.3" y="867.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="886.4" y="851.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="889.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="886.4" y="835.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="889.4" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.07%)</title><rect x="886.4" y="819.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="886.7" y="803.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="889.7" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.02%)</title><rect x="887.0" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="890.0" y="814.0"></text>
</g>
<g>
<title>__GI___recv (31 samples, 0.38%)</title><rect x="887.3" y="851.0" width="4.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="890.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="887.8" y="835.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="890.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="887.8" y="819.0" width="4.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="890.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="888.0" y="803.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="891.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="888.0" y="787.0" width="3.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="891.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="888.2" y="771.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="891.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="888.3" y="755.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="891.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="888.8" y="739.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="891.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="889.5" y="723.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="892.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="890.2" y="707.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="893.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="891.0" y="691.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="894.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="891.0" y="675.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="894.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="891.3" y="659.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="894.3" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=29965] (1,118 samples, 13.79%)</title><rect x="892.0" y="947.0" width="162.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="895.0" y="958.0">[NIO Selector #3 tid=..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="892.0" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="895.0" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="892.0" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="895.0" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="892.0" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="895.0" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="892.0" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.0" y="894.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.02%)</title><rect x="892.0" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="895.0" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="892.4" y="931.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="895.4" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,111 samples, 13.71%)</title><rect x="893.0" y="931.0" width="161.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.0" y="942.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 0.58%)</title><rect x="893.3" y="915.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.56%)</title><rect x="893.6" y="899.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="893.9" y="883.0" width="5.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="896.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (40 samples, 0.49%)</title><rect x="893.9" y="867.0" width="5.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="896.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="894.9" y="851.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="897.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="894.9" y="835.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="897.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="895.5" y="819.0" width="4.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="898.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="895.5" y="803.0" width="4.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="898.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.33%)</title><rect x="895.8" y="787.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="898.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.27%)</title><rect x="896.5" y="771.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="899.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="896.9" y="755.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="899.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="897.7" y="739.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="900.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="897.8" y="723.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="900.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="898.2" y="707.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="901.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,062 samples, 13.10%)</title><rect x="900.1" y="915.0" width="154.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.1" y="926.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,062 samples, 13.10%)</title><rect x="900.1" y="899.0" width="154.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.1" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,032 samples, 12.73%)</title><rect x="900.1" y="883.0" width="150.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.1" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,022 samples, 12.61%)</title><rect x="900.3" y="867.0" width="148.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.3" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,018 samples, 12.56%)</title><rect x="900.7" y="851.0" width="148.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.7" y="862.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (1,017 samples, 12.55%)</title><rect x="900.9" y="835.0" width="148.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.9" y="846.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (1,016 samples, 12.54%)</title><rect x="901.0" y="819.0" width="147.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.0" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (192 samples, 2.37%)</title><rect x="901.3" y="803.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.3" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="901.3" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="901.3" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="901.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="901.3" y="739.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="904.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (188 samples, 2.32%)</title><rect x="901.7" y="787.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.09%)</title><rect x="901.7" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="902.2" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="902.2" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.05%)</title><rect x="902.2" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="902.2" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (181 samples, 2.23%)</title><rect x="902.8" y="771.0" width="26.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.8" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (181 samples, 2.23%)</title><rect x="902.8" y="755.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.8" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (181 samples, 2.23%)</title><rect x="902.8" y="739.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.8" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (178 samples, 2.20%)</title><rect x="903.2" y="723.0" width="25.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="906.2" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="903.6" y="707.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="906.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="903.6" y="691.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="906.6" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.02%)</title><rect x="903.6" y="675.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="906.6" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.02%)</title><rect x="903.9" y="675.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="906.9" y="686.0"></text>
</g>
<g>
<title>__send (171 samples, 2.11%)</title><rect x="904.2" y="707.0" width="24.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="907.2" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (167 samples, 2.06%)</title><rect x="904.8" y="691.0" width="24.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="907.8" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (167 samples, 2.06%)</title><rect x="904.8" y="675.0" width="24.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="907.8" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="905.2" y="659.0" width="23.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="908.2" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="905.2" y="643.0" width="23.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="908.2" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (163 samples, 2.01%)</title><rect x="905.4" y="627.0" width="23.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="908.4" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (161 samples, 1.99%)</title><rect x="905.7" y="611.0" width="23.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="908.7" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.95%)</title><rect x="906.1" y="595.0" width="23.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="909.1" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.95%)</title><rect x="906.1" y="579.0" width="23.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="909.1" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="908.1" y="563.0" width="21.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="911.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (135 samples, 1.67%)</title><rect x="909.4" y="547.0" width="19.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="912.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (131 samples, 1.62%)</title><rect x="910.0" y="531.0" width="19.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.51%)</title><rect x="911.3" y="515.0" width="17.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="914.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="913.7" y="499.0" width="15.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="916.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.30%)</title><rect x="913.8" y="483.0" width="15.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="916.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 1.27%)</title><rect x="914.1" y="467.0" width="15.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="917.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="914.8" y="451.0" width="14.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="917.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.17%)</title><rect x="915.3" y="435.0" width="13.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="918.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.16%)</title><rect x="915.4" y="419.0" width="13.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="918.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="915.7" y="403.0" width="13.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="918.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="915.9" y="387.0" width="13.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="918.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="916.1" y="371.0" width="13.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="919.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.05%)</title><rect x="916.7" y="355.0" width="12.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="919.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.99%)</title><rect x="917.5" y="339.0" width="11.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="920.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="918.0" y="323.0" width="11.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="921.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="918.5" y="307.0" width="10.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="918.6" y="291.0" width="10.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="921.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="918.6" y="275.0" width="10.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="921.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.83%)</title><rect x="919.3" y="259.0" width="9.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="922.3" y="270.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="919.8" y="243.0" width="9.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="922.8" y="254.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="920.1" y="227.0" width="9.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="923.1" y="238.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="920.2" y="211.0" width="8.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="923.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.73%)</title><rect x="920.5" y="195.0" width="8.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="923.5" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.70%)</title><rect x="920.8" y="179.0" width="8.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="923.8" y="190.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.67%)</title><rect x="921.2" y="163.0" width="7.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="924.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.60%)</title><rect x="922.0" y="147.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="923.3" y="131.0" width="5.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="926.3" y="142.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.41%)</title><rect x="924.3" y="115.0" width="4.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="927.3" y="126.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="924.6" y="99.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="927.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="924.9" y="83.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="927.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="928.5" y="67.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="931.5" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="928.5" y="51.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="931.5" y="62.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="928.7" y="35.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="931.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="929.4" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (798 samples, 9.85%)</title><rect x="929.8" y="803.0" width="116.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.8" y="814.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.19%)</title><rect x="930.0" y="787.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.19%)</title><rect x="930.0" y="771.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (15 samples, 0.19%)</title><rect x="930.0" y="755.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (593 samples, 7.32%)</title><rect x="932.2" y="787.0" width="86.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.2" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (4 samples, 0.05%)</title><rect x="932.2" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.02%)</title><rect x="932.5" y="755.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="932.5" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="935.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="932.5" y="723.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="932.5" y="707.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (589 samples, 7.27%)</title><rect x="932.7" y="771.0" width="85.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.7" y="782.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (589 samples, 7.27%)</title><rect x="932.7" y="755.0" width="85.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.7" y="766.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (126 samples, 1.55%)</title><rect x="932.7" y="739.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (126 samples, 1.55%)</title><rect x="932.7" y="723.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.7" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.02%)</title><rect x="933.3" y="707.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="936.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="933.6" y="707.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="936.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="933.6" y="691.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="936.6" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.17%)</title><rect x="933.6" y="675.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="936.6" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="934.6" y="659.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="937.6" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="934.9" y="659.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="937.9" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.02%)</title><rect x="935.4" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="938.4" y="670.0"></text>
</g>
<g>
<title>__GI___recv (104 samples, 1.28%)</title><rect x="935.8" y="707.0" width="15.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="938.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="937.7" y="691.0" width="13.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="940.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="937.7" y="675.0" width="13.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="940.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="939.0" y="659.0" width="11.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="942.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.00%)</title><rect x="939.1" y="643.0" width="11.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="942.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="939.6" y="627.0" width="11.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="942.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 0.93%)</title><rect x="940.0" y="611.0" width="10.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="943.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="940.5" y="595.0" width="10.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="943.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.75%)</title><rect x="942.1" y="579.0" width="8.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="945.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.62%)</title><rect x="943.7" y="563.0" width="7.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="946.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.47%)</title><rect x="945.4" y="547.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="948.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="947.4" y="531.0" width="3.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="950.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="948.9" y="515.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="951.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="950.2" y="499.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="953.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="483.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="953.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="467.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="953.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="451.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="953.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="435.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="953.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="419.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="953.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="403.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="953.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="950.7" y="387.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="953.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (42 samples, 0.52%)</title><rect x="951.1" y="739.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.12%)</title><rect x="951.2" y="723.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="951.8" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="952.0" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="952.4" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="952.7" y="723.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="955.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (14 samples, 0.17%)</title><rect x="953.4" y="723.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="953.7" y="707.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.12%)</title><rect x="954.0" y="691.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="955.5" y="723.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.06%)</title><rect x="955.7" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="955.7" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="955.7" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (5 samples, 0.06%)</title><rect x="956.5" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="956.5" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (33 samples, 0.41%)</title><rect x="957.2" y="739.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="958.7" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.21%)</title><rect x="959.2" y="723.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.04%)</title><rect x="959.4" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.02%)</title><rect x="959.5" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="959.8" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="959.8" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.06%)</title><rect x="960.1" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="960.4" y="675.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="963.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.07%)</title><rect x="960.8" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.07%)</title><rect x="960.8" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="961.1" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.02%)</title><rect x="961.7" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="961.7" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.06%)</title><rect x="962.0" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="962.0" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="962.0" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (54 samples, 0.67%)</title><rect x="962.7" y="739.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.7" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (52 samples, 0.64%)</title><rect x="963.0" y="723.0" width="7.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="966.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="966.1" y="707.0" width="4.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="969.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="966.1" y="691.0" width="4.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="969.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="967.7" y="675.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="970.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="968.0" y="659.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="971.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="968.1" y="643.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="971.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="968.7" y="627.0" width="1.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="971.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="969.4" y="611.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="972.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="969.7" y="595.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="972.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (329 samples, 4.06%)</title><rect x="970.6" y="739.0" width="47.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.6" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (8 samples, 0.10%)</title><rect x="971.2" y="723.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="974.2" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="971.8" y="707.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="974.8" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="972.1" y="691.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.1" y="702.0"></text>
</g>
<g>
<title>__send (315 samples, 3.89%)</title><rect x="972.5" y="723.0" width="45.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="975.5" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (308 samples, 3.80%)</title><rect x="973.5" y="707.0" width="44.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="976.5" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (308 samples, 3.80%)</title><rect x="973.5" y="691.0" width="44.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="976.5" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (301 samples, 3.71%)</title><rect x="974.5" y="675.0" width="43.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="977.5" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (300 samples, 3.70%)</title><rect x="974.7" y="659.0" width="43.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="977.7" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (298 samples, 3.68%)</title><rect x="975.0" y="643.0" width="43.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="978.0" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (295 samples, 3.64%)</title><rect x="975.4" y="627.0" width="43.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="978.4" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (293 samples, 3.62%)</title><rect x="975.7" y="611.0" width="42.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="978.7" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (291 samples, 3.59%)</title><rect x="976.0" y="595.0" width="42.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="979.0" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (281 samples, 3.47%)</title><rect x="977.4" y="579.0" width="41.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="980.4" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (274 samples, 3.38%)</title><rect x="978.5" y="563.0" width="39.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="981.5" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (262 samples, 3.23%)</title><rect x="980.2" y="547.0" width="38.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="983.2" y="558.0">[un..</text>
</g>
<g>
<title>[unknown] (244 samples, 3.01%)</title><rect x="982.8" y="531.0" width="35.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="985.8" y="542.0">[un..</text>
</g>
<g>
<title>[unknown] (220 samples, 2.71%)</title><rect x="986.3" y="515.0" width="32.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="989.3" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (218 samples, 2.69%)</title><rect x="986.6" y="499.0" width="31.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="989.6" y="510.0">[u..</text>
</g>
<g>
<title>[unknown] (214 samples, 2.64%)</title><rect x="987.2" y="483.0" width="31.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="990.2" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (207 samples, 2.55%)</title><rect x="988.2" y="467.0" width="30.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="991.2" y="478.0">[u..</text>
</g>
<g>
<title>[unknown] (206 samples, 2.54%)</title><rect x="988.4" y="451.0" width="30.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="991.4" y="462.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.47%)</title><rect x="989.2" y="435.0" width="29.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="992.2" y="446.0">[u..</text>
</g>
<g>
<title>[unknown] (195 samples, 2.41%)</title><rect x="990.0" y="419.0" width="28.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="993.0" y="430.0">[u..</text>
</g>
<g>
<title>[unknown] (195 samples, 2.41%)</title><rect x="990.0" y="403.0" width="28.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="993.0" y="414.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.33%)</title><rect x="990.8" y="387.0" width="27.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="993.8" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (184 samples, 2.27%)</title><rect x="991.6" y="371.0" width="26.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="994.6" y="382.0">[..</text>
</g>
<g>
<title>[unknown] (174 samples, 2.15%)</title><rect x="993.0" y="355.0" width="25.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="996.0" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.09%)</title><rect x="993.7" y="339.0" width="24.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="996.7" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (165 samples, 2.04%)</title><rect x="994.3" y="323.0" width="24.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="997.3" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="994.5" y="307.0" width="23.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="997.5" y="318.0">[..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.02%)</title><rect x="994.5" y="291.0" width="23.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="997.5" y="302.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.00%)</title><rect x="994.8" y="275.0" width="23.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="997.8" y="286.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 1.95%)</title><rect x="995.3" y="259.0" width="23.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="998.3" y="270.0">[..</text>
</g>
<g>
<title>[unknown] (157 samples, 1.94%)</title><rect x="995.5" y="243.0" width="22.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="998.5" y="254.0">[..</text>
</g>
<g>
<title>[unknown] (156 samples, 1.92%)</title><rect x="995.6" y="227.0" width="22.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="998.6" y="238.0">[..</text>
</g>
<g>
<title>[unknown] (153 samples, 1.89%)</title><rect x="996.1" y="211.0" width="22.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="999.1" y="222.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="997.1" y="195.0" width="21.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1000.1" y="206.0">[..</text>
</g>
<g>
<title>[unknown] (138 samples, 1.70%)</title><rect x="998.3" y="179.0" width="20.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1001.3" y="190.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="999.6" y="163.0" width="18.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1002.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.37%)</title><rect x="1002.2" y="147.0" width="16.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1005.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.18%)</title><rect x="1004.4" y="131.0" width="14.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1007.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="1005.1" y="115.0" width="13.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1008.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.11%)</title><rect x="1005.2" y="99.0" width="13.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1008.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1018.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (157 samples, 1.94%)</title><rect x="1018.8" y="787.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.8" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (148 samples, 1.83%)</title><rect x="1018.8" y="771.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.8" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (144 samples, 1.78%)</title><rect x="1018.8" y="755.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (137 samples, 1.69%)</title><rect x="1018.8" y="739.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (137 samples, 1.69%)</title><rect x="1018.8" y="723.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.8" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (126 samples, 1.55%)</title><rect x="1018.9" y="707.0" width="18.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1021.9" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="1018.9" y="691.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1021.9" y="702.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="1019.2" y="691.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1022.2" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.04%)</title><rect x="1019.8" y="691.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1022.8" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (113 samples, 1.39%)</title><rect x="1020.4" y="691.0" width="16.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.4" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.02%)</title><rect x="1020.7" y="675.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1023.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.02%)</title><rect x="1021.0" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (89 samples, 1.10%)</title><rect x="1021.3" y="675.0" width="12.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.3" y="686.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="1021.4" y="659.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1024.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.02%)</title><rect x="1021.7" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (84 samples, 1.04%)</title><rect x="1022.0" y="659.0" width="12.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1025.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (84 samples, 1.04%)</title><rect x="1022.0" y="643.0" width="12.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.0" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="1022.0" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (76 samples, 0.94%)</title><rect x="1022.7" y="627.0" width="11.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.7" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1024.2" y="611.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1027.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.05%)</title><rect x="1024.8" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1027.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.02%)</title><rect x="1025.0" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1028.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.02%)</title><rect x="1025.0" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1028.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="1025.5" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1028.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="1025.5" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1028.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.02%)</title><rect x="1025.5" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1028.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (51 samples, 0.63%)</title><rect x="1025.9" y="611.0" width="7.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1028.9" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (47 samples, 0.58%)</title><rect x="1026.2" y="595.0" width="6.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1029.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="1026.4" y="579.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (41 samples, 0.51%)</title><rect x="1026.6" y="579.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 0.25%)</title><rect x="1029.7" y="563.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1032.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="1030.7" y="547.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.7" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (7 samples, 0.09%)</title><rect x="1031.6" y="547.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1034.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.02%)</title><rect x="1032.6" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.02%)</title><rect x="1033.1" y="595.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (16 samples, 0.20%)</title><rect x="1034.4" y="675.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1037.4" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.02%)</title><rect x="1034.5" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.5" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.11%)</title><rect x="1035.2" y="659.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1038.2" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.07%)</title><rect x="1035.7" y="643.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="1036.1" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1039.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="1036.1" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.1" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.04%)</title><rect x="1036.8" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1039.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1037.3" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1040.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1037.3" y="691.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1040.3" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="1037.3" y="675.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1040.3" y="686.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="1037.9" y="707.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1040.9" y="718.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.02%)</title><rect x="1038.4" y="707.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (6 samples, 0.07%)</title><rect x="1038.7" y="739.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (4 samples, 0.05%)</title><rect x="1039.0" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="1039.0" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="1039.0" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.02%)</title><rect x="1039.0" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.0" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="1039.3" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1039.3" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1039.3" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1039.3" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (4 samples, 0.05%)</title><rect x="1039.8" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="1039.9" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1039.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1039.9" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (9 samples, 0.11%)</title><rect x="1040.3" y="771.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.11%)</title><rect x="1040.3" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.05%)</title><rect x="1041.1" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (30 samples, 0.37%)</title><rect x="1041.6" y="787.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.02%)</title><rect x="1043.8" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.8" y="782.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (2 samples, 0.02%)</title><rect x="1044.1" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.06%)</title><rect x="1044.4" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.06%)</title><rect x="1044.4" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.04%)</title><rect x="1044.4" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.02%)</title><rect x="1044.6" y="723.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="1044.6" y="707.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.02%)</title><rect x="1044.6" y="691.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (2 samples, 0.02%)</title><rect x="1044.8" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.02%)</title><rect x="1045.3" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (15 samples, 0.19%)</title><rect x="1046.0" y="803.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15 samples, 0.19%)</title><rect x="1046.0" y="787.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (15 samples, 0.19%)</title><rect x="1046.0" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.17%)</title><rect x="1046.2" y="755.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.17%)</title><rect x="1046.2" y="739.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (13 samples, 0.16%)</title><rect x="1046.3" y="723.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.05%)</title><rect x="1046.9" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.02%)</title><rect x="1047.5" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.5" y="718.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.04%)</title><rect x="1047.8" y="707.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1050.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.replicas (5 samples, 0.06%)</title><rect x="1048.2" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.05%)</title><rect x="1049.1" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1049.7" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="1049.9" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="1049.9" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.37%)</title><rect x="1050.4" y="883.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 0.37%)</title><rect x="1050.4" y="867.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1050.5" y="851.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1053.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1050.5" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1053.5" y="846.0"></text>
</g>
<g>
<title>__GI___recv (27 samples, 0.33%)</title><rect x="1050.8" y="851.0" width="3.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1053.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1051.8" y="835.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1054.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1051.8" y="819.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1054.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="1052.1" y="803.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1055.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="1052.1" y="787.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1055.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.22%)</title><rect x="1052.1" y="771.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1055.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="1052.3" y="755.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1055.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="1052.6" y="739.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1055.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.17%)</title><rect x="1052.7" y="723.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1055.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="1053.0" y="707.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1056.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1054.0" y="691.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1057.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1054.0" y="675.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1057.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="1054.2" y="659.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1057.2" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=29993] (455 samples, 5.61%)</title><rect x="1054.7" y="947.0" width="66.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1057.7" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1054.9" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.9" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1054.9" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.9" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1054.9" y="899.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.9" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1054.9" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1057.9" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.02%)</title><rect x="1055.2" y="931.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1058.2" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.02%)</title><rect x="1055.5" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1058.5" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (448 samples, 5.53%)</title><rect x="1055.8" y="931.0" width="65.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.8" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (39 samples, 0.48%)</title><rect x="1055.8" y="915.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (39 samples, 0.48%)</title><rect x="1055.8" y="899.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="1055.9" y="883.0" width="5.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1058.9" y="894.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 0.44%)</title><rect x="1055.9" y="867.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1058.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="1056.6" y="851.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1059.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="1056.6" y="835.0" width="4.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1059.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="1056.9" y="819.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="1056.9" y="803.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1059.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="1056.9" y="787.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1059.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.32%)</title><rect x="1057.4" y="771.0" width="3.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1060.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.25%)</title><rect x="1058.2" y="755.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1061.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="1059.4" y="739.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1062.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1060.1" y="723.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1063.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="1060.6" y="707.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1063.6" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1061.2" y="883.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1064.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (409 samples, 5.05%)</title><rect x="1061.4" y="915.0" width="59.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.4" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (406 samples, 5.01%)</title><rect x="1061.7" y="899.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.7" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (359 samples, 4.43%)</title><rect x="1061.7" y="883.0" width="52.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.7" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (342 samples, 4.22%)</title><rect x="1062.0" y="867.0" width="49.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.0" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (340 samples, 4.19%)</title><rect x="1062.3" y="851.0" width="49.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.3" y="862.0">one/n..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (339 samples, 4.18%)</title><rect x="1062.5" y="835.0" width="49.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.5" y="846.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.02%)</title><rect x="1062.5" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (337 samples, 4.16%)</title><rect x="1062.8" y="819.0" width="49.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.8" y="830.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (165 samples, 2.04%)</title><rect x="1062.9" y="803.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.9" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="1063.2" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1063.2" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="1063.2" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="1063.5" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1063.5" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1066.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (156 samples, 1.92%)</title><rect x="1063.8" y="787.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.8" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="1063.8" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.02%)</title><rect x="1064.1" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="1064.1" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="1064.1" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="1064.1" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (152 samples, 1.88%)</title><rect x="1064.4" y="771.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.4" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (152 samples, 1.88%)</title><rect x="1064.4" y="755.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.4" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.02%)</title><rect x="1064.5" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1067.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (149 samples, 1.84%)</title><rect x="1064.8" y="739.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.8" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (148 samples, 1.83%)</title><rect x="1064.9" y="723.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.9" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1065.7" y="707.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1068.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1065.7" y="691.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1068.7" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="1065.7" y="675.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1068.7" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.02%)</title><rect x="1066.4" y="675.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1069.4" y="686.0"></text>
</g>
<g>
<title>__send (136 samples, 1.68%)</title><rect x="1066.7" y="707.0" width="19.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1069.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="1067.7" y="691.0" width="18.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1070.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="1067.7" y="675.0" width="18.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1070.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.54%)</title><rect x="1068.3" y="659.0" width="18.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1071.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.53%)</title><rect x="1068.4" y="643.0" width="18.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1071.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.53%)</title><rect x="1068.4" y="627.0" width="18.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1071.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.46%)</title><rect x="1069.3" y="611.0" width="17.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1072.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.43%)</title><rect x="1069.6" y="595.0" width="16.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1072.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.41%)</title><rect x="1069.9" y="579.0" width="16.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1072.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.36%)</title><rect x="1070.5" y="563.0" width="16.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1073.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.33%)</title><rect x="1070.8" y="547.0" width="15.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1073.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.28%)</title><rect x="1071.3" y="531.0" width="15.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1074.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.21%)</title><rect x="1072.2" y="515.0" width="14.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1075.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.16%)</title><rect x="1072.8" y="499.0" width="13.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1075.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.12%)</title><rect x="1073.2" y="483.0" width="13.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1076.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.09%)</title><rect x="1073.7" y="467.0" width="12.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1076.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="1074.0" y="451.0" width="12.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1077.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="1074.0" y="435.0" width="12.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1077.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="1074.3" y="419.0" width="12.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1077.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="1074.5" y="403.0" width="12.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1077.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="1074.5" y="387.0" width="12.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1077.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.01%)</title><rect x="1074.5" y="371.0" width="12.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1077.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.99%)</title><rect x="1074.8" y="355.0" width="11.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1077.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 0.95%)</title><rect x="1075.3" y="339.0" width="11.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1078.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.90%)</title><rect x="1075.9" y="323.0" width="10.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1078.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="1076.0" y="307.0" width="10.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1079.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.86%)</title><rect x="1076.3" y="291.0" width="10.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1079.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="1076.4" y="275.0" width="10.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1079.4" y="286.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="1076.9" y="259.0" width="9.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1079.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="1076.9" y="243.0" width="9.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1079.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.80%)</title><rect x="1077.0" y="227.0" width="9.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1080.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.76%)</title><rect x="1077.5" y="211.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1080.5" y="222.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="1077.8" y="195.0" width="8.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1080.8" y="206.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.70%)</title><rect x="1078.2" y="179.0" width="8.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1081.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.62%)</title><rect x="1079.2" y="163.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1082.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.60%)</title><rect x="1079.4" y="147.0" width="7.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1082.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.54%)</title><rect x="1080.1" y="131.0" width="6.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1083.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.46%)</title><rect x="1081.1" y="115.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1084.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="1081.5" y="99.0" width="5.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1084.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.42%)</title><rect x="1081.5" y="83.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1084.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1086.0" y="67.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1089.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1086.2" y="51.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1089.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="1086.5" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="1086.5" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1086.5" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.11%)</title><rect x="1086.9" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.02%)</title><rect x="1087.9" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (161 samples, 1.99%)</title><rect x="1088.2" y="803.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.2" y="814.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1088.2" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.toBytes (2 samples, 0.02%)</title><rect x="1088.5" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1091.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="1088.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1088.5" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (142 samples, 1.75%)</title><rect x="1088.8" y="787.0" width="20.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (141 samples, 1.74%)</title><rect x="1088.8" y="771.0" width="20.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (140 samples, 1.73%)</title><rect x="1088.8" y="755.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 1.67%)</title><rect x="1088.8" y="739.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (135 samples, 1.67%)</title><rect x="1088.8" y="723.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.8" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (130 samples, 1.60%)</title><rect x="1089.0" y="707.0" width="18.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1092.0" y="718.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.02%)</title><rect x="1089.3" y="691.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1092.3" y="702.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="1089.5" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1092.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="1090.1" y="691.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1093.1" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.02%)</title><rect x="1090.7" y="691.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1093.7" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (113 samples, 1.39%)</title><rect x="1091.3" y="691.0" width="16.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.3" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.05%)</title><rect x="1091.7" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="1092.3" y="675.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1095.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (86 samples, 1.06%)</title><rect x="1092.9" y="675.0" width="12.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1095.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (82 samples, 1.01%)</title><rect x="1093.3" y="659.0" width="12.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (78 samples, 0.96%)</title><rect x="1093.6" y="643.0" width="11.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (67 samples, 0.83%)</title><rect x="1094.1" y="627.0" width="9.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1097.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="1094.9" y="611.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1097.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.06%)</title><rect x="1095.4" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.02%)</title><rect x="1095.5" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1098.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="1095.8" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1098.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="1096.1" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1099.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.05%)</title><rect x="1096.4" y="611.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="1096.7" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1099.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="1097.0" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1100.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (40 samples, 0.49%)</title><rect x="1097.4" y="611.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (35 samples, 0.43%)</title><rect x="1097.6" y="595.0" width="5.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1100.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (33 samples, 0.41%)</title><rect x="1097.7" y="579.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.7" y="590.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="1100.2" y="563.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1103.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.17%)</title><rect x="1100.5" y="563.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (3 samples, 0.04%)</title><rect x="1101.0" y="547.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1104.0" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.05%)</title><rect x="1101.6" y="547.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1104.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="1102.2" y="547.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1105.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.04%)</title><rect x="1102.8" y="595.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="1103.4" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="1103.8" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1106.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.02%)</title><rect x="1104.1" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.02%)</title><rect x="1104.7" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.02%)</title><rect x="1105.0" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1108.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.02%)</title><rect x="1105.4" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (14 samples, 0.17%)</title><rect x="1105.7" y="675.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.7" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.11%)</title><rect x="1106.3" y="659.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1109.3" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.06%)</title><rect x="1106.9" y="643.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1106.9" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1109.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1106.9" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (2 samples, 0.02%)</title><rect x="1108.5" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (2 samples, 0.02%)</title><rect x="1108.5" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="1108.5" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="1108.5" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="1108.5" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="1108.5" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.fromBytes (3 samples, 0.04%)</title><rect x="1108.8" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/TimestampRecord.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1108.8" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (15 samples, 0.19%)</title><rect x="1109.5" y="787.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1112.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="1110.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.07%)</title><rect x="1111.8" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1112.0" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1112.0" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.02%)</title><rect x="1112.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (2 samples, 0.02%)</title><rect x="1113.0" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1116.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1113.3" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="1113.4" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (47 samples, 0.58%)</title><rect x="1114.0" y="883.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 0.58%)</title><rect x="1114.0" y="867.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1114.1" y="851.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1117.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1114.1" y="835.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1117.1" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="1114.1" y="819.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1117.1" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="1114.7" y="803.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1117.7" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="1114.7" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.7" y="798.0"></text>
</g>
<g>
<title>__GI___recv (39 samples, 0.48%)</title><rect x="1115.2" y="851.0" width="5.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1118.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="1116.3" y="835.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1119.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.38%)</title><rect x="1116.3" y="819.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1119.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="1116.6" y="803.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1119.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.36%)</title><rect x="1116.6" y="787.0" width="4.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1119.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1116.8" y="771.0" width="4.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1119.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1116.8" y="755.0" width="4.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1119.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="1117.5" y="739.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1120.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="1118.7" y="723.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1121.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="1119.4" y="707.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1122.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.12%)</title><rect x="1119.4" y="691.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1122.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1120.0" y="675.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1123.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1120.4" y="659.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1123.4" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=30017] (459 samples, 5.66%)</title><rect x="1121.0" y="947.0" width="66.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1124.0" y="958.0">[NIO Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1121.1" y="931.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.1" y="942.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.02%)</title><rect x="1121.4" y="931.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1124.4" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (453 samples, 5.59%)</title><rect x="1121.9" y="931.0" width="65.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.9" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (51 samples, 0.63%)</title><rect x="1122.4" y="915.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (51 samples, 0.63%)</title><rect x="1122.4" y="899.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.58%)</title><rect x="1122.4" y="883.0" width="6.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1125.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (47 samples, 0.58%)</title><rect x="1122.4" y="867.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1125.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="1123.5" y="851.0" width="5.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1126.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.49%)</title><rect x="1123.5" y="835.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1126.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.46%)</title><rect x="1123.9" y="819.0" width="5.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1126.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.46%)</title><rect x="1123.9" y="803.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1126.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.44%)</title><rect x="1124.0" y="787.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1127.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="1125.2" y="771.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1128.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="1126.2" y="755.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1129.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.23%)</title><rect x="1126.5" y="739.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1129.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.10%)</title><rect x="1128.1" y="723.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1131.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1128.3" y="707.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1131.3" y="718.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="1129.3" y="883.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1132.3" y="894.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="1129.6" y="883.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1132.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (396 samples, 4.89%)</title><rect x="1129.9" y="915.0" width="57.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.9" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (393 samples, 4.85%)</title><rect x="1130.0" y="899.0" width="57.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.0" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (351 samples, 4.33%)</title><rect x="1130.0" y="883.0" width="51.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.0" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (334 samples, 4.12%)</title><rect x="1130.3" y="867.0" width="48.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.3" y="878.0">one/..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1130.5" y="851.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1133.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (331 samples, 4.08%)</title><rect x="1130.7" y="851.0" width="48.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.7" y="862.0">one/..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.handleDefault (330 samples, 4.07%)</title><rect x="1130.9" y="835.0" width="48.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.9" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.entity (330 samples, 4.07%)</title><rect x="1130.9" y="819.0" width="48.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.9" y="830.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.02%)</title><rect x="1131.3" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.02%)</title><rect x="1131.3" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 2.09%)</title><rect x="1131.6" y="803.0" width="24.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.6" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (164 samples, 2.02%)</title><rect x="1131.9" y="787.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.9" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.05%)</title><rect x="1131.9" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.02%)</title><rect x="1132.2" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="1132.2" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.02%)</title><rect x="1132.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="1132.2" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (160 samples, 1.97%)</title><rect x="1132.5" y="771.0" width="23.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (160 samples, 1.97%)</title><rect x="1132.5" y="755.0" width="23.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (159 samples, 1.96%)</title><rect x="1132.6" y="739.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (159 samples, 1.96%)</title><rect x="1132.6" y="723.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.6" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1132.8" y="707.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1135.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1132.8" y="691.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1135.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="1132.8" y="675.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1135.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="1132.9" y="659.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1135.9" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="1133.1" y="643.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1136.1" y="654.0"></text>
</g>
<g>
<title>__send (152 samples, 1.88%)</title><rect x="1133.7" y="707.0" width="22.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1136.7" y="718.0">_..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="1134.2" y="691.0" width="21.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1137.2" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 1.83%)</title><rect x="1134.2" y="675.0" width="21.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1137.2" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 1.80%)</title><rect x="1134.5" y="659.0" width="21.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1137.5" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.78%)</title><rect x="1134.8" y="643.0" width="21.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1137.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="1135.1" y="627.0" width="20.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1138.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (142 samples, 1.75%)</title><rect x="1135.1" y="611.0" width="20.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1138.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (140 samples, 1.73%)</title><rect x="1135.4" y="595.0" width="20.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1138.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (138 samples, 1.70%)</title><rect x="1135.7" y="579.0" width="20.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1138.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (129 samples, 1.59%)</title><rect x="1137.0" y="563.0" width="18.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1140.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.51%)</title><rect x="1138.0" y="547.0" width="17.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1141.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.39%)</title><rect x="1139.3" y="531.0" width="16.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1142.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.31%)</title><rect x="1140.4" y="515.0" width="15.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1143.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.20%)</title><rect x="1141.7" y="499.0" width="14.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1144.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.14%)</title><rect x="1142.4" y="483.0" width="13.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1145.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.10%)</title><rect x="1142.8" y="467.0" width="13.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1145.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.07%)</title><rect x="1143.1" y="451.0" width="12.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1146.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.06%)</title><rect x="1143.3" y="435.0" width="12.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1146.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.04%)</title><rect x="1143.6" y="419.0" width="12.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1146.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 0.96%)</title><rect x="1144.4" y="403.0" width="11.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1147.4" y="414.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 0.94%)</title><rect x="1144.7" y="387.0" width="11.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1147.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.89%)</title><rect x="1145.3" y="371.0" width="10.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1148.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.85%)</title><rect x="1145.7" y="355.0" width="10.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1148.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.84%)</title><rect x="1145.9" y="339.0" width="9.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1148.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 0.81%)</title><rect x="1146.2" y="323.0" width="9.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1149.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="1146.5" y="307.0" width="9.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1149.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.79%)</title><rect x="1146.5" y="291.0" width="9.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1149.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.78%)</title><rect x="1146.6" y="275.0" width="9.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1149.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.74%)</title><rect x="1147.1" y="259.0" width="8.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1150.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.72%)</title><rect x="1147.3" y="243.0" width="8.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1150.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.72%)</title><rect x="1147.3" y="227.0" width="8.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1150.3" y="238.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.72%)</title><rect x="1147.3" y="211.0" width="8.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1150.3" y="222.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.72%)</title><rect x="1147.3" y="195.0" width="8.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1150.3" y="206.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.67%)</title><rect x="1147.9" y="179.0" width="7.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1150.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.59%)</title><rect x="1148.8" y="163.0" width="7.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1151.8" y="174.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.54%)</title><rect x="1149.4" y="147.0" width="6.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1152.4" y="158.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.46%)</title><rect x="1150.4" y="131.0" width="5.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1153.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="1152.1" y="115.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1155.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.30%)</title><rect x="1152.3" y="99.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1155.3" y="110.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.28%)</title><rect x="1152.4" y="83.0" width="3.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1155.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="1155.8" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="1155.9" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="1155.9" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="1156.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="1156.2" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="1156.2" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.05%)</title><rect x="1156.5" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1156.8" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1156.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.coordinateGet (148 samples, 1.83%)</title><rect x="1157.1" y="803.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.1" y="814.0">r..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="1157.1" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="1157.1" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="1157.1" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1157.1" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.getWithTimestampMethodWrapper (133 samples, 1.64%)</title><rect x="1157.5" y="787.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.copyAndExtractWithTimestampFromByteBuffer (131 samples, 1.62%)</title><rect x="1157.5" y="771.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.getRecordWithTimestamp (130 samples, 1.60%)</title><rect x="1157.5" y="755.0" width="19.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.5" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (126 samples, 1.55%)</title><rect x="1157.5" y="739.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.5" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (126 samples, 1.55%)</title><rect x="1157.5" y="723.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.5" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (115 samples, 1.42%)</title><rect x="1157.8" y="707.0" width="16.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1160.8" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.02%)</title><rect x="1158.0" y="691.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1161.0" y="702.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.05%)</title><rect x="1158.4" y="691.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1161.4" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.02%)</title><rect x="1159.1" y="691.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1162.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.04%)</title><rect x="1159.4" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.02%)</title><rect x="1160.0" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.0" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (98 samples, 1.21%)</title><rect x="1160.3" y="691.0" width="14.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.3" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.02%)</title><rect x="1160.7" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (69 samples, 0.85%)</title><rect x="1161.6" y="675.0" width="10.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (64 samples, 0.79%)</title><rect x="1162.0" y="659.0" width="9.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (60 samples, 0.74%)</title><rect x="1162.2" y="643.0" width="8.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.2" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="1162.2" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.2" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="1162.5" y="627.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1165.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (52 samples, 0.64%)</title><rect x="1163.1" y="627.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1163.4" y="611.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1166.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.04%)</title><rect x="1163.9" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.02%)</title><rect x="1164.4" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.02%)</title><rect x="1164.4" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (35 samples, 0.43%)</title><rect x="1164.8" y="611.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (30 samples, 0.37%)</title><rect x="1165.2" y="595.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1168.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (2 samples, 0.02%)</title><rect x="1165.4" y="579.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1168.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 0.30%)</title><rect x="1165.7" y="579.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.16%)</title><rect x="1167.3" y="563.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1531558202569273630.so (4 samples, 0.05%)</title><rect x="1167.9" y="547.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1170.9" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.02%)</title><rect x="1168.5" y="547.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1171.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1168.7" y="547.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1171.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="1169.2" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.02%)</title><rect x="1170.2" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (3 samples, 0.04%)</title><rect x="1170.9" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.02%)</title><rect x="1171.4" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (18 samples, 0.22%)</title><rect x="1171.8" y="675.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.8" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.02%)</title><rect x="1172.4" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.4" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.11%)</title><rect x="1173.0" y="659.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1176.0" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.11%)</title><rect x="1173.0" y="643.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="1173.1" y="627.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.07%)</title><rect x="1173.1" y="611.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.1" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.04%)</title><rect x="1173.3" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.3" y="606.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="1173.7" y="595.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1176.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1174.6" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1177.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="1174.6" y="691.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1177.6" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="1174.6" y="675.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1177.6" y="686.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="1175.0" y="707.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1178.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.04%)</title><rect x="1175.3" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.decompressKey (3 samples, 0.04%)</title><rect x="1175.9" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAORocksDB.copyAndExtractFromByteBuffer (2 samples, 0.02%)</title><rect x="1176.0" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.02%)</title><rect x="1176.0" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.responseWrapper (2 samples, 0.02%)</title><rect x="1176.6" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1176.6" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncHttpService.merge (12 samples, 0.15%)</title><rect x="1176.9" y="787.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="1177.6" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="1177.9" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/cluster/ClusterNodes.getNodes (2 samples, 0.02%)</title><rect x="1178.6" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1178.6" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.09%)</title><rect x="1178.9" y="867.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1178.9" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.04%)</title><rect x="1178.9" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.05%)</title><rect x="1179.4" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1180.0" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="1180.2" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="1180.2" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (2 samples, 0.02%)</title><rect x="1180.5" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.02%)</title><rect x="1180.5" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="1180.8" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="1180.8" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 0.52%)</title><rect x="1181.1" y="883.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 0.52%)</title><rect x="1181.1" y="867.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="1181.4" y="851.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1184.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="1181.4" y="835.0" width="1.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1184.4" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.09%)</title><rect x="1181.4" y="819.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="1181.4" y="803.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1184.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="1181.8" y="803.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1184.8" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="1182.4" y="819.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1185.4" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="1182.7" y="819.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>__GI___recv (29 samples, 0.36%)</title><rect x="1183.0" y="851.0" width="4.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="1183.6" y="835.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="1183.6" y="819.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="1184.8" y="803.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="1184.8" y="787.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1187.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="1184.9" y="771.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.20%)</title><rect x="1184.9" y="755.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.19%)</title><rect x="1185.0" y="739.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.15%)</title><rect x="1185.5" y="723.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1186.2" y="707.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1186.4" y="691.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.07%)</title><rect x="1186.4" y="675.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="1186.5" y="659.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.02%)</title><rect x="1187.2" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.2" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="1187.5" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1187.5" y="899.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>[tid=29924] (2 samples, 0.02%)</title><rect x="1187.8" y="947.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.8" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.02%)</title><rect x="1187.8" y="931.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.8" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.02%)</title><rect x="1187.8" y="915.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.02%)</title><rect x="1187.8" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.02%)</title><rect x="1187.8" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1187.8" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>[tid=29929] (4 samples, 0.05%)</title><rect x="1188.1" y="947.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1191.1" y="958.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.05%)</title><rect x="1188.1" y="931.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1191.1" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.05%)</title><rect x="1188.1" y="915.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.1" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.05%)</title><rect x="1188.1" y="899.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1188.1" y="883.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1188.1" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.02%)</title><rect x="1188.4" y="851.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>[tid=29933] (2 samples, 0.02%)</title><rect x="1188.7" y="947.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.7" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.02%)</title><rect x="1188.7" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.02%)</title><rect x="1188.7" y="915.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.02%)</title><rect x="1188.7" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.02%)</title><rect x="1188.7" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.02%)</title><rect x="1188.7" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.02%)</title><rect x="1188.7" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.02%)</title><rect x="1188.7" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1188.7" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.02%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.02%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>[tid=29968] (2 samples, 0.02%)</title><rect x="1189.1" y="947.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.1" y="958.0"></text>
</g>
<g>
<title>[tid=29969] (2 samples, 0.02%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.02%)</title><rect x="1189.4" y="931.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.02%)</title><rect x="1189.4" y="915.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.02%)</title><rect x="1189.4" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.02%)</title><rect x="1189.4" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1189.4" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>[tid=29970] (2 samples, 0.02%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.02%)</title><rect x="1189.7" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.7" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.02%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.02%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
</g>
</svg>
